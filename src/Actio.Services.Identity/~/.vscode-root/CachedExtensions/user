{"input":{"ourVersion":"1.37.0-insider","commit":"46cc0a1670b7047e610aaef1bf84f1190802e9ec","locale":"en","devMode":false,"absoluteFolderPath":"/home/isaquepf/.vscode-insiders/extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1562899925834},"result":[{"name":"theme-verdandi","version":"1.10.0","publisher":"be5invis","engines":{"vscode":"^1.33.0"},"displayName":"Verdandi Theme","description":"Verdandi themes for VS Code.","categories":["Themes"],"repository":{"git":"https://github.com/be5invis/vsc-theme-verdandi"},"license":"MIT","icon":"images/icon.png","contributes":{"themes":[{"label":"Verdandi","uiTheme":"vs","path":"./themes/verdandi.json"},{"label":"Verdandi Alter","uiTheme":"vs-dark","path":"./themes/verdandi-alter.json"}],"iconThemes":[{"id":"verdandi","label":"Verdandi","path":"./icons.json"}]},"devDependencies":{"onecolor":"^3.0.4"},"dependencies":{},"scripts":{"prepack":"node generate"},"uuid":"d2149167-a7c8-4dea-ad4e-8e7a7fc63f35","isBuiltin":false,"isUnderDevelopment":false,"id":"be5invis.theme-verdandi","identifier":{"value":"be5invis.theme-verdandi","_lower":"be5invis.theme-verdandi"},"extensionLocation":{"$mid":1,"fsPath":"/home/isaquepf/.vscode-insiders/extensions/be5invis.theme-verdandi-1.10.0","path":"/home/isaquepf/.vscode-insiders/extensions/be5invis.theme-verdandi-1.10.0","scheme":"file"}},{"name":"theme-bear","displayName":"Theme Bear","description":"A simple and easy to use theme","version":"1.1.0","publisher":"dahong","license":"MIT","repository":{"type":"git","url":"https://github.com/shaodahong/theme-bear"},"bugs":{"url":"https://github.com/shaodahong/theme-bear/issues","email":"darryshaw@gmail.com"},"keywords":["icon-theme","theme","bear"],"homepage":"https://github.com/shaodahong/theme-bear","icon":"icon.png","engines":{"vscode":"^1.13.0"},"categories":["Themes"],"contributes":{"themes":[{"label":"Theme Bear","uiTheme":"vs-dark","path":"./themes/bear-color-theme.json"}]},"uuid":"e2fafe48-b7d2-4403-9711-327bcf332644","isBuiltin":false,"isUnderDevelopment":false,"id":"dahong.theme-bear","identifier":{"value":"dahong.theme-bear","_lower":"dahong.theme-bear"},"extensionLocation":{"$mid":1,"fsPath":"/home/isaquepf/.vscode-insiders/extensions/dahong.theme-bear-1.1.0","path":"/home/isaquepf/.vscode-insiders/extensions/dahong.theme-bear-1.1.0","scheme":"file"}},{"name":"vscode-eslint","displayName":"ESLint","description":"Integrates ESLint JavaScript into VS Code.","version":"1.9.0","author":"Microsoft Corporation","license":"MIT","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-eslint.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-eslint/issues"},"publisher":"dbaeumer","icon":"eslint_icon.png","categories":["Programming Languages","Linters"],"keywords":["multi-root ready"],"engines":{"vscode":"^1.33.0"},"activationEvents":["*"],"main":"/home/isaquepf/.vscode-insiders/extensions/dbaeumer.vscode-eslint-1.9.0/client/out/extension","contributes":{"configuration":{"type":"object","title":"ESLint","properties":{"eslint.enable":{"scope":"resource","type":"boolean","default":true,"description":"Controls whether eslint is enabled for JavaScript files or not."},"eslint.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","description":"The package manager you use to install node modules."},"eslint.alwaysShowStatus":{"type":"boolean","default":false,"description":"Always show the ESlint status bar item.","scope":"window"},"eslint.nodePath":{"scope":"resource","type":["string","null"],"default":null,"description":"A path added to NODE_PATH when resolving the eslint module."},"eslint.options":{"scope":"resource","type":"object","default":{},"description":"The eslint options object to provide args normally passed to eslint when executed from a command line (see http://eslint.org/docs/developer-guide/nodejs-api#cliengine)."},"eslint.trace.server":{"scope":"window","anyOf":[{"type":"string","enum":["off","messages","verbose"],"default":"off"},{"type":"object","properties":{"verbosity":{"type":"string","enum":["off","messages","verbose"],"default":"off"},"format":{"type":"string","enum":["text","json"],"default":"text"}}}],"default":"off","description":"Traces the communication between VSCode and the eslint linter service."},"eslint.run":{"scope":"resource","type":"string","enum":["onSave","onType"],"default":"onType","description":"Run the linter on save (onSave) or on type (onType)"},"eslint.autoFixOnSave":{"scope":"resource","type":"boolean","default":false,"description":"Turns auto fix on save on or off."},"eslint.quiet":{"scope":"resource","type":"boolean","default":false,"description":"Turns on quiet mode, which ignores warnings."},"eslint.workingDirectories":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"directory":{"type":"string","description":"The working directory to use if a file's path start with this directory."},"changeProcessCWD":{"type":"boolean","description":"Whether the process's cwd should be changed as well."}}}]}},"eslint.validate":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"language":{"type":"string","description":"The language id to be validated by ESLint"},"autoFix":{"type":"boolean","description":"Whether auto fixes are provided for the language"}}}]},"default":["javascript","javascriptreact"],"description":"An array of language ids which should be validated by ESLint"},"eslint.provideLintTask":{"scope":"resource","type":"boolean","default":false,"description":"Controls whether a task for linting the whole workspace will be available."},"eslint.runtime":{"scope":"window","type":["string","null"],"default":null,"description":"The location of the node binary to run ESLint under."},"eslint.codeAction.disableRuleComment":{"scope":"resource","type":"object","default":{"enable":true,"location":"separateLine"},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the disable code actions."},"location":{"type":"string","enum":["separateLine","sameLine"],"default":"separateLine","description":"Configure the disable rule code action to insert the comment on the same line or a new line."}}},"eslint.codeAction.showDocumentation":{"scope":"resource","type":"object","default":{"enable":true},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the documentation code actions."}}}}},"commands":[{"title":"Fix all auto-fixable Problems","category":"ESLint","command":"eslint.executeAutofix"},{"title":"Create ESLint configuration","category":"ESLint","command":"eslint.createConfig"},{"title":"Enable ESLint","category":"ESLint","command":"eslint.enable"},{"title":"Disable ESLint","category":"ESLint","command":"eslint.disable"},{"title":"Show Output Channel","category":"ESLint","command":"eslint.showOutputChannel"}],"jsonValidation":[{"fileMatch":".eslintrc","url":"http://json.schemastore.org/eslintrc"},{"fileMatch":".eslintrc.json","url":"http://json.schemastore.org/eslintrc"}],"languages":[{"id":"ignore","filenames":[".eslintignore"]}]},"scripts":{"vscode:prepublish":"cd client && npm run update-vscode && cd .. && npm run webpack","webpack":"npm run clean && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js","webpack:dev":"npm run clean && webpack --mode none --config ./client/webpack.config.js && webpack --mode none --config ./server/webpack.config.js","compile":"tsc -b","compile:client":"tsc -b ./client/tsconfig.json","compile:server":"tsc -b ./server/tsconfig.json","watch":"tsc -b -w","clean":"rimraf client/out && rimraf server/out","postinstall":"cd client && npm install && cd ../server && npm install && cd .."},"devDependencies":{"typescript":"^3.4.5","@types/node":"^10.14.6","tslint":"^5.16.0","webpack":"^4.30.0","webpack-cli":"^3.3.2","ts-loader":"^5.3.3","merge-options":"^1.0.1","rimraf":"^2.6.3"},"uuid":"583b2b34-2c1e-4634-8c0b-0b82e283ea3a","isBuiltin":false,"isUnderDevelopment":false,"id":"dbaeumer.vscode-eslint","identifier":{"value":"dbaeumer.vscode-eslint","_lower":"dbaeumer.vscode-eslint"},"extensionLocation":{"$mid":1,"fsPath":"/home/isaquepf/.vscode-insiders/extensions/dbaeumer.vscode-eslint-1.9.0","path":"/home/isaquepf/.vscode-insiders/extensions/dbaeumer.vscode-eslint-1.9.0","scheme":"file"}},{"name":"theme-dracula","version":"2.18.0","displayName":"Dracula Official","homepage":"https://draculatheme.com/","description":"Official Dracula Theme. A dark theme for many editors, shells, and more.","publisher":"dracula-theme","license":"MIT","scripts":{"dev":"node ./scripts/dev.js","build":"node ./scripts/build.js","lint":"node ./scripts/lint.js","package":"vsce package -o ./bin/dracula.vsix","vscode:prepublish":"npm run build"},"maintainers":["Derek P Sifford <dereksifford@gmail.com>"],"contributors":["Krzysztof Wisznarewski","Daniel Ramos","Eric Jackson","Elliott Pogue","Ajit Singh","Teddy Bradford"],"repository":{"type":"git","url":"https://github.com/dracula/visual-studio-code.git"},"bugs":{"url":"https://github.com/dracula/visual-studio-code/issues"},"engines":{"vscode":"^1.13.0"},"categories":["Themes"],"keywords":["dracula","dark","theme","color-theme"],"icon":"icon.png","galleryBanner":{"color":"#3c4557","theme":"dark"},"contributes":{"themes":[{"label":"Dracula","uiTheme":"vs-dark","path":"./theme/dracula.json"},{"label":"Dracula Soft","uiTheme":"vs-dark","path":"./theme/dracula-soft.json"}]},"devDependencies":{"js-yaml":"^3.13.1","prettier":"^1.17.0","tinycolor2":"^1.4.1"},"uuid":"4e44877c-1c8d-4f9c-ba86-1372d0fbeeb1","isBuiltin":false,"isUnderDevelopment":false,"id":"dracula-theme.theme-dracula","identifier":{"value":"dracula-theme.theme-dracula","_lower":"dracula-theme.theme-dracula"},"extensionLocation":{"$mid":1,"fsPath":"/home/isaquepf/.vscode-insiders/extensions/dracula-theme.theme-dracula-2.18.0","path":"/home/isaquepf/.vscode-insiders/extensions/dracula-theme.theme-dracula-2.18.0","scheme":"file"}},{"name":"gitlens","displayName":"GitLens — Git supercharged","description":"Supercharge the Git capabilities built into Visual Studio Code — Visualize code authorship at a glance via Git blame annotations and code lens, seamlessly navigate and explore Git repositories, gain valuable insights via powerful comparison commands, and so much more","version":"9.8.5","author":{"name":"Eric Amodio","email":"eamodio@gmail.com"},"publisher":"eamodio","license":"SEE LICENSE IN LICENSE","homepage":"https://github.com/eamodio/vscode-gitlens/blob/master/README.md","bugs":{"url":"https://github.com/eamodio/vscode-gitlens/issues"},"repository":{"type":"git","url":"https://github.com/eamodio/vscode-gitlens.git"},"engines":{"vscode":"^1.31.0"},"main":"/home/isaquepf/.vscode-insiders/extensions/eamodio.gitlens-9.8.5/dist/extension","icon":"images/gitlens-icon.png","preview":false,"badges":[{"url":"https://img.shields.io/badge/vscode--dev--community-gitlens-blue.svg?logo=slack&labelColor=555555","href":"https://vscode-slack.amod.io","description":"Join us in the #gitlens channel"}],"categories":["Other"],"galleryBanner":{"color":"#8647ae","theme":"dark"},"keywords":["gitlens","git","blame","log","annotation","multi-root ready"],"activationEvents":["*"],"contributes":{"configuration":{"type":"object","title":"GitLens","properties":{"gitlens.blame.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in the gutter blame annotations","scope":"window"},"gitlens.blame.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (deduplicate) matching adjacent gutter blame annotations","scope":"window"},"gitlens.blame.dateFormat":{"type":"string","default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) in gutter blame annotations. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.blame.format":{"type":"string","default":"${message|40?} ${agoOrDate|14-}","markdownDescription":"Specifies the format of the gutter blame annotations. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.blame.dateFormat#` setting","scope":"window"},"gitlens.blame.heatmap.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a heatmap indicator in the gutter blame annotations","scope":"window"},"gitlens.blame.heatmap.location":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Adds a heatmap indicator on the left edge of the gutter blame annotations","Adds a heatmap indicator on the right edge of the gutter blame annotations"],"markdownDescription":"Specifies where the heatmap indicators will be shown in the gutter blame annotations","scope":"window"},"gitlens.blame.highlight.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to highlight lines associated with the current line","scope":"window"},"gitlens.blame.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds a gutter glyph","Adds a full-line highlight background color","Adds a decoration to the overview ruler (scroll bar)"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the associated line highlights will be shown","scope":"window"},"gitlens.blame.ignoreWhitespace":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to ignore whitespace when comparing revisions during blame operations","scope":"resource"},"gitlens.blame.separateLines":{"type":"boolean","default":true,"markdownDescription":"Specifies whether gutter blame annotations will be separated by a small gap","scope":"window"},"gitlens.blame.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the gutter blame annotations will be toggled","scope":"window"},"gitlens.codeLens.authors.command":{"type":"string","default":"gitlens.toggleFileBlame","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current committed file with the previous commit","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"markdownDescription":"Specifies the command to be executed when an _authors_ code lens is clicked","scope":"window"},"gitlens.codeLens.authors.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide an _authors_ code lens, showing number of authors of the file or code block and the most prominent author (if there is more than one)","scope":"window"},"gitlens.codeLens.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any Git code lens, by default. Use the `Toggle Git Code Lens` command (`gitlens.toggleCodeLens`) to toggle the Git code lens on and off for the current window","scope":"window"},"gitlens.codeLens.includeSingleLineSymbols":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to provide any Git code lens on symbols that span only a single line","scope":"window"},"gitlens.codeLens.recentChange.command":{"type":"string","default":"gitlens.showQuickCommitFileDetails","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current committed file with the previous commit","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"markdownDescription":"Specifies the command to be executed when a _recent change_ code lens is clicked","scope":"window"},"gitlens.codeLens.recentChange.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _recent change_ code lens, showing the author and date of the most recent commit for the file or code block","scope":"window"},"gitlens.codeLens.scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks"],"enumDescriptions":["Adds code lens at the top of the document","Adds code lens at the start of container-like symbols (modules, classes, interfaces, etc)","Adds code lens at the start of block-like symbols (functions, methods, etc) lines"]},"minItems":1,"maxItems":4,"uniqueItems":true,"markdownDescription":"Specifies where Git code lens will be shown in the document","scope":"resource"},"gitlens.codeLens.scopesByLanguage":{"type":"array","default":[{"language":"azure-pipelines","scopes":["document"]},{"language":"css","scopes":["document"]},{"language":"html","scopes":["document"]},{"language":"json","scopes":["document"]},{"language":"jsonc","scopes":["document"]},{"language":"less","scopes":["document"]},{"language":"postcss","scopes":["document"]},{"language":"python","symbolScopes":["!Module"]},{"language":"scss","scopes":["document"]},{"language":"stylus","scopes":["document"]},{"language":"vue","scopes":["document"]},{"language":"yaml","scopes":["document"]}],"items":{"type":"object","required":["language"],"properties":{"language":{"type":"string","description":"Specifies the language to which this code lens override applies"},"scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks","custom"],"enumDescriptions":["Adds code lens at the top of the document","Adds code lens at the start of container-like symbols (modules, classes, interfaces, etc)","Adds code lens at the start of block-like symbols (functions, methods, properties, etc) lines","Adds code lens at the start of symbols contained in `symbolScopes`"]},"minItems":1,"maxItems":4,"uniqueItems":true,"description":"Specifies where Git code lens will be shown in the document for the specified language"},"symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"description":"Specifies the set of document symbols where Git code lens will be shown in the document for the specified language. Must be a member of `SymbolKind`"}}},"uniqueItems":true,"markdownDescription":"Specifies where Git code lens will be shown in the document for the specified languages","scope":"resource"},"gitlens.codeLens.symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"Specifies a set of document symbols where Git code lens will or will not be shown in the document. Prefix with `!` to avoid providing a Git code lens for the symbol. Must be a member of `SymbolKind`","scope":"resource"},"gitlens.currentLine.dateFormat":{"type":"string","default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) for the current line blame annotation. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a blame annotation for the current line, by default. Use the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window","scope":"window"},"gitlens.currentLine.format":{"type":"string","default":"${author}, ${agoOrDate} • ${message}","markdownDescription":"Specifies the format of the current line blame annotation. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.currentLine.dateFormat#` setting","scope":"window"},"gitlens.currentLine.scrollable":{"type":"boolean","default":true,"markdownDescription":"Specifies whether the current line blame annotation can be scrolled into view when it is outside the viewport","scope":"window"},"gitlens.debug":{"type":"boolean","default":false,"markdownDescription":"Specifies debug mode","scope":"window"},"gitlens.defaultDateFormat":{"type":"string","default":null,"markdownDescription":"Specifies how absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.defaultDateShortFormat":{"type":"string","default":null,"markdownDescription":"Specifies how short absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.defaultDateSource":{"type":"string","default":"authored","enum":["authored","committed"],"enumDescriptions":["Uses the date when the changes were authored (i.e. originally written)","Uses the date when the changes were committed"],"markdownDescription":"Specifies whether commit dates should use the authored or committed date","scope":"window"},"gitlens.defaultDateStyle":{"type":"string","default":"relative","enum":["relative","absolute"],"enumDescriptions":["e.g. 1 day ago","e.g. July 25th, 2018 7:18pm"],"markdownDescription":"Specifies how dates will be displayed by default","scope":"window"},"gitlens.defaultGravatarsStyle":{"type":"string","default":"robohash","enum":["identicon","mp","monsterid","retro","robohash","wavatar"],"enumDescriptions":["A geometric pattern","A simple, cartoon-style silhouetted outline of a person (does not vary by email hash)","A monster with different colors, faces, etc","8-bit arcade-style pixelated faces","A robot with different colors, faces, etc","A face with differing features and backgrounds"],"markdownDescription":"Specifies the style of the gravatar default (fallback) images","scope":"window"},"gitlens.heatmap.ageThreshold":{"type":"string","default":"90","markdownDescription":"Specifies the age of the most recent change (in days) after which the gutter heatmap annotations will be cold rather than hot (i.e. will use `#gitlens.heatmap.coldColor#` instead of `#gitlens.heatmap.hotColor#`)","scope":"window"},"gitlens.heatmap.coldColor":{"type":"string","default":"#0a60f6","markdownDescription":"Specifies the base color of the gutter heatmap annotations when the most recent change is older (cold) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window"},"gitlens.heatmap.hotColor":{"type":"string","default":"#f66a0a","markdownDescription":"Specifies the base color of the gutter heatmap annotations when the most recent change is newer (hot) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window"},"gitlens.heatmap.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the gutter heatmap annotations will be toggled","scope":"window"},"gitlens.hovers.annotations.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for all lines when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for all lines when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.over":{"type":"string","default":"line","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers when showing blame annotations","scope":"window"},"gitlens.hovers.currentLine.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for the current line","scope":"window"},"gitlens.hovers.currentLine.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for the current line","scope":"window"},"gitlens.hovers.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers for the current line","scope":"window"},"gitlens.hovers.currentLine.over":{"type":"string","default":"annotation","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers for the current line","scope":"window"},"gitlens.hovers.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in hovers","scope":"window"},"gitlens.hovers.changesDiff":{"type":"string","default":"line","enum":["line","hunk"],"enumDescriptions":["Shows only the changes to the line","Shows the set of related changes"],"markdownDescription":"Specifies whether to show just the changes to the line or the set of related changes in the _changes (diff)_ hover","scope":"window"},"gitlens.hovers.detailsMarkdownFormat":{"type":"string","default":"${avatar} &nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \n\n${message}\n\n${commands}","markdownDescription":"Specifies the format (in markdown) of the _commit details_ hover. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window"},"gitlens.hovers.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers","scope":"window"},"gitlens.insiders":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to enable experimental features","scope":"window"},"gitlens.keymap":{"type":"string","default":"chorded","enum":["alternate","chorded","none"],"enumDescriptions":["Adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)","Adds a chorded set of shortcut keys that start with `Ctrl+Alt+G` (`⌥⌘G` on macOS)","No shortcut keys will be added"],"markdownDescription":"Specifies the keymap to use for GitLens shortcut keys","scope":"window"},"gitlens.liveshare.allowGuestAccess":{"type":"boolean","default":true,"description":"Specifies whether to allow guest access to GitLens features when using Visual Studio Live Share","scope":"window"},"gitlens.menus":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"editor":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"details":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"editorGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"compare":{"type":"boolean"}}}]},"editorTab":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"explorer":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"scmGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"compare":{"type":"boolean"},"openClose":{"type":"boolean"},"stash":{"type":"boolean"},"stashInline":{"type":"boolean"}}}]},"scmItem":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"},"stash":{"type":"boolean"}}}]}}}],"default":{"editor":{"blame":false,"clipboard":true,"compare":true,"details":false,"history":false,"remote":false},"editorGroup":{"blame":true,"compare":true},"editorTab":{"clipboard":true,"compare":true,"history":true,"remote":true},"explorer":{"clipboard":true,"compare":true,"history":true,"remote":true},"scmGroup":{"compare":true,"openClose":true,"stash":true,"stashInline":true},"scmItem":{"clipboard":true,"compare":true,"history":true,"remote":true,"stash":true}},"markdownDescription":"Specifies which commands will be added to which menus","scope":"window"},"gitlens.mode.active":{"type":"string","markdownDescription":"Specifies the active GitLens mode, if any","scope":"window"},"gitlens.mode.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide the active GitLens mode in the status bar","scope":"window"},"gitlens.mode.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the active GitLens mode alignment in the status bar","scope":"window"},"gitlens.modes":{"type":"object","properties":{"zen":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git code lens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show a blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"},"views":{"type":"boolean","description":"Specifies whether to show any GitLens views when this user-defined mode is active"}}},"review":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git code lens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show a blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"},"views":{"type":"boolean","description":"Specifies whether to show any GitLens views when this user-defined mode is active"}}}},"additionalProperties":{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"annotations":{"type":"string","enum":["blame","heatmap","recentChanges"],"enumDescriptions":["Shows the gutter blame annotations","Shows the gutter heatmap annotations","Shows the recently changed lines annotations"],"description":"Specifies which (if any) file annotations will be shown when this user-defined mode is active"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git code lens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show a blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"},"views":{"type":"boolean","description":"Specifies whether to show any GitLens views when this user-defined mode is active"}}},"default":{"zen":{"name":"Zen","statusBarItemName":"Zen","description":"for a zen-like experience, disables many visual features","codeLens":false,"currentLine":false,"hovers":false,"statusBar":false},"review":{"name":"Review","statusBarItemName":"Reviewing","description":"for reviewing code, enables many visual features","codeLens":true,"currentLine":true,"hovers":true}},"markdownDescription":"Specifies the user-defined GitLens modes","scope":"window"},"gitlens.outputLevel":{"type":"string","default":"errors","enum":["silent","errors","verbose","debug"],"enumDescriptions":["Logs nothing","Logs only errors","Logs all errors, warnings, and messages","Logs all errors, warnings, and messages with extra context useful for debugging"],"markdownDescription":"Specifies how much (if any) output will be sent to the GitLens output channel","scope":"window"},"gitlens.recentChanges.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds a gutter glyph","Adds a full-line highlight background color","Adds a decoration to the overview ruler (scroll bar)"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the highlights of the recently changed lines will be shown","scope":"window"},"gitlens.recentChanges.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the recently changed lines annotations will be toggled","scope":"window"},"gitlens.remotes":{"type":"array","default":null,"items":{"type":"object","required":["type","domain"],"properties":{"type":{"type":"string","enum":["Bitbucket","BitbucketServer","Custom","GitHub","GitLab"],"description":"Specifies the type of the custom remote service"},"domain":{"type":"string","description":"Specifies the domain name of the custom remote service"},"name":{"type":"string","description":"Specifies an optional friendly name for the custom remote service"},"protocol":{"type":"string","default":"https","description":"Specifies an optional url protocol for the custom remote service"},"urls":{"type":"object","required":["repository","branches","branch","commit","file","fileInCommit","fileInBranch","fileLine","fileRange"],"properties":{"repository":{"type":"string","description":"Specifies the format of a respository url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path"},"branches":{"type":"string","description":"Specifies the format of a branches url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${branch}` &mdash; branch"},"branch":{"type":"string","description":"Specifies the format of a branch url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${branch}` &mdash; branch"},"commit":{"type":"string","description":"Specifies the format of a commit url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${id}` &mdash; commit id"},"file":{"type":"string","description":"Specifies the format of a file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${line}` &mdash; formatted line information"},"fileInBranch":{"type":"string","description":"Specifies the format of a branch file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${branch}` &mdash; branch\n ${line}` &mdash; formatted line information"},"fileInCommit":{"type":"string","description":"Specifies the format of a commit file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${id}` &mdash; commit id\n ${line}` &mdash; formatted line information"},"fileLine":{"type":"string","description":"Specifies the format of a line in a file url for the custom remote service\nAvailable tokens\n ${line}` &mdash; line"},"fileRange":{"type":"string","description":"Specifies the format of a range in a file url for the custom remote service\nAvailable tokens\n ${start}` &mdash; starting line\n ${end}` &mdash; ending line"}}},"description":"Specifies the url formats of the custom remote service"}},"uniqueItems":true,"markdownDescription":"Specifies user-defined remote (code-hosting) services or custom domains for built-in remote services","scope":"resource"},"gitlens.showWhatsNewAfterUpgrades":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show What's New after upgrading to new feature releases","scope":"window"},"gitlens.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the blame alignment in the status bar","scope":"window"},"gitlens.statusBar.command":{"type":"string","default":"gitlens.showQuickCommitDetails","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.diffWithWorking","gitlens.toggleCodeLens","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current line commit with the previous","Compares the current line commit with the working tree","Toggles Git code lens","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"markdownDescription":"Specifies the command to be executed when the blame status bar item is clicked","scope":"window"},"gitlens.statusBar.dateFormat":{"type":"string","default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) in the blame information in the status bar. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide blame information in the status bar","scope":"window"},"gitlens.statusBar.format":{"type":"string","default":"${author}, ${agoOrDate}","markdownDescription":"Specifies the format of the blame information in the status bar. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.statusBar.dateFormat#` setting","scope":"window"},"gitlens.statusBar.reduceFlicker":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar \"flashing\"","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors":{"type":"string","default":"Unsaved changes (cannot determine recent change or authors)","markdownDescription":"Specifies the string to be shown in place of both the _recent change_ and _authors_ code lens when there are unsaved changes","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.recentChangeOnly":{"type":"string","default":"Unsaved changes (cannot determine recent change)","markdownDescription":"Specifies the string to be shown in place of the _recent change_ code lens when there are unsaved changes","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.authorsOnly":{"type":"string","default":"Unsaved changes (cannot determine authors)","markdownDescription":"Specifies the string to be shown in place of the _authors_ code lens when there are unsaved changes","scope":"window"},"gitlens.views.commitFileFormat":{"type":"string","default":"${file}","markdownDescription":"Specifies the format of a committed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window"},"gitlens.views.commitFileDescriptionFormat":{"type":"string","default":"${directory}${  ←  originalPath}","markdownDescription":"Specifies the description format of a committed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window"},"gitlens.views.commitFormat":{"type":"string","default":"${message}","markdownDescription":"Specifies the format of committed changes in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window"},"gitlens.views.commitDescriptionFormat":{"type":"string","default":"${changes  •  }${author}, ${agoOrDate}","markdownDescription":"Specifies the description format of committed changes in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window"},"gitlens.views.compare.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Compare_ view","scope":"window"},"gitlens.views.compare.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Compare_ view","scope":"window"},"gitlens.views.compare.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Compare_ view. Only applies when `#gitlens.views.compare.files.layout#` is set to `tree` or `auto`","scope":"window"},"gitlens.views.compare.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.compare.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Compare_ view will display files","scope":"window"},"gitlens.views.compare.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Compare_ view. Only applies when `#gitlens.views.compare.files.layout#` is set to `auto`","scope":"window"},"gitlens.views.compare.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Compare_ view","scope":"window"},"gitlens.views.defaultItemLimit":{"type":"number","default":10,"markdownDescription":"Specifies the default number of items to show in a view list. Use 0 to specify no limit","scope":"window"},"gitlens.views.pageItemLimit":{"type":"number","default":20,"markdownDescription":"Specifies the number of items to show in a each page when paginating a view list. Use 0 to specify no limit","scope":"window"},"gitlens.views.fileHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _File History_ view","scope":"window"},"gitlens.views.fileHistory.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _File History_ view","scope":"window"},"gitlens.views.fileHistory.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _File History_ view","scope":"window"},"gitlens.views.lineHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _Line History_ view","scope":"window"},"gitlens.views.lineHistory.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Line History_ view","scope":"window"},"gitlens.views.lineHistory.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Line History_ view","scope":"window"},"gitlens.views.repositories.autoRefresh":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically refresh the _Repositories_ view when the repository or the file system changes","scope":"window"},"gitlens.views.repositories.autoReveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically reveal repositories in the _Repositories_ view when opening files","scope":"window"},"gitlens.views.repositories.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Repositories_ view","scope":"window"},"gitlens.views.repositories.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Repositories_ view will display branches","scope":"window"},"gitlens.views.repositories.compact":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the _Repositories_ view in a compact display density","scope":"window"},"gitlens.views.repositories.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Repositories_ view","scope":"window"},"gitlens.views.repositories.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `tree` or `auto`","scope":"window"},"gitlens.views.repositories.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.repositories.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Repositories_ view will display files","scope":"window"},"gitlens.views.repositories.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `auto`","scope":"window"},"gitlens.views.repositories.includeWorkingTree":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to include working tree file status for each repository in the _Repositories_ view","scope":"window"},"gitlens.views.repositories.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Repositories_ view","scope":"window"},"gitlens.views.repositories.showBranchComparison":{"anyOf":[{"enum":[false]},{"type":"string","enum":["branch","working"],"enumDescriptions":["Compares the current branch to the user-selected reference","Compares the working tree to the user-selected reference"]}],"default":"working","markdownDescription":"Specifies whether to show a comparison of a user-selected reference (branch, tag. etc) to the current branch or the working tree in the _Repositories_ view","scope":"window"},"gitlens.views.repositories.showTrackingBranch":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the tracking branch when displaying local branches in the _Repositories_ view","scope":"window"},"gitlens.views.search.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Search Commits_ view","scope":"window"},"gitlens.views.search.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Search Commits_ view","scope":"window"},"gitlens.views.search.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Search Commits_ view. Only applies when `#gitlens.views.search.files.layout#` is set to `tree` or `auto`","scope":"window"},"gitlens.views.search.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.search.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Search Commits_ view will display files","scope":"window"},"gitlens.views.search.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Search Commits_ view. Only applies when `#gitlens.views.search.files.layout#` is set to `auto`","scope":"window"},"gitlens.views.search.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Search Commits_ view","scope":"window"},"gitlens.views.showRelativeDateMarkers":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show relative date markers (_Less than a week ago_, _Over a week ago_, _Over a month ago_, etc) on revision (commit) histories in the views","scope":"window"},"gitlens.views.stashFileFormat":{"type":"string","default":"${file}","markdownDescription":"Specifies the format of a stashed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window"},"gitlens.views.stashFileDescriptionFormat":{"type":"string","default":"${directory}${  ←  originalPath}","markdownDescription":"Specifies the description format of a stashed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window"},"gitlens.views.stashFormat":{"type":"string","default":"${message}","markdownDescription":"Specifies the format of stashed changes in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window"},"gitlens.views.stashDescriptionFormat":{"type":"string","default":"${changes  •  }${agoOrDate}","markdownDescription":"Specifies the description format of stashed changes in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window"},"gitlens.views.statusFileFormat":{"type":"string","default":"${working  }${file}","markdownDescription":"Specifies the format of the status of a working or committed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window"},"gitlens.views.statusFileDescriptionFormat":{"type":"string","default":"${directory}${  ←  originalPath}","markdownDescription":"Specifies the description format of the status of a working or committed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window"},"gitlens.advanced.abbreviatedShaLength":{"type":"number","default":"7","markdownDescription":"Specifies the length of abbreviated commit ids (shas)","scope":"window"},"gitlens.advanced.blame.customArguments":{"type":"array","default":null,"items":{"type":"string"},"markdownDescription":"Specifies additional arguments to pass to the `git blame` command","scope":"resource"},"gitlens.advanced.blame.delayAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit. Use 0 to specify an infinite wait","scope":"window"},"gitlens.advanced.blame.sizeThresholdAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum","scope":"window"},"gitlens.advanced.caching.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether git output will be cached — changing the default is not recommended","scope":"window"},"gitlens.advanced.fileHistoryFollowsRenames":{"type":"boolean","default":true,"markdownDescription":"Specifies whether file histories will follow renames — will affect how merge commits are shown in histories","scope":"window"},"gitlens.advanced.maxListItems":{"type":"number","default":200,"markdownDescription":"Specifies the maximum number of items to show in a list. Use 0 to specify no maximum","scope":"window"},"gitlens.advanced.maxSearchItems":{"type":"number","default":200,"markdownDescription":"Specifies the maximum number of items to show in a search. Use 0 to specify no maximum","scope":"window"},"gitlens.advanced.messages":{"type":"object","default":{"suppressCommitHasNoPreviousCommitWarning":false,"suppressCommitNotFoundWarning":false,"suppressFileNotUnderSourceControlWarning":false,"suppressGitDisabledWarning":false,"suppressGitVersionWarning":false,"suppressLineUncommittedWarning":false,"suppressNoRepositoryWarning":false,"suppressSupportGitLensNotification":false},"properties":{"suppressCommitHasNoPreviousCommitWarning":{"type":"boolean","default":false},"suppressCommitNotFoundWarning":{"type":"boolean","default":false},"suppressFileNotUnderSourceControlWarning":{"type":"boolean","default":false},"suppressGitDisabledWarning":{"type":"boolean","default":false},"suppressGitVersionWarning":{"type":"boolean","default":false},"suppressLineUncommittedWarning":{"type":"boolean","default":false},"suppressNoRepositoryWarning":{"type":"boolean","default":false},"suppressSupportGitLensNotification":{"type":"boolean","default":false}},"markdownDescription":"Specifies which messages should be suppressed","scope":"window"},"gitlens.advanced.quickPick.closeOnFocusOut":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to close QuickPick menus when focus is lost","scope":"window"},"gitlens.advanced.repositorySearchDepth":{"type":"number","default":1,"markdownDescription":"Specifies how many folders deep to search for repositories","scope":"resource"},"gitlens.advanced.similarityThreshold":{"type":"number","default":null,"markdownDescription":"Specifies the amount (percent) of similarity a deleted and added file pair must have to be considered a rename","scope":"window"},"gitlens.advanced.telemetry.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable GitLens telemetry (even if enabled still abides by the overall `#telemetry.enableTelemetry#` setting","scope":"window"},"gitlens.advanced.useSymmetricDifferenceNotation":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to use the symmetric difference (three-dot) notation or the range (two-dot) notation for comparisons. See the [Git docs](https://git-scm.com/docs/gitrevisions#_dotted_range_notations)","scope":"window"}}},"colors":[{"id":"gitlens.gutterBackgroundColor","description":"Specifies the background color of the gutter blame annotations","defaults":{"dark":"#FFFFFF13","light":"#0000000C","highContrast":"#FFFFFF13"}},{"id":"gitlens.gutterForegroundColor","description":"Specifies the foreground color of the gutter blame annotations","defaults":{"dark":"#BEBEBE","light":"#747474","highContrast":"#BEBEBE"}},{"id":"gitlens.gutterUncommittedForegroundColor","description":"Specifies the foreground color of an uncommitted line in the gutter blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF2FF"}},{"id":"gitlens.trailingLineBackgroundColor","description":"Specifies the background color of the blame annotation for the current line","defaults":{"dark":"#00000000","light":"#00000000","highContrast":"#00000000"}},{"id":"gitlens.trailingLineForegroundColor","description":"Specifies the foreground color of the blame annotation for the current line","defaults":{"dark":"#99999959","light":"#99999959","highContrast":"#99999999"}},{"id":"gitlens.lineHighlightBackgroundColor","description":"Specifies the background color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF233","light":"#00BCF233","highContrast":"#00BCF233"}},{"id":"gitlens.lineHighlightOverviewRulerColor","description":"Specifies the overview ruler color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF299"}}],"commands":[{"command":"gitlens.supportGitLens","title":"Support GitLens ❤","category":"GitLens","icon":{"dark":"images/dark/icon-heart.svg","light":"images/light/icon-heart.svg"}},{"command":"gitlens.showSettingsPage","title":"Open Settings","category":"GitLens","icon":{"dark":"images/dark/icon-gear.svg","light":"images/light/icon-gear.svg"}},{"command":"gitlens.showSettingsPage#repositories-view","title":"Open Settings","category":"GitLens","icon":{"dark":"images/dark/icon-gear.svg","light":"images/light/icon-gear.svg"}},{"command":"gitlens.showSettingsPage#file-history-view","title":"Open Settings","category":"GitLens","icon":{"dark":"images/dark/icon-gear.svg","light":"images/light/icon-gear.svg"}},{"command":"gitlens.showSettingsPage#line-history-view","title":"Open Settings","category":"GitLens","icon":{"dark":"images/dark/icon-gear.svg","light":"images/light/icon-gear.svg"}},{"command":"gitlens.showSettingsPage#search-commits-view","title":"Open Settings","category":"GitLens","icon":{"dark":"images/dark/icon-gear.svg","light":"images/light/icon-gear.svg"}},{"command":"gitlens.showSettingsPage#compare-view","title":"Open Settings","category":"GitLens","icon":{"dark":"images/dark/icon-gear.svg","light":"images/light/icon-gear.svg"}},{"command":"gitlens.showWelcomePage","title":"Welcome","category":"GitLens"},{"command":"gitlens.showCompareView","title":"Show Compare View","category":"GitLens"},{"command":"gitlens.showFileHistoryView","title":"Show File History View","category":"GitLens"},{"command":"gitlens.showLineHistoryView","title":"Show Line History View","category":"GitLens"},{"command":"gitlens.showRepositoriesView","title":"Show Repositories View","category":"GitLens"},{"command":"gitlens.showSearchView","title":"Show Search Commits View","category":"GitLens"},{"command":"gitlens.diffDirectory","title":"Directory Compare Working Tree with...","category":"GitLens"},{"command":"gitlens.diffDirectoryWithHead","title":"Directory Compare All Changes","category":"GitLens"},{"command":"gitlens.diffHeadWith","title":"Compare HEAD with...","category":"GitLens"},{"command":"gitlens.diffWorkingWith","title":"Compare Working Tree with...","category":"GitLens"},{"command":"gitlens.diffWithRef","title":"Open Changes with...","category":"GitLens"},{"command":"gitlens.diffWithNext","title":"Open Changes with Next Revision","category":"GitLens","icon":{"dark":"images/dark/icon-next-commit.svg","light":"images/light/icon-next-commit.svg"}},{"command":"gitlens.diffWithNextInDiff","title":"Open Changes with Next Revision","category":"GitLens","icon":{"dark":"images/dark/icon-next-commit.svg","light":"images/light/icon-next-commit.svg"}},{"command":"gitlens.diffWithPrevious","title":"Open Changes with Previous Revision","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit.svg","light":"images/light/icon-prev-commit.svg"}},{"command":"gitlens.diffWithPreviousInDiff","title":"Open Changes with Previous Revision","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit.svg","light":"images/light/icon-prev-commit.svg"}},{"command":"gitlens.diffLineWithPrevious","title":"Open Line Changes with Previous Revision","category":"GitLens"},{"command":"gitlens.diffWithRevision","title":"Open Changes with Revision...","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit-menu.svg","light":"images/light/icon-prev-commit-menu.svg"}},{"command":"gitlens.diffWithWorking","title":"Open Changes with Working File","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-working.svg","light":"images/light/icon-compare-ref-working.svg"}},{"command":"gitlens.diffWithWorkingInDiff","title":"Open Changes with Working File","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-working.svg","light":"images/light/icon-compare-ref-working.svg"}},{"command":"gitlens.diffLineWithWorking","title":"Open Line Changes with Working File","category":"GitLens"},{"command":"gitlens.toggleFileBlame","title":"Toggle File Blame Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git.svg","light":"images/light/icon-git.svg"}},{"command":"gitlens.clearFileAnnotations","title":"Clear File Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git-orange.svg","light":"images/light/icon-git-orange.svg"}},{"command":"gitlens.computingFileAnnotations","title":"Computing File Annotations...","category":"GitLens","icon":{"dark":"images/dark/icon-git-progress.svg","light":"images/light/icon-git-progress.svg"}},{"command":"gitlens.toggleFileHeatmap","title":"Toggle File Heatmap Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git.svg","light":"images/light/icon-git.svg"}},{"command":"gitlens.toggleFileRecentChanges","title":"Toggle Recent File Changes Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git.svg","light":"images/light/icon-git.svg"}},{"command":"gitlens.toggleLineBlame","title":"Toggle Line Blame Annotations","category":"GitLens"},{"command":"gitlens.toggleCodeLens","title":"Toggle Git Code Lens","category":"GitLens"},{"command":"gitlens.switchMode","title":"Switch Mode","category":"GitLens"},{"command":"gitlens.toggleReviewMode","title":"Toggle Review Mode","category":"GitLens"},{"command":"gitlens.toggleZenMode","title":"Toggle Zen Mode","category":"GitLens"},{"command":"gitlens.showCommitSearch","title":"Search Commits","category":"GitLens","icon":{"dark":"images/dark/icon-search.svg","light":"images/light/icon-search.svg"}},{"command":"gitlens.showLastQuickPick","title":"Show Last Opened Quick Pick","category":"GitLens"},{"command":"gitlens.showCommitInView","title":"Show Commit in View","category":"GitLens"},{"command":"gitlens.showFileHistoryInView","title":"Show File History in View","category":"GitLens"},{"command":"gitlens.showQuickCommitDetails","title":"Show Commit Details","category":"GitLens"},{"command":"gitlens.showQuickCommitFileDetails","title":"Show Commit Details","category":"GitLens"},{"command":"gitlens.showQuickRevisionDetails","title":"Show Revision Details","category":"GitLens","icon":{"dark":"images/dark/icon-commit.svg","light":"images/light/icon-commit.svg"}},{"command":"gitlens.showQuickFileHistory","title":"Show File History","category":"GitLens"},{"command":"gitlens.showQuickBranchHistory","title":"Show Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoHistory","title":"Show Current Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoStatus","title":"Show Repository Status","category":"GitLens"},{"command":"gitlens.showQuickStashList","title":"Show Stashed Changes","category":"GitLens"},{"command":"gitlens.copyMessageToClipboard","title":"Copy Commit Message to Clipboard","category":"GitLens","icon":{"dark":"images/dark/icon-clipboard.svg","light":"images/light/icon-clipboard.svg"}},{"command":"gitlens.copyRemoteFileUrlToClipboard","title":"Copy Remote Url to Clipboard","category":"GitLens","icon":{"dark":"images/dark/icon-copy-remote.svg","light":"images/light/icon-copy-remote.svg"}},{"command":"gitlens.copyShaToClipboard","title":"Copy Commit ID to Clipboard","category":"GitLens","icon":{"dark":"images/dark/icon-copy-commit.svg","light":"images/light/icon-copy-commit.svg"}},{"command":"gitlens.closeUnchangedFiles","title":"Close Unchanged Files","category":"GitLens"},{"command":"gitlens.openChangedFiles","title":"Open Changed Files","category":"GitLens"},{"command":"gitlens.openBranchesInRemote","title":"Open Branches on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openBranchInRemote","title":"Open Branch on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openCommitInRemote","title":"Open Commit on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openFileInRemote","title":"Open File on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openFileRevision","title":"Open Revision...","category":"GitLens"},{"command":"gitlens.openFileRevisionFrom","title":"Open Revision from...","category":"GitLens"},{"command":"gitlens.openRepoInRemote","title":"Open Repository on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openWorkingFile","title":"Open Working File","category":"GitLens","icon":{"dark":"images/dark/icon-open-working-file.svg","light":"images/light/icon-open-working-file.svg"}},{"command":"gitlens.stashApply","title":"Apply Stashed Changes","category":"GitLens","icon":{"dark":"images/dark/icon-stash-pop.svg","light":"images/light/icon-stash-pop.svg"}},{"command":"gitlens.stashDelete","title":"Delete Stashed Changes","category":"GitLens","icon":{"dark":"images/dark/icon-delete.svg","light":"images/light/icon-delete.svg"}},{"command":"gitlens.stashSave","title":"Stash All Changes","category":"GitLens","icon":{"dark":"images/dark/icon-stash-save.svg","light":"images/light/icon-stash-save.svg"}},{"command":"gitlens.stashSaveFiles","title":"Stash Changes","category":"GitLens","icon":{"dark":"images/dark/icon-stash-save.svg","light":"images/light/icon-stash-save.svg"}},{"command":"gitlens.externalDiff","title":"Open Changes (with difftool)","category":"GitLens"},{"command":"gitlens.externalDiffAll","title":"Open All Changes (with difftool)","category":"GitLens"},{"command":"gitlens.resetSuppressedWarnings","title":"Reset Suppressed Warnings","category":"GitLens"},{"command":"gitlens.inviteToLiveShare","title":"Invite to Live Share","category":"GitLens","icon":{"dark":"images/dark/icon-vsls.svg","light":"images/light/icon-vsls.svg"}},{"command":"gitlens.views.exploreRepoRevision","title":"Explore Repository from Here","category":"GitLens"},{"command":"gitlens.fetchRepositories","title":"Fetch Repositories","category":"GitLens","icon":{"dark":"images/dark/icon-sync.svg","light":"images/light/icon-sync.svg"}},{"command":"gitlens.pullRepositories","title":"Pull Repositories","category":"GitLens","icon":{"dark":"images/dark/icon-pull.svg","light":"images/light/icon-pull.svg"}},{"command":"gitlens.pushRepositories","title":"Push Repositories","category":"GitLens","icon":{"dark":"images/dark/icon-push.svg","light":"images/light/icon-push.svg"}},{"command":"gitlens.views.checkout","title":"Checkout","category":"GitLens","icon":{"dark":"images/dark/icon-checkout.svg","light":"images/light/icon-checkout.svg"}},{"command":"gitlens.views.fetch","title":"Fetch","category":"GitLens","icon":{"dark":"images/dark/icon-sync.svg","light":"images/light/icon-sync.svg"}},{"command":"gitlens.views.pull","title":"Pull","category":"GitLens","icon":{"dark":"images/dark/icon-pull.svg","light":"images/light/icon-pull.svg"}},{"command":"gitlens.views.push","title":"Push","category":"GitLens","icon":{"dark":"images/dark/icon-push.svg","light":"images/light/icon-push.svg"}},{"command":"gitlens.views.pushWithForce","title":"Push (force)","category":"GitLens","icon":{"dark":"images/dark/icon-push-force.svg","light":"images/light/icon-push-force.svg"}},{"command":"gitlens.views.openInTerminal","title":"Open in Terminal","category":"GitLens"},{"command":"gitlens.views.setAsDefault","title":"Set as Default","category":"GitLens"},{"command":"gitlens.views.unsetAsDefault","title":"Unset as Default","category":"GitLens"},{"command":"gitlens.views.stageDirectory","title":"Stage All Changes","category":"GitLens","icon":{"dark":"images/dark/icon-add.svg","light":"images/light/icon-add.svg"}},{"command":"gitlens.views.stageFile","title":"Stage Changes","category":"GitLens","icon":{"dark":"images/dark/icon-add.svg","light":"images/light/icon-add.svg"}},{"command":"gitlens.views.unstageDirectory","title":"Unstage All Changes","category":"GitLens","icon":{"dark":"images/dark/icon-minus.svg","light":"images/light/icon-minus.svg"}},{"command":"gitlens.views.unstageFile","title":"Unstage Changes","category":"GitLens","icon":{"dark":"images/dark/icon-minus.svg","light":"images/light/icon-minus.svg"}},{"command":"gitlens.views.star","title":"Add to Favorites","category":"GitLens","icon":{"dark":"images/dark/icon-star.svg","light":"images/light/icon-star.svg"}},{"command":"gitlens.views.unstar","title":"Remove from Favorites","category":"GitLens","icon":{"dark":"images/dark/icon-star-filled.svg","light":"images/light/icon-star-filled.svg"}},{"command":"gitlens.views.openDirectoryDiff","title":"Open Directory Compare","category":"GitLens"},{"command":"gitlens.views.openDirectoryDiffWithWorking","title":"Open Directory Compare with Working Tree","category":"GitLens"},{"command":"gitlens.views.openChanges","title":"Open Changes","category":"GitLens"},{"command":"gitlens.views.openChangesWithWorking","title":"Open Changes with Working File","category":"GitLens"},{"command":"gitlens.views.openFile","title":"Open File","category":"GitLens","icon":{"dark":"images/dark/icon-open-file.svg","light":"images/light/icon-open-file.svg"}},{"command":"gitlens.views.openFileRevision","title":"Open Revision","category":"GitLens","icon":{"dark":"images/dark/icon-open-file.svg","light":"images/light/icon-open-file.svg"}},{"command":"gitlens.views.openFileRevisionInRemote","title":"Open Revision on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.views.openChangedFiles","title":"Open Files","category":"GitLens"},{"command":"gitlens.views.openChangedFileChanges","title":"Open All Changes","category":"GitLens"},{"command":"gitlens.views.openChangedFileChangesWithWorking","title":"Open All Changes with Working Tree","category":"GitLens"},{"command":"gitlens.views.openChangedFileRevisions","title":"Open Revisions","category":"GitLens"},{"command":"gitlens.views.applyChanges","title":"Apply Changes","category":"GitLens"},{"command":"gitlens.views.closeRepository","title":"Close Repository","category":"GitLens"},{"command":"gitlens.views.compareAncestryWithWorking","title":"Compare Ancestry with Working Tree","category":"GitLens"},{"command":"gitlens.views.compareWithHead","title":"Compare with HEAD","category":"GitLens","icon":{"dark":"images/dark/icon-compare-refs.svg","light":"images/light/icon-compare-refs.svg"}},{"command":"gitlens.views.compareWithRemote","title":"Compare with Remote","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-remote.svg","light":"images/light/icon-compare-ref-remote.svg"}},{"command":"gitlens.views.compareWithSelected","title":"Compare with Selected","category":"GitLens"},{"command":"gitlens.views.selectForCompare","title":"Select for Compare","category":"GitLens"},{"command":"gitlens.views.compareFileWithSelected","title":"Compare with Selected","category":"GitLens"},{"command":"gitlens.views.selectFileForCompare","title":"Select for Compare","category":"GitLens"},{"command":"gitlens.views.compareWithWorking","title":"Compare with Working Tree","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-working.svg","light":"images/light/icon-compare-ref-working.svg"}},{"command":"gitlens.views.contributor.addCoauthoredBy","title":"Add as Co-author","category":"GitLens"},{"command":"gitlens.views.contributor.copyToClipboard","title":"Copy to Clipboard","category":"GitLens","icon":{"dark":"images/dark/icon-clipboard.svg","light":"images/light/icon-clipboard.svg"}},{"command":"gitlens.views.setComparisonToTwoDot","title":"Switch to Two-dot Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-compare-twodot.svg","light":"images/light/icon-compare-twodot.svg"}},{"command":"gitlens.views.setComparisonToThreeDot","title":"Switch to Three-dot Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-compare-threedot.svg","light":"images/light/icon-compare-threedot.svg"}},{"command":"gitlens.views.terminalCheckoutBranch","title":"Checkout Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalCreateBranch","title":"Create Branch (via Terminal)...","category":"GitLens"},{"command":"gitlens.views.terminalDeleteBranch","title":"Delete Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalMergeBranch","title":"Merge Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRebaseBranch","title":"Rebase (Interactive) Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRebaseBranchToRemote","title":"Rebase (Interactive) Branch to Remote (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalSquashBranchIntoCommit","title":"Squash Branch into Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalCheckoutCommit","title":"Checkout Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalCherryPickCommit","title":"Cherry Pick Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalPushCommit","title":"Push to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRebaseCommit","title":"Rebase to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalResetCommit","title":"Reset to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRevertCommit","title":"Revert Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRemoveRemote","title":"Remove Remote (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalCreateTag","title":"Create Tag (via Terminal)...","category":"GitLens"},{"command":"gitlens.views.terminalDeleteTag","title":"Delete Tag (via Terminal)","category":"GitLens"},{"command":"gitlens.views.repositories.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.repositories.setBranchComparisonToWorking","title":"Switch to Working Tree Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-working.svg","light":"images/light/icon-compare-ref-working.svg"}},{"command":"gitlens.views.repositories.setBranchComparisonToBranch","title":"Switch to Branch Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-compare-refs.svg","light":"images/light/icon-compare-refs.svg"}},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens"},{"command":"gitlens.views.repositories.setFilesLayoutToList","title":"List Layout","category":"GitLens"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","title":"Enable Automatic Refresh","category":"GitLens"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","title":"Disable Automatic Refresh","category":"GitLens"},{"command":"gitlens.views.fileHistory.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.fileHistory.changeBase","title":"Change Base...","category":"GitLens","icon":{"dark":"images/dark/icon-history.svg","light":"images/light/icon-history.svg"}},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","title":"Resume File Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location.svg","light":"images/light/icon-location.svg"}},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","title":"Pause File Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location-filled.svg","light":"images/light/icon-location-filled.svg"}},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","title":"Follow Renames","category":"GitLens"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","title":"Don't Follow Renames","category":"GitLens"},{"command":"gitlens.views.lineHistory.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.lineHistory.changeBase","title":"Change Base...","category":"GitLens","icon":{"dark":"images/dark/icon-history.svg","light":"images/light/icon-history.svg"}},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","title":"Resume Line Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location.svg","light":"images/light/icon-location.svg"}},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","title":"Pause Line Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location-filled.svg","light":"images/light/icon-location-filled.svg"}},{"command":"gitlens.views.lineHistory.setRenameFollowingOn","title":"Follow Renames","category":"GitLens"},{"command":"gitlens.views.lineHistory.setRenameFollowingOff","title":"Don't Follow Renames","category":"GitLens"},{"command":"gitlens.views.compare.selectForCompare","title":"Compare References...","category":"GitLens","icon":{"dark":"images/dark/icon-compare-refs.svg","light":"images/light/icon-compare-refs.svg"}},{"command":"gitlens.views.compare.clear","title":"Clear Results","category":"GitLens","icon":{"dark":"images/dark/icon-clear.svg","light":"images/light/icon-clear.svg"}},{"command":"gitlens.views.compare.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.compare.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens"},{"command":"gitlens.views.compare.setFilesLayoutToList","title":"List Layout","category":"GitLens"},{"command":"gitlens.views.compare.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens"},{"command":"gitlens.views.compare.setKeepResultsToOn","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-lock.svg","light":"images/light/icon-lock.svg"}},{"command":"gitlens.views.compare.setKeepResultsToOff","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-locked.svg","light":"images/light/icon-locked.svg"}},{"command":"gitlens.views.compare.pinComparison","title":"Pin Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-pin-tilted.svg","light":"images/light/icon-pin-tilted.svg"}},{"command":"gitlens.views.compare.unpinComparison","title":"Unpin Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-pin-filled.svg","light":"images/light/icon-pin-filled.svg"}},{"command":"gitlens.views.compare.swapComparison","title":"Swap Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-swap.svg","light":"images/light/icon-swap.svg"}},{"command":"gitlens.views.search.searchCommits","title":"Search Commits","category":"GitLens","icon":{"dark":"images/dark/icon-search.svg","light":"images/light/icon-search.svg"}},{"command":"gitlens.views.search.clear","title":"Clear Results","category":"GitLens","icon":{"dark":"images/dark/icon-clear.svg","light":"images/light/icon-clear.svg"}},{"command":"gitlens.views.search.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.search.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens"},{"command":"gitlens.views.search.setFilesLayoutToList","title":"List Layout","category":"GitLens"},{"command":"gitlens.views.search.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens"},{"command":"gitlens.views.search.setKeepResultsToOn","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-lock.svg","light":"images/light/icon-lock.svg"}},{"command":"gitlens.views.search.setKeepResultsToOff","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-locked.svg","light":"images/light/icon-locked.svg"}},{"command":"gitlens.views.dismissNode","title":"Dismiss","category":"GitLens","icon":{"dark":"images/dark/icon-close-small.svg","light":"images/light/icon-close-small.svg"}},{"command":"gitlens.views.expandNode","title":"Expand","category":"GitLens"},{"command":"gitlens.views.refreshNode","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.showMoreChildren","title":"Show More","category":"GitLens","icon":{"dark":"images/dark/icon-unfold.svg","light":"images/light/icon-unfold.svg"}},{"command":"gitlens.views.showAllChildren","title":"Show All","category":"GitLens","icon":{"dark":"images/dark/icon-unfold.svg","light":"images/light/icon-unfold.svg"}}],"menus":{"commandPalette":[{"command":"gitlens.showSettingsPage#repositories-view","when":"false"},{"command":"gitlens.showSettingsPage#file-history-view","when":"false"},{"command":"gitlens.showSettingsPage#line-history-view","when":"false"},{"command":"gitlens.showSettingsPage#search-commits-view","when":"false"},{"command":"gitlens.showSettingsPage#compare-view","when":"false"},{"command":"gitlens.showCompareView","when":"gitlens:enabled"},{"command":"gitlens.showFileHistoryView","when":"gitlens:enabled"},{"command":"gitlens.showLineHistoryView","when":"gitlens:enabled"},{"command":"gitlens.showRepositoriesView","when":"gitlens:enabled"},{"command":"gitlens.showSearchView","when":"gitlens:enabled"},{"command":"gitlens.diffDirectory","when":"gitlens:enabled"},{"command":"gitlens.diffDirectoryWithHead","when":"gitlens:enabled"},{"command":"gitlens.diffHeadWith","when":"gitlens:enabled"},{"command":"gitlens.diffWorkingWith","when":"gitlens:enabled"},{"command":"gitlens.diffWithRef","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithNext","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithNextInDiff","when":"isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithPrevious","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPreviousInDiff","when":"isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithPrevious","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.diffWithRevision","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithWorkingInDiff","when":"isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffLineWithWorking","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.externalDiff","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled"},{"command":"gitlens.toggleFileBlame","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.clearFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computed"},{"command":"gitlens.computingFileAnnotations","when":"false"},{"command":"gitlens.toggleFileHeatmap","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleFileRecentChanges","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleLineBlame","when":"gitlens:enabled"},{"command":"gitlens.toggleCodeLens","when":"gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.switchMode","when":"gitlens:enabled"},{"command":"gitlens.toggleReviewMode","when":"gitlens:enabled"},{"command":"gitlens.toggleZenMode","when":"gitlens:enabled"},{"command":"gitlens.showCommitSearch","when":"gitlens:enabled"},{"command":"gitlens.showLastQuickPick","when":"gitlens:enabled"},{"command":"gitlens.showCommitInView","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.showQuickCommitDetails","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showQuickCommitFileDetails","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showQuickRevisionDetails","when":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.showQuickBranchHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","when":"gitlens:enabled"},{"command":"gitlens.showQuickStashList","when":"gitlens:enabled"},{"command":"gitlens.copyMessageToClipboard","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.copyShaToClipboard","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openChangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openBranchesInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openBranchInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openCommitInRemote","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.openFileInRemote","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.openFileRevision","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.openFileRevisionFrom","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.openRepoInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.stashApply","when":"gitlens:enabled && !gitlens:readonly"},{"command":"gitlens.stashDelete","when":"false"},{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly"},{"command":"gitlens.stashSaveFiles","when":"false"},{"command":"gitlens.resetSuppressedWarnings","when":"gitlens:enabled"},{"command":"gitlens.inviteToLiveShare","when":"false"},{"command":"gitlens.views.exploreRepoRevision","when":"false"},{"command":"gitlens.fetchRepositories","when":"gitlens:hasRemotes && !gitlens:readonly"},{"command":"gitlens.pullRepositories","when":"gitlens:hasRemotes && !gitlens:readonly"},{"command":"gitlens.pushRepositories","when":"gitlens:hasRemotes && !gitlens:readonly"},{"command":"gitlens.views.checkout","when":"false"},{"command":"gitlens.views.fetch","when":"false"},{"command":"gitlens.views.pull","when":"false"},{"command":"gitlens.views.push","when":"false"},{"command":"gitlens.views.pushWithForce","when":"false"},{"command":"gitlens.views.openInTerminal","when":"false"},{"command":"gitlens.views.setAsDefault","when":"false"},{"command":"gitlens.views.unsetAsDefault","when":"false"},{"command":"gitlens.views.stageDirectory","when":"false"},{"command":"gitlens.views.stageFile","when":"false"},{"command":"gitlens.views.unstageDirectory","when":"false"},{"command":"gitlens.views.unstageFile","when":"false"},{"command":"gitlens.views.star","when":"false"},{"command":"gitlens.views.unstar","when":"false"},{"command":"gitlens.views.openChanges","when":"false"},{"command":"gitlens.views.openDirectoryDiff","when":"false"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"false"},{"command":"gitlens.views.openChangesWithWorking","when":"false"},{"command":"gitlens.views.openFile","when":"false"},{"command":"gitlens.views.openFileRevision","when":"false"},{"command":"gitlens.views.openFileRevisionInRemote","when":"false"},{"command":"gitlens.views.openChangedFiles","when":"false"},{"command":"gitlens.views.openChangedFileChanges","when":"false"},{"command":"gitlens.views.openChangedFileChangesWithWorking","when":"false"},{"command":"gitlens.views.openChangedFileRevisions","when":"false"},{"command":"gitlens.views.applyChanges","when":"false"},{"command":"gitlens.views.closeRepository","when":"false"},{"command":"gitlens.views.compareAncestryWithWorking","when":"false"},{"command":"gitlens.views.compareWithHead","when":"false"},{"command":"gitlens.views.compareWithRemote","when":"false"},{"command":"gitlens.views.compareWithSelected","when":"false"},{"command":"gitlens.views.selectForCompare","when":"false"},{"command":"gitlens.views.compareFileWithSelected","when":"false"},{"command":"gitlens.views.selectFileForCompare","when":"false"},{"command":"gitlens.views.compareWithWorking","when":"false"},{"command":"gitlens.views.contributor.addCoauthoredBy","when":"false"},{"command":"gitlens.views.contributor.copyToClipboard","when":"false"},{"command":"gitlens.views.setComparisonToTwoDot","when":"false"},{"command":"gitlens.views.setComparisonToThreeDot","when":"false"},{"command":"gitlens.views.terminalCheckoutBranch","when":"false"},{"command":"gitlens.views.terminalCreateBranch","when":"false"},{"command":"gitlens.views.terminalDeleteBranch","when":"false"},{"command":"gitlens.views.terminalMergeBranch","when":"false"},{"command":"gitlens.views.terminalRebaseBranch","when":"false"},{"command":"gitlens.views.terminalRebaseBranchToRemote","when":"false"},{"command":"gitlens.views.terminalSquashBranchIntoCommit","when":"false"},{"command":"gitlens.views.terminalCheckoutCommit","when":"false"},{"command":"gitlens.views.terminalCherryPickCommit","when":"false"},{"command":"gitlens.views.terminalPushCommit","when":"false"},{"command":"gitlens.views.terminalRebaseCommit","when":"false"},{"command":"gitlens.views.terminalResetCommit","when":"false"},{"command":"gitlens.views.terminalRevertCommit","when":"false"},{"command":"gitlens.views.terminalRemoveRemote","when":"false"},{"command":"gitlens.views.terminalCreateTag","when":"false"},{"command":"gitlens.views.terminalDeleteTag","when":"false"},{"command":"gitlens.views.repositories.refresh","when":"false"},{"command":"gitlens.views.repositories.setBranchComparisonToWorking","when":"false"},{"command":"gitlens.views.repositories.setBranchComparisonToBranch","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"false"},{"command":"gitlens.views.fileHistory.refresh","when":"false"},{"command":"gitlens.views.fileHistory.changeBase","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"false"},{"command":"gitlens.views.lineHistory.refresh","when":"false"},{"command":"gitlens.views.lineHistory.changeBase","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.lineHistory.setRenameFollowingOn","when":"false"},{"command":"gitlens.views.lineHistory.setRenameFollowingOff","when":"false"},{"command":"gitlens.views.compare.selectForCompare","when":"gitlens:enabled && config.gitlens.views.compare.enabled"},{"command":"gitlens.views.compare.clear","when":"false"},{"command":"gitlens.views.compare.refresh","when":"false"},{"command":"gitlens.views.compare.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.compare.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.compare.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.compare.setKeepResultsToOn","when":"false"},{"command":"gitlens.views.compare.setKeepResultsToOff","when":"false"},{"command":"gitlens.views.compare.pinComparison","when":"false"},{"command":"gitlens.views.compare.unpinComparison","when":"false"},{"command":"gitlens.views.search.searchCommits","when":"false"},{"command":"gitlens.views.search.clear","when":"false"},{"command":"gitlens.views.search.refresh","when":"false"},{"command":"gitlens.views.search.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.search.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.search.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.search.setKeepResultsToOn","when":"false"},{"command":"gitlens.views.search.setKeepResultsToOff","when":"false"},{"command":"gitlens.views.dismissNode","when":"false"},{"command":"gitlens.views.expandNode","when":"false"},{"command":"gitlens.views.refreshNode","when":"false"},{"command":"gitlens.views.showMoreChildren","when":"false"},{"command":"gitlens.views.showAllChildren","when":"false"}],"editor/context":[{"command":"gitlens.diffLineWithPrevious","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.compare","group":"1_gitlens@1"},{"command":"gitlens.diffLineWithWorking","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.compare","group":"1_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.remote","group":"1_gitlens_1@1"},{"command":"gitlens.openCommitInRemote","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.remote","group":"1_gitlens_1@2"},{"command":"gitlens.showQuickCommitFileDetails","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.details","group":"1_gitlens_1@3"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editor.history","group":"3_gitlens@1"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editor.history","group":"3_gitlens@2"},{"command":"gitlens.toggleFileBlame","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.blame","group":"3_gitlens@3"},{"command":"gitlens.copyShaToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard","group":"9_b_gitlens@1"},{"command":"gitlens.copyMessageToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard","group":"9_b_gitlens@2"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.clipboard","group":"9_b_gitlens@3"}],"editor/title":[{"command":"gitlens.diffWithWorking","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git","group":"navigation@0"},{"command":"gitlens.diffWithWorkingInDiff","when":"isInDiffEditor && gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git","group":"navigation@0"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git","group":"navigation@0"},{"command":"gitlens.openWorkingFile","when":"!gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git && isInDiffEditor","group":"navigation@0"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme == git && !isInDiffEditor","group":"navigation@0"},{"command":"gitlens.diffWithPrevious","alt":"gitlens.diffWithRevision","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare","group":"navigation@97"},{"command":"gitlens.diffWithPreviousInDiff","alt":"gitlens.diffWithRevision","when":"isInDiffEditor && gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare","group":"navigation@97"},{"command":"gitlens.showQuickRevisionDetails","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git && config.gitlens.menus.editorGroup.compare","group":"navigation@98"},{"command":"gitlens.diffWithNext","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /revision/ && config.gitlens.menus.editorGroup.compare","group":"navigation@99"},{"command":"gitlens.diffWithNextInDiff","when":"isInDiffEditor && gitlens:activeFileStatus =~ /revision/ && config.gitlens.menus.editorGroup.compare","group":"navigation@99"},{"command":"gitlens.toggleFileBlame","alt":"gitlens.toggleFileHeatmap","when":"gitlens:activeFileStatus =~ /blameable/ && !gitlens:annotationStatus && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.computingFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computing && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.clearFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computed && config.gitlens.menus.editorGroup.blame","group":"navigation@100"}],"editor/title/context":[{"command":"gitlens.openWorkingFile","when":"resourceScheme == gitlens","group":"1_co_gitlens@1"},{"command":"gitlens.openFileInRemote","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.editorTab.remote","group":"1_co_gitlens@2"},{"command":"gitlens.diffWithPrevious","when":"gitlens:enabled && config.gitlens.menus.editorTab.compare","group":"1_co_gitlens_1@1"},{"command":"gitlens.diffWithRevision","when":"gitlens:enabled && config.gitlens.menus.editorTab.compare","group":"1_co_gitlens_1@2"},{"command":"gitlens.diffWithWorking","when":"resourceScheme == gitlens && config.gitlens.menus.editorTab.compare","group":"1_co_gitlens_1@3"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:enabled && config.gitlens.menus.editorTab.history","group":"1_co_gitlens_2@1"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:enabled && config.gitlens.menus.editorTab.history","group":"1_co_gitlens_2@2"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.editorTab.clipboard","group":"1_cutcopypaste@100"}],"explorer/context":[{"command":"gitlens.openFileInRemote","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.remote","group":"navigation@100"},{"command":"gitlens.diffWithPrevious","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.compare","group":"3_compare@1"},{"command":"gitlens.diffWithRevision","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.compare","group":"3_compare@2"},{"command":"gitlens.showQuickFileHistory","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history","group":"4_gitlens_1@1"},{"command":"gitlens.showFileHistoryInView","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history","group":"4_gitlens_1@2"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.clipboard","group":"5_cutcopypaste@100"}],"scm/resourceGroup/context":[{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmGroup.stashInline","group":"inline@-1"},{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmGroup.stash","group":"1_modification@100"},{"command":"gitlens.openChangedFiles","when":"gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"2_gitlens@1"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"2_gitlens@2"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled && config.gitlens.menus.scmGroup.compare","group":"3_gitlens@3"},{"command":"gitlens.diffDirectoryWithHead","when":"gitlens:enabled && config.gitlens.menus.scmGroup.compare","group":"3_gitlens@4"}],"scm/resourceState/context":[{"command":"gitlens.openFileInRemote","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.scmItem.remote","group":"navigation"},{"command":"gitlens.externalDiff","when":"gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"navigation"},{"command":"gitlens.diffWithRevision","when":"gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"1_gitlens@1"},{"command":"gitlens.diffWithRef","when":"gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"1_gitlens@2"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:enabled && config.gitlens.menus.scmItem.history","group":"1_gitlens_1@1"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:enabled && config.gitlens.menus.scmItem.history","group":"1_gitlens_1@2"},{"command":"gitlens.stashSaveFiles","when":"gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmItem.stash","group":"1_modification@-1"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.scmItem.clipboard","group":"9_gitlens@1"}],"view/title":[{"command":"gitlens.pushRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@10"},{"command":"gitlens.pullRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@11"},{"command":"gitlens.fetchRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@12"},{"command":"gitlens.views.repositories.refresh","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@99"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"1_gitlens"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"1_gitlens"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"1_gitlens"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh","group":"2_gitlens"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh","group":"2_gitlens"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && !gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.changeBase","when":"view =~ /^gitlens\\.views\\.fileHistory:/","group":"navigation@11"},{"command":"gitlens.views.fileHistory.refresh","when":"view =~ /^gitlens\\.views\\.fileHistory:/","group":"navigation@99"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && !config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && !gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.changeBase","when":"view =~ /^gitlens\\.views\\.lineHistory:/","group":"navigation@11"},{"command":"gitlens.views.lineHistory.refresh","when":"view =~ /^gitlens\\.views\\.lineHistory:/","group":"navigation@99"},{"command":"gitlens.views.lineHistory.setRenameFollowingOn","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && !config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.lineHistory.setRenameFollowingOff","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.compare.selectForCompare","when":"view =~ /^gitlens\\.views\\.compare:/","group":"navigation@10"},{"command":"gitlens.views.compare.setKeepResultsToOn","when":"view =~ /^gitlens\\.views\\.compare:/ && !gitlens:views:compare:keepResults","group":"navigation@11"},{"command":"gitlens.views.compare.setKeepResultsToOff","when":"view =~ /^gitlens\\.views\\.compare:/ && gitlens:views:compare:keepResults","group":"navigation@11"},{"command":"gitlens.views.compare.clear","when":"view =~ /^gitlens\\.views\\.compare:/","group":"navigation@98"},{"command":"gitlens.views.compare.refresh","when":"view =~ /^gitlens\\.views\\.compare:/","group":"navigation@99"},{"command":"gitlens.views.compare.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.compare:/","group":"1_gitlens"},{"command":"gitlens.views.compare.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.compare:/","group":"1_gitlens"},{"command":"gitlens.views.compare.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.compare:/","group":"1_gitlens"},{"command":"gitlens.views.search.searchCommits","when":"view =~ /^gitlens\\.views\\.search:/","group":"navigation@10"},{"command":"gitlens.views.search.setKeepResultsToOn","when":"view =~ /^gitlens\\.views\\.search:/ && !gitlens:views:search:keepResults","group":"navigation@11"},{"command":"gitlens.views.search.setKeepResultsToOff","when":"view =~ /^gitlens\\.views\\.search:/ && gitlens:views:search:keepResults","group":"navigation@11"},{"command":"gitlens.views.search.clear","when":"view =~ /^gitlens\\.views\\.search:/","group":"navigation@98"},{"command":"gitlens.views.search.refresh","when":"view =~ /^gitlens\\.views\\.search:/","group":"navigation@99"},{"command":"gitlens.views.search.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.search:/","group":"1_gitlens"},{"command":"gitlens.views.search.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.search:/","group":"1_gitlens"},{"command":"gitlens.views.search.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.search:/","group":"1_gitlens"},{"command":"gitlens.supportGitLens","when":"view =~ /^gitlens\\.views\\..*:/ && config.gitlens.advanced.messages.suppressSupportGitLensNotification != true && gitlens:views:supportGitLens:hide != true","group":"navigation@1"},{"command":"gitlens.showSettingsPage#repositories-view","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"9_gitlens"},{"command":"gitlens.showSettingsPage#file-history-view","when":"view =~ /^gitlens\\.views\\.fileHistory:/","args":"general","group":"9_gitlens"},{"command":"gitlens.showSettingsPage#line-history-view","when":"view =~ /^gitlens\\.views\\.lineHistory:/","args":"general","group":"9_gitlens"},{"command":"gitlens.showSettingsPage#search-commits-view","when":"view =~ /^gitlens\\.views\\.search:/","args":"general","group":"9_gitlens"},{"command":"gitlens.showSettingsPage#compare-view","when":"view =~ /^gitlens\\.views\\.compare:/","args":"general","group":"9_gitlens"}],"view/item/context":[{"command":"gitlens.openBranchesInRemote","when":"viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/","group":"inline@98"},{"command":"gitlens.openBranchesInRemote","when":"viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/","group":"1_gitlens@1"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/","group":"inline@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/","group":"inline@2"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"inline@10"},{"command":"gitlens.views.compareWithRemote","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/","group":"inline@96"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:(branch\\b(?!.*?\\b\\+current\\b)|commit\\b|stash\\b|tag\\b)/","group":"inline@97","alt":"gitlens.views.compareWithWorking"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)/","group":"inline@97"},{"command":"gitlens.openBranchInRemote","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/","group":"inline@98"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"1_gitlens@1"},{"command":"gitlens.openBranchInRemote","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/","group":"2_gitlens@1"},{"command":"gitlens.views.compareWithRemote","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/","group":"7_gitlens@1"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:(branch\\b(?!.*?\\b\\+current\\b)|commit\\b|stash\\b|tag\\b)/","group":"7_gitlens@2"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"7_gitlens@3"},{"command":"gitlens.views.compareAncestryWithWorking","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"7_gitlens@4"},{"command":"gitlens.views.compareWithSelected","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && gitlens:views:canCompare","group":"7_gitlens_@1"},{"command":"gitlens.views.selectForCompare","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"7_gitlens_@2"},{"command":"gitlens.views.compareFileWithSelected","when":"viewItem =~ /gitlens:file:\\b/ && gitlens:views:canCompare:file","group":"7_gitlens_@1"},{"command":"gitlens.views.selectFileForCompare","when":"viewItem =~ /gitlens:file:\\b/","group":"7_gitlens_@2"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"viewItem =~ /gitlens:(branch|tag)\\b/","group":"7_gitlens_more@2"},{"command":"gitlens.views.terminalCheckoutBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)//","group":"8_gitlens@1"},{"command":"gitlens.views.terminalRebaseBranchToRemote","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+tracking\\b)/","group":"8_gitlens@1"},{"command":"gitlens.views.terminalMergeBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"8_gitlens@2"},{"command":"gitlens.views.terminalRebaseBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"8_gitlens@3"},{"command":"gitlens.views.terminalSquashBranchIntoCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"8_gitlens@4"},{"command":"gitlens.views.terminalCreateBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:(branch|commit|tag)\\b/","group":"8_gitlens@5"},{"command":"gitlens.views.terminalDeleteBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"8_gitlens@6"},{"command":"gitlens.views.terminalCreateTag","when":"!gitlens:readonly && viewItem =~ /gitlens:(branch|commit)\\b/","group":"8_gitlens@7"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/","group":"8_gitlens_@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/","group":"8_gitlens_@1"},{"command":"gitlens.inviteToLiveShare","when":"gitlens:vsls && gitlens:vsls != guest && viewItem =~ /gitlens:contributor\\b/","group":"inline@97"},{"command":"gitlens.views.contributor.copyToClipboard","when":"viewItem =~ /gitlens:contributor\\b/","group":"inline@98"},{"command":"gitlens.inviteToLiveShare","when":"gitlens:vsls && gitlens:vsls != guest && viewItem =~ /gitlens:contributor\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.contributor.copyToClipboard","when":"viewItem =~ /gitlens:contributor\\b/","group":"1_gitlens_1@1"},{"command":"gitlens.views.contributor.addCoauthoredBy","when":"viewItem =~ /gitlens:contributor\\b/","group":"2_gitlens@1"},{"command":"gitlens.openCommitInRemote","when":"viewItem =~ /gitlens:commit\\b/ && gitlens:hasRemotes","group":"inline@98"},{"command":"gitlens.openCommitInRemote","when":"viewItem =~ /gitlens:commit\\b/ && gitlens:hasRemotes","group":"1_gitlens@1"},{"command":"gitlens.views.openChangedFileChanges","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"2_gitlens@1"},{"command":"gitlens.views.openChangedFileChangesWithWorking","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"2_gitlens@2"},{"command":"gitlens.views.openChangedFiles","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"3_gitlens@1"},{"command":"gitlens.views.openChangedFileRevisions","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"3_gitlens@2"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:(file:)?commit\\b/","group":"inline@98","alt":"gitlens.copyMessageToClipboard"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:(file:)?commit\\b/","group":"5_gitlens@1"},{"command":"gitlens.copyMessageToClipboard","when":"viewItem =~ /gitlens:(commit|stash|file\\b(?=.*?\\b\\+committed\\b))\\b/","group":"5_gitlens@2"},{"command":"gitlens.showQuickCommitDetails","when":"viewItem =~ /gitlens:commit\\b/","group":"5_gitlens_1@1"},{"command":"gitlens.showCommitInView","when":"viewItem =~ /gitlens:commit\\b/","group":"5_gitlens_1@2"},{"command":"gitlens.views.terminalCherryPickCommit","when":"!gitlens:readonly && viewItem == gitlens:commit","group":"8_gitlens@1"},{"command":"gitlens.views.terminalPushCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/","group":"8_gitlens@2"},{"command":"gitlens.views.terminalRevertCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/","group":"8_gitlens@3"},{"command":"gitlens.views.terminalCheckoutCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b/","group":"8_gitlens@4"},{"command":"gitlens.views.terminalRebaseCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b/","group":"8_gitlens@5"},{"command":"gitlens.views.terminalResetCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b/","group":"8_gitlens@6"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/","group":"inline@1"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+history\\b)/","group":"inline@1","alt":"gitlens.views.openFileRevision"},{"command":"gitlens.views.openFileRevision","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+history\\b)/","group":"inline@1","alt":"gitlens.views.openFile"},{"command":"gitlens.views.stageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/","group":"inline@1"},{"command":"gitlens.views.unstageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/","group":"inline@1"},{"command":"gitlens.views.stageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/","group":"1_gitlens@1"},{"command":"gitlens.views.unstageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/","group":"1_gitlens@1"},{"command":"gitlens.stashSaveFiles","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+(un)?staged\\b)/","group":"1_gitlens@2"},{"command":"gitlens.views.openChanges","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens@1"},{"command":"gitlens.externalDiff","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens@2"},{"command":"gitlens.views.openChangesWithWorking","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens@3"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/","group":"3_gitlens@1"},{"command":"gitlens.views.openFileRevision","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"3_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:(file\\b(?!.*?\\b\\+(un)?staged\\b)|history:(file|line))\\b/ && gitlens:hasRemotes","group":"inline@99","alt":"gitlens.copyRemoteFileUrlToClipboard"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:file\\b/ && gitlens:hasRemotes","group":"4_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/ && gitlens:hasRemotes","group":"5_gitlens@3"},{"command":"gitlens.views.openFileRevisionInRemote","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && gitlens:hasRemotes","group":"4_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/ && gitlens:hasRemotes","group":"3_gitlens@2"},{"command":"gitlens.views.applyChanges","when":"viewItem =~ /gitlens:file:(commit|results)\\b/","group":"5_gitlens_1@1"},{"command":"gitlens.views.checkout","when":"viewItem =~ /gitlens:file:(commit|results)\\b/","group":"5_gitlens_1@2"},{"command":"gitlens.views.applyChanges","when":"!gitlens:readonly && viewItem == gitlens:file:stash","group":"1_gitlens@1"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem == gitlens:file:stash","group":"1_gitlens@2"},{"command":"gitlens.showQuickCommitDetails","when":"viewItem =~ /gitlens:file\\b(?!(:stash|:status))/","group":"5_gitlens_2@1"},{"command":"gitlens.showCommitInView","when":"viewItem =~ /gitlens:file\\b(?!(:stash|:status))/","group":"5_gitlens_2@2"},{"command":"gitlens.showQuickFileHistory","when":"viewItem =~ /gitlens:file\\b/","group":"8_gitlens@1"},{"command":"gitlens.showFileHistoryInView","when":"viewItem =~ /gitlens:file\\b/","group":"8_gitlens@2"},{"command":"gitlens.views.fetch","when":"!gitlens:readonly && viewItem =~ /gitlens:remote\\b/","group":"inline@97"},{"command":"gitlens.openRepoInRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"inline@98"},{"command":"gitlens.views.fetch","when":"!gitlens:readonly && viewItem =~ /gitlens:remote\\b/","group":"1_gitlens@1"},{"command":"gitlens.openRepoInRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"2_gitlens@1"},{"command":"gitlens.openBranchesInRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"2_gitlens@2"},{"command":"gitlens.views.terminalRemoveRemote","when":"!gitlens:readonly && viewItem =~ /gitlens:remote\\b/","group":"8_gitlens@1"},{"command":"gitlens.views.setAsDefault","when":"viewItem =~ /gitlens:remote\\b(?!.*?\\b\\+default\\b)/","group":"8_gitlens_@1"},{"command":"gitlens.views.unsetAsDefault","when":"viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+default\\b)/","group":"8_gitlens_@1"},{"command":"gitlens.views.exploreRepoRevision","when":"viewItem =~ /gitlens:(branch|commit|file:(commit|results)|stash|tag)\\b/","group":"7_gitlens_more@1"},{"command":"gitlens.showCommitSearch","when":"viewItem =~ /gitlens:repository\\b/","group":"inline@10"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+starred\\b)/","group":"inline@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/","group":"inline@2"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"inline@97","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"inline@98"},{"command":"gitlens.views.fetch","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"inline@99"},{"command":"gitlens.views.fetch","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.pushWithForce","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens@2"},{"command":"gitlens.views.openInTerminal","when":"viewItem =~ /gitlens:repository\\b/","group":"2_gitlens@1"},{"command":"gitlens.openRepoInRemote","when":"viewItem =~ /gitlens:repository\\b/ && gitlens:hasRemotes","group":"2_gitlens@2"},{"command":"gitlens.showCommitSearch","when":"viewItem =~ /gitlens:repository\\b/","group":"3_gitlens@1"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"4_gitlens@1"},{"command":"gitlens.stashSave","when":"!gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"4_gitlens@2"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+starred\\b)/","group":"8_gitlens@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/","group":"8_gitlens@1"},{"command":"gitlens.views.closeRepository","when":"viewItem =~ /gitlens:repository\\b/","group":"8_gitlens@2"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:behind","group":"inline@1"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:behind","group":"1_gitlens@1"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead","group":"inline@1","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead","group":"1_gitlens@1"},{"command":"gitlens.views.pushWithForce","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead","group":"1_gitlens@2"},{"command":"gitlens.views.dismissNode","when":"viewItem =~ /gitlens:(compare:picker:ref|compare:results\\b(?!.*?\\b\\+pinned\\b)|search)\\b(?!:(commits|files))/","group":"inline@99"},{"command":"gitlens.views.setComparisonToTwoDot","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+threedot\\b)/","group":"inline@1"},{"command":"gitlens.views.setComparisonToThreeDot","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+twodot\\b)/","group":"inline@1"},{"command":"gitlens.views.repositories.setBranchComparisonToWorking","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+branch\\b)/","group":"inline@2"},{"command":"gitlens.views.repositories.setBranchComparisonToBranch","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+working\\b)/","group":"inline@2"},{"command":"gitlens.views.setComparisonToTwoDot","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+threedot\\b)/","group":"1_gitlens@1"},{"command":"gitlens.views.setComparisonToThreeDot","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+twodot\\b)/","group":"1_gitlens@1"},{"command":"gitlens.views.repositories.setBranchComparisonToWorking","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+branch\\b)/","group":"1_gitlens@2"},{"command":"gitlens.views.repositories.setBranchComparisonToBranch","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+working\\b)/","group":"1_gitlens@2"},{"command":"gitlens.views.compare.pinComparison","when":"viewItem =~ /gitlens:compare:results\\b(?!.*?\\b\\+pinned\\b)/","group":"inline@1"},{"command":"gitlens.views.compare.unpinComparison","when":"viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+pinned\\b)/","group":"inline@1"},{"command":"gitlens.views.setComparisonToTwoDot","when":"viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+threedot\\b)/","group":"inline@2"},{"command":"gitlens.views.setComparisonToThreeDot","when":"viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+twodot\\b)/","group":"inline@2"},{"command":"gitlens.views.compare.swapComparison","when":"viewItem =~ /gitlens:compare:results\\b/","group":"inline@3"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:compare:(branch(?=.*?\\b\\+comparing\\b)|results)\\b/","group":"inline@4"},{"command":"gitlens.views.openDirectoryDiff","when":"viewItem =~ /gitlens:compare:results\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.compare.pinComparison","when":"viewItem =~ /gitlens:compare:results\\b(?!.*?\\b\\+pinned\\b)/","group":"2_gitlens@1"},{"command":"gitlens.views.compare.unpinComparison","when":"viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+pinned\\b)/","group":"2_gitlens@1"},{"command":"gitlens.views.setComparisonToTwoDot","when":"viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+threedot\\b)/","group":"2_gitlens@2"},{"command":"gitlens.views.setComparisonToThreeDot","when":"viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+twodot\\b)/","group":"2_gitlens@2"},{"command":"gitlens.views.compare.swapComparison","when":"viewItem =~ /gitlens:compare:results\\b/","group":"2_gitlens@3"},{"command":"gitlens.views.search.searchCommits","when":"viewItem == gitlens:search:results","group":"inline@1"},{"command":"gitlens.views.search.searchCommits","when":"viewItem == gitlens:search:results","group":"2_gitlens@1"},{"command":"gitlens.stashSave","when":"!gitlens:readonly && viewItem =~ /^gitlens:(stashes|status:files)$/","group":"inline@98"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stashes","group":"inline@99"},{"command":"gitlens.stashSave","when":"!gitlens:readonly && viewItem =~ /^gitlens:(stashes|status:files)$/","group":"1_gitlens@1"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stashes","group":"1_gitlens@2"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"inline@98"},{"command":"gitlens.stashDelete","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"inline@99"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"1_gitlens@1"},{"command":"gitlens.stashDelete","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"1_gitlens@2"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem =~ /gitlens:tag\\b/","group":"inline@10"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem =~ /gitlens:tag\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.terminalDeleteTag","when":"!gitlens:readonly && viewItem == gitlens:tag","group":"8_gitlens"},{"command":"gitlens.views.stageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/","group":"inline@1"},{"command":"gitlens.views.unstageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/","group":"inline@2"},{"command":"gitlens.views.stageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/","group":"1_gitlens@1"},{"command":"gitlens.views.unstageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/","group":"1_gitlens@2"},{"command":"gitlens.views.expandNode","when":"viewItem =~ /gitlens:(compare|folder|results|search|status:files)\\b/","group":"8_gitlens@1"},{"command":"gitlens.views.dismissNode","when":"viewItem =~ /gitlens:(compare:picker:ref|compare:results\\b(?!.*?\\b\\+pinned\\b)|search)\\b(?!:(commits|files))/","group":"8_gitlens@2"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:(?!file\\b)/","group":"9_gitlens@1"},{"command":"gitlens.views.showAllChildren","when":"viewItem =~ /gitlens:pager\\b/","group":"inline@1"},{"command":"gitlens.views.showAllChildren","when":"viewItem =~ /gitlens:pager\\b/","group":"1_gitlens@1"}]},"keybindings":[{"command":"gitlens.key.left","key":"alt+left","when":"gitlens:key:left"},{"command":"gitlens.key.right","key":"alt+right","when":"gitlens:key:right"},{"command":"gitlens.key.,","key":"alt+,","when":"gitlens:key:,"},{"command":"gitlens.key..","key":"alt+.","when":"gitlens:key:."},{"command":"gitlens.key.escape","key":"escape","when":"gitlens:key:escape && editorTextFocus && !findWidgetVisible && !renameInputVisible && !suggestWidgetVisible && !isInEmbeddedEditor"},{"command":"gitlens.toggleFileBlame","key":"alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleCodeLens","key":"shift+alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.showLastQuickPick","key":"alt+-","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showCommitSearch","key":"alt+/","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickFileHistory","key":"alt+h","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","key":"shift+alt+h","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","key":"alt+s","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"alt+c","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled"},{"command":"gitlens.diffWithNext","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithNextInDiff","key":"alt+.","when":"config.gitlens.keymap == alternate && isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithPrevious","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPreviousInDiff","key":"alt+,","when":"config.gitlens.keymap == alternate && isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithPrevious","key":"shift+alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","key":"shift+alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithWorkingInDiff","key":"shift+alt+.","when":"config.gitlens.keymap == alternate && isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffLineWithWorking","key":"alt+w","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.toggleFileBlame","key":"ctrl+shift+g b","mac":"cmd+alt+g b","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleCodeLens","key":"ctrl+shift+g shift+b","mac":"cmd+alt+g shift+b","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.showLastQuickPick","key":"ctrl+shift+g -","mac":"cmd+alt+g -","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showCommitSearch","key":"ctrl+shift+g /","mac":"cmd+alt+g /","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickFileHistory","key":"ctrl+shift+g h","mac":"cmd+alt+g h","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","key":"ctrl+shift+g shift+h","mac":"cmd+alt+g shift+h","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","key":"ctrl+shift+g s","mac":"cmd+alt+g s","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"ctrl+shift+g c","mac":"cmd+alt+g c","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled"},{"command":"gitlens.diffWithNext","key":"ctrl+shift+g .","mac":"cmd+alt+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithNextInDiff","key":"ctrl+shift+g .","mac":"cmd+alt+g .","when":"config.gitlens.keymap == chorded && isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithPrevious","key":"ctrl+shift+g ,","mac":"cmd+alt+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPreviousInDiff","key":"ctrl+shift+g ,","mac":"cmd+alt+g ,","when":"config.gitlens.keymap == chorded && isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithPrevious","key":"ctrl+shift+g shift+,","mac":"cmd+alt+g shift+,","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","key":"ctrl+shift+g shift+.","mac":"cmd+alt+g shift+.","when":"config.gitlens.keymap == chorded && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithWorkingInDiff","key":"ctrl+shift+g shift+.","mac":"cmd+alt+g shift+.","when":"config.gitlens.keymap == chorded && isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffLineWithWorking","key":"ctrl+shift+g w","mac":"cmd+alt+g w","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"workbench.view.scm","key":"ctrl+shift+g g","mac":"ctrl+shift+g","when":"config.gitlens.keymap == chorded && gitlens:enabled"}],"resourceLabelFormatters":[{"scheme":"gitlens","authority":"*","formatting":{"label":"${path} (${authority})","separator":"/"}}],"viewsContainers":{"activitybar":[{"id":"gitlens","title":"GitLens","icon":"images/gitlens-activitybar.svg"}]},"views":{"gitlens":[{"id":"gitlens.views.repositories:gitlens","name":"Repositories","when":"config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == gitlens"},{"id":"gitlens.views.fileHistory:gitlens","name":"File History","when":"config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == gitlens"},{"id":"gitlens.views.lineHistory:gitlens","name":"Line History","when":"config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == gitlens"},{"id":"gitlens.views.compare:gitlens","name":"Compare","when":"config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == gitlens"},{"id":"gitlens.views.search:gitlens","name":"Search Commits","when":"config.gitlens.views.search.enabled && config.gitlens.views.search.location == gitlens"}],"explorer":[{"id":"gitlens.views.repositories:explorer","name":"GitLens: Repositories","when":"gitlens:enabled && config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == explorer"},{"id":"gitlens.views.fileHistory:explorer","name":"GitLens: File History","when":"gitlens:enabled && config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == explorer"},{"id":"gitlens.views.lineHistory:explorer","name":"GitLens: Line History","when":"gitlens:enabled && config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == explorer"},{"id":"gitlens.views.compare:explorer","name":"GitLens: Compare","when":"gitlens:enabled && config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == explorer"},{"id":"gitlens.views.search:explorer","name":"GitLens: Search Commits","when":"gitlens:enabled && config.gitlens.views.search.enabled && config.gitlens.views.search.location == explorer"}],"scm":[{"id":"gitlens.views.repositories:scm","name":"GitLens: Repositories","when":"gitlens:enabled && config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == scm"},{"id":"gitlens.views.fileHistory:scm","name":"GitLens: File History","when":"gitlens:enabled && config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == scm"},{"id":"gitlens.views.lineHistory:scm","name":"GitLens: Line History","when":"gitlens:enabled && config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == scm"},{"id":"gitlens.views.compare:scm","name":"GitLens: Compare","when":"gitlens:enabled && config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == scm"},{"id":"gitlens.views.search:scm","name":"GitLens: Search Commits","when":"gitlens:enabled && config.gitlens.views.search.enabled && config.gitlens.views.search.location == scm"}]}},"scripts":{"analyze:bundle":"webpack --env.analyzeBundle","analyze:deps":"webpack --env.analyzeDeps","build":"webpack --env.development","bundle":"webpack --env.production","clean":"git clean -Xdf -e !node_modules -e !node_modules/**/*","lint":"eslint src/**/*.ts --fix","pack":"vsce package","pretty":"prettier --config .prettierrc --loglevel warn --write \"./**/*.{ts,md,json}\" && npm run lint","pub":"vsce publish","rebuild":"npm run reset && npm run build","reset":"npm run clean && npm install --no-save","watch":"webpack --watch --env.development --info-verbosity verbose","webviews:optimize":"webpack --config-name webviews --env.optimizeImages","webviews:watch":"webpack --watch --config-name webviews --env.development --info-verbosity verbose","update:emoji":"pushd emoji && node ./shortcodeToEmoji.js && popd","vscode:prepublish":"npm run reset && npm run bundle"},"dependencies":{"dayjs":"1.8.15","iconv-lite":"0.5.0","lodash-es":"4.17.14","vsls":"0.3.1291"},"devDependencies":{"@types/lodash-es":"4.17.3","@types/node":"10.11.7","@types/vscode":"1.31.0","@typescript-eslint/eslint-plugin":"1.11.0","@typescript-eslint/parser":"1.11.0","clean-webpack-plugin":"3.0.0","circular-dependency-plugin":"5.0.2","css-loader":"3.0.0","eslint":"6.0.1","eslint-cli":"1.1.1","eslint-config-prettier":"6.0.0","eslint-loader":"2.2.1","eslint-plugin-import":"2.18.0","eslint-plugin-prettiest":"0.0.2","fork-ts-checker-webpack-plugin":"1.3.7","html-webpack-exclude-assets-plugin":"0.0.7","html-webpack-inline-source-plugin":"0.0.10","html-webpack-plugin":"3.2.0","imagemin-webpack-plugin":"2.4.2","mini-css-extract-plugin":"0.7.0","node-sass":"4.12.0","prettier":"1.18.2","prettier-eslint":"9.0.0","sass-loader":"7.1.0","terser-webpack-plugin":"1.3.0","ts-loader":"6.0.4","typescript":"3.5.3","vsce":"1.64.0","vscode":"1.1.35","webpack":"4.35.3","webpack-cli":"3.3.5","webpack-bundle-analyzer":"3.3.2"},"uuid":"4de763bd-505d-4978-9575-2b7696ecf94e","isBuiltin":false,"isUnderDevelopment":false,"id":"eamodio.gitlens","identifier":{"value":"eamodio.gitlens","_lower":"eamodio.gitlens"},"extensionLocation":{"$mid":1,"fsPath":"/home/isaquepf/.vscode-insiders/extensions/eamodio.gitlens-9.8.5","path":"/home/isaquepf/.vscode-insiders/extensions/eamodio.gitlens-9.8.5","scheme":"file"}},{"name":"prettier-vscode","displayName":"Prettier - Code formatter","description":"VS Code plugin for prettier/prettier","version":"1.9.0","publisher":"esbenp","author":"Esben Petersen <@esbenp>","galleryBanner":{"color":"#ffe04b","theme":"light"},"homepage":"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode","repository":{"type":"git","url":"https://github.com/prettier/prettier-vscode.git"},"license":"MIT","bugs":{"url":"https://github.com/prettier/prettier-vscode/issues"},"engines":{"vscode":"^1.17.0"},"keywords":["multi-root ready"],"categories":["Formatters"],"activationEvents":["*"],"icon":"icon.png","main":"/home/isaquepf/.vscode-insiders/extensions/esbenp.prettier-vscode-1.9.0/out/src/extension","contributes":{"configuration":{"type":"object","title":"Prettier - Code formatter configuration","properties":{"prettier.disableLanguages":{"type":"array","items":{"type":"string"},"default":["vue"],"description":"A list of languages IDs to disable this extension on","scope":"window"},"prettier.eslintIntegration":{"type":"boolean","default":false,"description":"Use 'prettier-eslint' instead of 'prettier'. Other settings will only be fallbacks in case they could not be inferred from eslint rules.","scope":"resource"},"prettier.tslintIntegration":{"type":"boolean","default":false,"description":"Use 'prettier-tslint' instead of 'prettier'. Other settings will only be fallbacks in case they could not be inferred from tslint rules.","scope":"resource"},"prettier.stylelintIntegration":{"type":"boolean","default":false,"description":"Use 'prettier-stylelint' instead of 'prettier'. Other settings will only be fallbacks in case they could not be inferred from stylelint rules.","scope":"resource"},"prettier.requireConfig":{"type":"boolean","default":false,"description":"Require a 'prettierconfig' to format","scope":"resource"},"prettier.ignorePath":{"type":"string","default":".prettierignore","description":"Path to a .prettierignore or similar file","scope":"resource"},"prettier.printWidth":{"type":"integer","default":80,"description":"Fit code within this line limit","scope":"resource"},"prettier.tabWidth":{"type":"integer","default":2,"description":"Number of spaces it should use per tab","scope":"resource"},"prettier.singleQuote":{"type":"boolean","default":false,"description":"If true, will use single instead of double quotes","scope":"resource"},"prettier.trailingComma":{"type":"string","enum":["none","es5","all"],"default":"none","description":"Controls the printing of trailing commas wherever possible.\n Valid options:\n    'none' - No trailing commas\n    'es5' - Trailing commas where valid in ES5 (objects, arrays, etc)\n    'all' - Trailing commas wherever possible (function arguments)","scope":"resource"},"prettier.bracketSpacing":{"type":"boolean","default":true,"description":"Controls the printing of spaces inside object literals","scope":"resource"},"prettier.jsxBracketSameLine":{"type":"boolean","default":false,"description":"If true, puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line","scope":"resource"},"prettier.parser":{"type":"string","enum":["babylon","flow"],"default":"babylon","description":"Override the parser. You shouldn't have to change this setting.","scope":"resource"},"prettier.semi":{"type":"boolean","default":true,"description":"Whether to add a semicolon at the end of every line","scope":"resource"},"prettier.useTabs":{"type":"boolean","default":false,"description":"Indent lines with tabs","scope":"resource"},"prettier.proseWrap":{"type":"string","enum":["preserve","always","never"],"default":"preserve","description":"(Markdown) wrap prose over multiple lines"},"prettier.arrowParens":{"type":"string","enum":["avoid","always"],"default":"avoid","description":"Include parentheses around a sole arrow function parameter","scope":"resource"},"prettier.jsxSingleQuote":{"type":"boolean","default":false,"description":"Use single quotes instead of double quotes in JSX"},"prettier.htmlWhitespaceSensitivity":{"type":"string","enum":["css","strict","ignore"],"default":"css","description":"Specify the global whitespace sensitivity for HTML files.\n Valid options: \n'css' - Respect the default value of CSS display property. \n'strict' - Whitespaces are considered sensitive. \n'ignore' - Whitespaces are considered insensitive."},"prettier.endOfLine":{"type":"string","enum":["auto","lf","crlf","cr"],"default":"auto","description":"Specify the end of line used by prettier"},"prettier.quoteProps":{"type":"string","enum":["as-needed","consistent","preserve"],"default":"as-needed","description":"Change when properties in objects are quoted"}}},"jsonValidation":[{"fileMatch":".prettierrc","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":".prettierrc.json","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"json","filenames":[".prettierrc"]},{"id":"ignore","filenames":[".prettierignore"]}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc --watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"cd testEslint && npm i && cd ../testTslint && npm i && cd .. && cross-env CODE_TESTS_WORKSPACE=testWorkspace.code-workspace node ./node_modules/vscode/bin/test","version":"node ./scripts/version.js && git add CHANGELOG.md"},"devDependencies":{"@types/mocha":"^5.2.1","@types/node":"^8.10.39","@types/resolve":"0.0.8","cross-env":"^5.1.6","mocha":"^5.2.0","vscode":"^1.1.28"},"dependencies":{"ignore":"^3.3.8","prettier":"1.17.0","prettier-eslint":"^8.8.2","prettier-stylelint":"^0.4.2","prettier-tslint":"^0.4.2","read-pkg-up":"^4.0.0","resolve":"^1.10.0","typescript":"^2.9.2"},"uuid":"96fa4707-6983-4489-b7c5-d5ffdfdcce90","isBuiltin":false,"isUnderDevelopment":false,"id":"esbenp.prettier-vscode","identifier":{"value":"esbenp.prettier-vscode","_lower":"esbenp.prettier-vscode"},"extensionLocation":{"$mid":1,"fsPath":"/home/isaquepf/.vscode-insiders/extensions/esbenp.prettier-vscode-1.9.0","path":"/home/isaquepf/.vscode-insiders/extensions/esbenp.prettier-vscode-1.9.0","scheme":"file"}},{"name":"csharpextensions","displayName":"C# Extensions","description":"C# IDE Extensions for VSCode","author":"Jonathan Channon","license":"SEE LICENSE IN license.txt","version":"1.3.0","publisher":"jchannon","engines":{"vscode":"^1.5.0"},"repository":"https://github.com/jchannon/csharpextensions","icon":"logo.png","categories":["Languages","Linters","Snippets"],"activationEvents":["onLanguage:csharp","onCommand:csharpextensions.createClass","onCommand:csharpextensions.createInterface"],"main":"/home/isaquepf/.vscode-insiders/extensions/jchannon.csharpextensions-1.3.0/out/src/extension","contributes":{"commands":[{"command":"csharpextensions.createClass","title":"New C# Class"},{"command":"csharpextensions.createInterface","title":"New C# Interface"}],"menus":{"explorer/context":[{"group":"navigation@-1","command":"csharpextensions.createClass"},{"group":"navigation@-1","command":"csharpextensions.createInterface"}]},"configuration":{"title":"C# Extensions configuration","properties":{"csharpextensions.privateMemberPrefix":{"type":"string","default":"","description":"Prefix for generated private member declarations"},"csharpextensions.useThisForCtorAssignments":{"type":"boolean","default":true,"description":"Wether or not a ctor assignment of a property or variable should be prefixed with this."},"csharpextensions.reFormatAfterChange":{"type":"boolean","default":true,"description":"If true the document will be reformatted after codeactions are used."}}}},"scripts":{"vscode:prepublish":"node node_modules/typescript/bin/tsc -p ./","compile":"node node_modules/typescript/bin/tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"typescript":"^2.0.3","vscode":"^1.0.0","mocha":"^2.3.3","@types/node":"^6.0.40","@types/mocha":"^2.2.32"},"dependencies":{"find-parent-dir":"^0.3.0","find-up-glob":"^1.0.0"},"uuid":"e046ec1e-3907-466b-aaea-ff1956a46d27","isBuiltin":false,"isUnderDevelopment":false,"id":"jchannon.csharpextensions","identifier":{"value":"jchannon.csharpextensions","_lower":"jchannon.csharpextensions"},"extensionLocation":{"$mid":1,"fsPath":"/home/isaquepf/.vscode-insiders/extensions/jchannon.csharpextensions-1.3.0","path":"/home/isaquepf/.vscode-insiders/extensions/jchannon.csharpextensions-1.3.0","scheme":"file"}},{"name":"vscode-docker","version":"0.7.0","preview":true,"publisher":"ms-azuretools","displayName":"Docker","description":"Adds syntax highlighting, commands, hover tips, and linting for Dockerfile and docker-compose files.","license":"SEE LICENSE IN LICENSE.md","icon":"resources/docker.png","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","galleryBanner":{"color":"#1289B9","theme":"dark"},"categories":["Programming Languages","Linters","Azure"],"keywords":["docker","compose","container","multi-root ready"],"repository":{"type":"git","url":"https://github.com/microsoft/vscode-docker"},"homepage":"https://github.com/Microsoft/vscode-docker/blob/master/README.md","activationEvents":["onCommand:vscode-docker.api.configure","onCommand:vscode-docker.compose.down","onCommand:vscode-docker.compose.restart","onCommand:vscode-docker.compose.up","onCommand:vscode-docker.configure","onCommand:vscode-docker.containers.attachShell","onCommand:vscode-docker.containers.configureExplorer","onCommand:vscode-docker.containers.inspect","onCommand:vscode-docker.containers.prune","onCommand:vscode-docker.containers.refresh","onCommand:vscode-docker.containers.remove","onCommand:vscode-docker.containers.restart","onCommand:vscode-docker.containers.start","onCommand:vscode-docker.containers.stop","onCommand:vscode-docker.containers.viewLogs","onCommand:vscode-docker.images.build","onCommand:vscode-docker.images.configureExplorer","onCommand:vscode-docker.images.inspect","onCommand:vscode-docker.images.prune","onCommand:vscode-docker.images.push","onCommand:vscode-docker.images.refresh","onCommand:vscode-docker.images.remove","onCommand:vscode-docker.images.run","onCommand:vscode-docker.images.runAzureCli","onCommand:vscode-docker.images.runInteractive","onCommand:vscode-docker.images.tag","onCommand:vscode-docker.networks.configureExplorer","onCommand:vscode-docker.networks.inspect","onCommand:vscode-docker.networks.prune","onCommand:vscode-docker.networks.refresh","onCommand:vscode-docker.networks.remove","onCommand:vscode-docker.pruneSystem","onCommand:vscode-docker.registries.azure.buildImage","onCommand:vscode-docker.registries.azure.createRegistry","onCommand:vscode-docker.registries.azure.deleteRegistry","onCommand:vscode-docker.registries.azure.deleteRepository","onCommand:vscode-docker.registries.azure.openInPortal","onCommand:vscode-docker.registries.azure.runFileAsTask","onCommand:vscode-docker.registries.azure.runTask","onCommand:vscode-docker.registries.azure.untagImage","onCommand:vscode-docker.registries.azure.viewProperties","onCommand:vscode-docker.registries.azure.viewTaskLogs","onCommand:vscode-docker.registries.connectRegistry","onCommand:vscode-docker.registries.copyImageDigest","onCommand:vscode-docker.registries.deleteImage","onCommand:vscode-docker.registries.deployImageToAzure","onCommand:vscode-docker.registries.disconnectRegistry","onCommand:vscode-docker.registries.dockerHub.openInBrowser","onCommand:vscode-docker.registries.logInToDockerCli","onCommand:vscode-docker.registries.logOutOfDockerCli","onCommand:vscode-docker.registries.pullImage","onCommand:vscode-docker.registries.pullRepository","onCommand:vscode-docker.registries.refresh","onCommand:vscode-docker.registries.setAsDefault","onCommand:vscode-docker.volumes.configureExplorer","onCommand:vscode-docker.volumes.inspect","onCommand:vscode-docker.volumes.prune","onCommand:vscode-docker.volumes.refresh","onCommand:vscode-docker.volumes.remove","onDebugInitialConfigurations","onDebugResolve:docker-coreclr","onLanguage:dockerfile","onLanguage:yaml","onView:dockerContainers","onView:dockerImages","onView:dockerNetworks","onView:dockerRegistries","onView:dockerVolumes"],"main":"/home/isaquepf/.vscode-insiders/extensions/ms-azuretools.vscode-docker-0.7.0/main","contributes":{"menus":{"commandPalette":[{"command":"vscode-docker.api.configure","when":"never"},{"command":"vscode-docker.registries.azure.selectSubscriptions","when":"never"}],"editor/context":[{"when":"editorLangId == dockerfile && isAzureAccountInstalled","command":"vscode-docker.registries.azure.buildImage","group":"docker"},{"when":"resourceFilename =~ /^(?:(?!^docker-compose\\.ya?ml$).)*\\.ya?ml$/i && isAzureAccountInstalled","command":"vscode-docker.registries.azure.runFileAsTask","group":"docker"},{"when":"resourceFilename == docker-compose.yml","command":"vscode-docker.compose.down","group":"docker"},{"when":"resourceFilename == docker-compose.yml","command":"vscode-docker.compose.restart","group":"docker"},{"when":"resourceFilename == docker-compose.yml","command":"vscode-docker.compose.up","group":"docker"},{"when":"resourceFilename == docker-compose.debug.yml","command":"vscode-docker.compose.down","group":"docker"},{"when":"resourceFilename == docker-compose.debug.yml","command":"vscode-docker.compose.restart","group":"docker"},{"when":"resourceFilename == docker-compose.debug.yml","command":"vscode-docker.compose.up","group":"docker"},{"when":"editorLangId == dockerfile","command":"vscode-docker.images.build","group":"docker"}],"explorer/context":[{"when":"resourceFilename =~ /(^|\\.)dockerfile$/i && isAzureAccountInstalled","command":"vscode-docker.registries.azure.buildImage","group":"docker"},{"when":"resourceFilename =~ /^(?:(?!^docker-compose\\.ya?ml$).)*\\.ya?ml$/i && isAzureAccountInstalled","command":"vscode-docker.registries.azure.runFileAsTask","group":"docker"},{"when":"resourceFilename =~ /docker-compose/i","command":"vscode-docker.compose.down","group":"docker"},{"when":"resourceFilename =~ /docker-compose/i","command":"vscode-docker.compose.restart","group":"docker"},{"when":"resourceFilename =~ /docker-compose/i","command":"vscode-docker.compose.up","group":"docker"},{"when":"resourceFilename =~ /dockerfile/i","command":"vscode-docker.images.build","group":"docker"}],"view/title":[{"command":"vscode-docker.containers.prune","when":"view == dockerContainers","group":"navigation@1"},{"command":"vscode-docker.containers.configureExplorer","when":"view == dockerContainers","group":"navigation@8"},{"command":"vscode-docker.networks.configureExplorer","when":"view == dockerNetworks","group":"navigation@8"},{"command":"vscode-docker.containers.refresh","when":"view == dockerContainers","group":"navigation@9"},{"command":"vscode-docker.networks.prune","when":"view == dockerNetworks","group":"navigation@1"},{"command":"vscode-docker.networks.refresh","when":"view == dockerNetworks","group":"navigation@9"},{"command":"vscode-docker.images.prune","when":"view == dockerImages","group":"navigation@2"},{"command":"vscode-docker.images.configureExplorer","when":"view == dockerImages","group":"navigation@8"},{"command":"vscode-docker.images.refresh","when":"view == dockerImages","group":"navigation@9"},{"command":"vscode-docker.registries.refresh","when":"view == dockerRegistries","group":"navigation@9"},{"command":"vscode-docker.registries.connectRegistry","when":"view == dockerRegistries","group":"navigation@1"},{"command":"vscode-docker.volumes.prune","when":"view == dockerVolumes","group":"navigation@1"},{"command":"vscode-docker.volumes.configureExplorer","when":"view == dockerVolumes","group":"navigation@8"},{"command":"vscode-docker.volumes.refresh","when":"view == dockerVolumes","group":"navigation@9"}],"view/item/context":[{"command":"vscode-docker.containers.viewLogs","when":"view == dockerContainers && viewItem =~ /container$/i","group":"containers_1_general@1"},{"command":"vscode-docker.containers.attachShell","when":"view == dockerContainers && viewItem =~ /^runningContainer$/i","group":"containers_1_general@2"},{"command":"vscode-docker.containers.inspect","when":"view == dockerContainers && viewItem =~ /container$/i","group":"containers_1_general@3"},{"command":"vscode-docker.containers.start","when":"view == dockerContainers && viewItem =~ /^(created|dead|exited|paused)Container$/i","group":"containers_1_general@4"},{"command":"vscode-docker.containers.stop","when":"view == dockerContainers && viewItem =~ /^(paused|restarting|running)Container$/i","group":"containers_1_general@5"},{"command":"vscode-docker.containers.restart","when":"view == dockerContainers && viewItem =~ /^runningContainer$/i","group":"containers_1_general@6"},{"command":"vscode-docker.containers.remove","when":"view == dockerContainers && viewItem =~ /container$/i","group":"containers_2_destructive@1"},{"command":"vscode-docker.images.run","when":"view == dockerImages && viewItem == image","group":"images_1_run@1"},{"command":"vscode-docker.images.runInteractive","when":"view == dockerImages && viewItem == image","group":"images_1_run@2"},{"command":"vscode-docker.images.inspect","when":"view == dockerImages && viewItem == image","group":"images_2_general@1"},{"command":"vscode-docker.images.push","when":"view == dockerImages && viewItem == image","group":"images_2_general@2"},{"command":"vscode-docker.images.tag","when":"view == dockerImages && viewItem == image","group":"images_2_general@3"},{"command":"vscode-docker.images.remove","when":"view == dockerImages && viewItem == image","group":"images_3_destructive@1"},{"command":"vscode-docker.registries.azure.selectSubscriptions","when":"view == dockerRegistries && viewItem == azureextensionui.azureSubscription","group":"inline"},{"command":"vscode-docker.registries.azure.viewTaskLogs","when":"view == dockerRegistries && viewItem == azureTaskRun","group":"inline"},{"command":"vscode-docker.networks.inspect","when":"view == dockerNetworks && viewItem == network","group":"networks_1_general@1"},{"command":"vscode-docker.networks.remove","when":"view == dockerNetworks && viewItem == network","group":"networks_2_destructive@1"},{"command":"vscode-docker.registries.azure.createRegistry","when":"view == dockerRegistries && viewItem == azureextensionui.azureSubscription","group":"regs_1_general@1"},{"command":"vscode-docker.registries.setAsDefault","when":"view == dockerRegistries && viewItem =~ /Registry;/","group":"regs_reg_1_general@1"},{"command":"vscode-docker.registries.azure.deleteRegistry","when":"view == dockerRegistries && viewItem == azure;DockerV2;Registry;","group":"regs_reg_2_destructive@1"},{"command":"vscode-docker.registries.pullRepository","when":"view == dockerRegistries && viewItem =~ /Repository;/","group":"regs_repo_1_general@1"},{"command":"vscode-docker.registries.azure.deleteRepository","when":"view == dockerRegistries && viewItem == azure;DockerV2;Repository;","group":"regs_repo_2_destructive@1"},{"command":"vscode-docker.registries.pullImage","when":"view == dockerRegistries && viewItem =~ /Tag;/","group":"regs_tag_1_general@1"},{"command":"vscode-docker.registries.copyImageDigest","when":"view == dockerRegistries && viewItem =~ /DockerV2;Tag;/","group":"regs_tag_1_general@2"},{"command":"vscode-docker.registries.deployImageToAzure","when":"view == dockerRegistries && viewItem =~ /(DockerV2|DockerHubV2);Tag;/ && isAzureAccountInstalled","group":"regs_tag_1_general@3"},{"command":"vscode-docker.registries.azure.untagImage","when":"view == dockerRegistries && viewItem == azure;DockerV2;Tag;","group":"regs_tag_2_destructive@1"},{"command":"vscode-docker.registries.deleteImage","when":"view == dockerRegistries && viewItem =~ /DockerV2;Tag;/","group":"regs_tag_2_destructive@2"},{"command":"vscode-docker.registries.azure.runTask","when":"view == dockerRegistries && viewItem == azureTask","group":"regs_task_1_general@1"},{"command":"vscode-docker.registries.copyImageDigest","when":"view == dockerRegistries && viewItem == azureTaskRun","group":"regs_taskRun_1_general@1"},{"command":"vscode-docker.registries.azure.viewTaskLogs","when":"view == dockerRegistries && viewItem == azureTaskRun","group":"regs_taskRun_1_general@2"},{"command":"vscode-docker.registries.disconnectRegistry","when":"view == dockerRegistries && viewItem =~ /RegistryProvider;/","group":"regs_yyy_destructive@1"},{"command":"vscode-docker.registries.azure.openInPortal","when":"view == dockerRegistries && viewItem =~ /azure(Subscription|;DockerV2;Registry;)/","group":"regs_zzz_common@1"},{"command":"vscode-docker.registries.dockerHub.openInBrowser","when":"view == dockerRegistries && viewItem =~ /dockerHub;DockerHubV2;(Tag|Repository|Registry);/","group":"regs_zzz_common@1"},{"command":"vscode-docker.registries.azure.viewProperties","when":"view == dockerRegistries && viewItem =~ /azure(TaskRun|;DockerV2;Registry;)/","group":"regs_zzz_common@2"},{"command":"vscode-docker.registries.refresh","when":"view == dockerRegistries && viewItem == connectedRegistries","group":"regs_zzz_common@9"},{"command":"vscode-docker.registries.refresh","when":"view == dockerRegistries && viewItem =~ /.*;.*;(Repository|Registry|RegistryProvider);/","group":"regs_zzz_common@9"},{"command":"vscode-docker.registries.refresh","when":"view == dockerRegistries && viewItem =~ /azure(Subscription|Tasks|Task|RunsWithoutTask)$/","group":"regs_zzz_common@9"},{"command":"vscode-docker.volumes.inspect","when":"view == dockerVolumes && viewItem == volume","group":"volumes_1_general@1"},{"command":"vscode-docker.volumes.remove","when":"view == dockerVolumes && viewItem == volume","group":"volumes_2_destructive@1"}]},"debuggers":[{"type":"docker","label":"Docker: Node.js","configurationSnippets":[{"label":"Docker: Attach to Node","description":"Docker: Attach to Node","body":{"type":"node","request":"attach","name":"Docker: Attach to Node","remoteRoot":"/usr/src/app"}}]},{"type":"docker-coreclr","label":"Docker: Launch .NET Core (Preview)","configurationSnippets":[{"label":"Docker: Launch .NET Core (Preview)","description":"Docker: Launch .NET Core (Preview)","body":{"name":"Docker: Launch .NET Core (Preview)","type":"docker-coreclr","request":"launch","preLaunchTask":"build","dockerBuild":{},"dockerRun":{}}}],"configurationAttributes":{"launch":{"properties":{"appFolder":{"type":"string","description":"Path to the folder for the application."},"appOutput":{"type":"string","description":"Path to the output assembly for the application."},"appProject":{"type":"string","description":"Path to the application project file."},"dockerBuild":{"description":"Options for building the Docker image used for debugging.","properties":{"args":{"type":"object","description":"Build arguments applied to the Docker image used for debugging.","additionalProperties":{"type":"string"}},"context":{"type":"string","description":"Path to the Docker build context."},"dockerfile":{"type":"string","description":"Path to the Dockerfile used for the build."},"labels":{"type":"object","description":"Labels applied to the Docker image used for debugging.","additionalProperties":{"type":"string"}},"tag":{"type":"string","description":"Tag applied to the Docker image used for debugging."},"target":{"type":"string","description":"Docker build target (stage) used for debugging."}}},"dockerRun":{"description":"Options for running the Docker container used for debugging.","properties":{"containerName":{"type":"string","description":"Name of the container used for debugging."},"env":{"type":"object","description":"Environment variables applied to the Docker container used for debugging.","additionalProperties":{"type":"string"}},"envFiles":{"type":"array","description":"Files of environment variables read in and applied to the Docker container used for debugging.","items":{"type":"string"}},"labels":{"type":"object","description":"Labels applied to the Docker container used for debugging.","additionalProperties":{"type":"string"}},"network":{"type":"string","description":"The network to which the container will be connected."},"networkAlias":{"type":"string","description":"The network-scoped alias to assign to the container."},"ports":{"type":"array","description":"Ports that are going to be mapped on the host.","items":{"type":"object","properties":{"hostPort":{"type":"string","description":"Port number to be bound on the host."},"containerPort":{"type":"string","description":"Port number of the container to be bound."},"protocol":{"type":"string","description":"Specific protocol for the binding (`tcp | udp`).","enum":["tcp","udp"]},"required":["containerPort"]}}},"extraHosts":{"type":"array","description":"Hosts to be added to the container's `hosts` file for DNS resolution.","items":{"type":"object","properties":{"hostname":{"type":"string","description":"Hostname for dns resolution."},"ip":{"type":"string","description":"IP associated to the hostname."}},"required":["hostname","ip"]}},"volumes":{"type":"array","description":"Volumes that are going to be mapped to the container.","items":{"type":"object","properties":{"localPath":{"type":"string","description":"Path on local machine that will be mapped. The folder will be created if it does not exist."},"containerPath":{"type":"string","description":"Path where the volume will be mapped within the container. The folder will be created if it does not exist."},"permissions":{"type":"string","description":"Permissions for the container for the mapped volume, `rw` for read-write or `ro` for read-only.","enum":["rw","ro"]}},"required":["localPath","containerPath"]}}}}}}}}],"languages":[{"id":"dockerfile","aliases":["Dockerfile"],"filenamePatterns":["*.dockerfile","Dockerfile"]},{"id":"ignore","filenames":[".dockerignore"]}],"configuration":{"title":"Docker","properties":{"docker.defaultRegistryPath":{"type":"string","default":"","description":"Default registry and path when tagging an image"},"docker.explorerRefreshInterval":{"type":"number","default":1000,"description":"Explorer refresh interval, default is 1000ms"},"docker.containers.groupBy":{"type":"string","default":"None","description":"The property to use when grouping containers.","enum":["ContainerId","ContainerName","CreatedTime","FullTag","ImageId","None","Ports","Registry","Repository","RepositoryName","RepositoryNameAndTag","State","Status","Tag"]},"docker.containers.description":{"type":"array","default":["ContainerName","Status"],"description":"Any secondary properties to display for a container.","items":{"type":"string","enum":["ContainerId","ContainerName","CreatedTime","FullTag","ImageId","Ports","Registry","Repository","RepositoryName","RepositoryNameAndTag","State","Status","Tag"]}},"docker.containers.label":{"type":"string","default":"FullTag","description":"The primary property to display for a container.","enum":["ContainerId","ContainerName","CreatedTime","FullTag","ImageId","Ports","Registry","Repository","RepositoryName","RepositoryNameAndTag","State","Status","Tag"]},"docker.containers.sortBy":{"type":"string","default":"CreatedTime","description":"The property to use when sorting containers.","enum":["CreatedTime","Label"]},"docker.images.groupBy":{"type":"string","default":"Repository","description":"The property to use when grouping images.","enum":["CreatedTime","FullTag","ImageId","None","Registry","Repository","RepositoryName","RepositoryNameAndTag","Tag"]},"docker.images.description":{"type":"array","default":["CreatedTime"],"description":"Any secondary properties to display for a image.","items":{"type":"string","enum":["CreatedTime","FullTag","ImageId","Registry","Repository","RepositoryName","RepositoryNameAndTag","Tag"]}},"docker.images.label":{"type":"string","default":"Tag","description":"The primary property to display for a image.","enum":["CreatedTime","FullTag","ImageId","Registry","Repository","RepositoryName","RepositoryNameAndTag","Tag"]},"docker.images.sortBy":{"type":"string","default":"CreatedTime","description":"The property to use when sorting images.","enum":["CreatedTime","Label"]},"docker.networks.groupBy":{"type":"string","default":"None","description":"The property to use when grouping networks.","enum":["CreatedTime","NetworkDriver","NetworkId","NetworkName","None"]},"docker.networks.description":{"type":"array","default":["NetworkDriver","CreatedTime"],"description":"Any secondary properties to display for a network.","items":{"type":"string","enum":["CreatedTime","NetworkDriver","NetworkId","NetworkName"]}},"docker.networks.label":{"type":"string","default":"NetworkName","description":"The primary property to display for a network.","enum":["CreatedTime","NetworkDriver","NetworkId","NetworkName"]},"docker.networks.sortBy":{"type":"string","default":"CreatedTime","description":"The property to use when sorting networks.","enum":["CreatedTime","Label"]},"docker.volumes.groupBy":{"type":"string","default":"None","description":"The property to use when grouping volumes.","enum":["CreatedTime","VolumeName","None"]},"docker.volumes.description":{"type":"array","default":["CreatedTime"],"description":"Any secondary properties to display for a volume.","items":{"type":"string","enum":["CreatedTime","VolumeName"]}},"docker.volumes.label":{"type":"string","default":"VolumeName","description":"The primary property to display for a volume.","enum":["CreatedTime","VolumeName"]},"docker.volumes.sortBy":{"type":"string","default":"CreatedTime","description":"The property to use when sorting volumes.","enum":["CreatedTime","Label"]},"docker.imageBuildContextPath":{"type":"string","default":"","description":"Build context PATH to pass to Docker build command"},"docker.truncateLongRegistryPaths":{"type":"boolean","default":false,"description":"Truncate long Image and Container registry paths in the Explorer"},"docker.truncateMaxLength":{"type":"number","default":10,"description":"Maximum number of characters for long registry paths in the Explorer, including elipsis"},"docker.host":{"type":"string","default":"","description":"Equivalent to setting the DOCKER_HOST environment variable."},"docker.certPath":{"type":"string","default":"","description":"Equivalent to setting the DOCKER_CERT_PATH environment variable."},"docker.tlsVerify":{"type":"string","default":"","description":"Equivalent to setting the DOCKER_TLS_VERIFY environment variable."},"docker.machineName":{"type":"string","default":"","description":"Equivalent to setting the DOCKER_MACHINE_NAME environment variable."},"docker.importCertificates":{"oneOf":[{"type":"boolean"},{"type":"object","properties":{"useCertificateStore":{"type":"boolean","default":true,"description":"On Mac and Windows, indicates whether to automatically import certificates from the system certificate store. Ignored on Linux."},"certificatePaths":{"type":"array","items":{"type":"string"},"default":["/etc/ssl/certs/ca-certificates","/etc/openssl/certs","/etc/pki/tls/certs","/usr/local/share/certs"],"description":"Paths to files or folders containing certificates to import. For Linux, the correct path to pick up system-wide certificates will depend on the distribution."}}}],"default":false,"description":"True causes the extension to attempt to find system-wide certificates, false indicates that the default Node.js trusted certificates list will be used. Use an object to get more fine-grained control."},"docker.languageserver.diagnostics.deprecatedMaintainer":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for the deprecated MAINTAINER instruction"},"docker.languageserver.diagnostics.emptyContinuationLine":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging empty continuation lines found in instructions that span multiple lines"},"docker.languageserver.diagnostics.directiveCasing":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for parser directives that are not written in lowercase"},"docker.languageserver.diagnostics.instructionCasing":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for instructions that are not written in uppercase"},"docker.languageserver.diagnostics.instructionCmdMultiple":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging a Dockerfile with multiple CMD instructions"},"docker.languageserver.diagnostics.instructionEntrypointMultiple":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging a Dockerfile with multiple ENTRYPOINT instructions"},"docker.languageserver.diagnostics.instructionHealthcheckMultiple":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging a Dockerfile with multiple HEALTHCHECK instructions"},"docker.languageserver.diagnostics.instructionJSONInSingleQuotes":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for JSON instructions that are written incorrectly with single quotes"},"docker.languageserver.diagnostics.instructionWorkdirRelative":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for WORKDIR instructions that do not point to an absolute path"},"docker.attachShellCommand.linuxContainer":{"type":"string","default":"/bin/sh -c \"[ -e /bin/bash ] && /bin/bash || /bin/sh\"","description":"Attach command to use for Linux containers"},"docker.attachShellCommand.windowsContainer":{"type":"string","default":"powershell","description":"Attach command to use for Windows containers"},"docker.dockerComposeBuild":{"type":"boolean","default":true,"description":"Run docker-compose with the --build argument, defaults to true"},"docker.dockerComposeDetached":{"type":"boolean","default":true,"description":"Run docker-compose with the --d (detached) argument, defaults to true"}}},"commands":[{"command":"vscode-docker.api.configure","title":"Add Docker Files to Workspace (API)...","category":"Docker"},{"command":"vscode-docker.compose.down","title":"Compose Down","category":"Docker"},{"command":"vscode-docker.compose.restart","title":"Compose Restart","category":"Docker"},{"command":"vscode-docker.compose.up","title":"Compose Up","category":"Docker"},{"command":"vscode-docker.configure","title":"Add Docker Files to Workspace...","category":"Docker"},{"command":"vscode-docker.containers.attachShell","title":"Attach Shell","category":"Docker Containers"},{"command":"vscode-docker.containers.configureExplorer","title":"Configure Explorer...","category":"Docker Containers","icon":{"light":"resources/light/settings.svg","dark":"resources/dark/settings.svg"}},{"command":"vscode-docker.containers.inspect","title":"Inspect","category":"Docker Containers"},{"command":"vscode-docker.containers.prune","title":"Prune...","category":"Docker Containers","icon":{"light":"resources/light/prune.svg","dark":"resources/dark/prune.svg"}},{"command":"vscode-docker.containers.refresh","title":"Refresh","category":"Docker Containers","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"vscode-docker.containers.remove","title":"Remove...","category":"Docker Containers"},{"command":"vscode-docker.containers.restart","title":"Restart","category":"Docker Containers"},{"command":"vscode-docker.containers.start","title":"Start","category":"Docker Containers"},{"command":"vscode-docker.containers.stop","title":"Stop","category":"Docker Containers"},{"command":"vscode-docker.containers.viewLogs","title":"View Logs","category":"Docker Containers"},{"command":"vscode-docker.images.build","title":"Build Image...","category":"Docker Images"},{"command":"vscode-docker.images.configureExplorer","title":"Configure Explorer...","category":"Docker Images","icon":{"light":"resources/light/settings.svg","dark":"resources/dark/settings.svg"}},{"command":"vscode-docker.images.inspect","title":"Inspect","category":"Docker Images"},{"command":"vscode-docker.images.prune","title":"Prune...","category":"Docker Images","icon":{"light":"resources/light/prune.svg","dark":"resources/dark/prune.svg"}},{"command":"vscode-docker.images.push","title":"Push","category":"Docker Images"},{"command":"vscode-docker.images.refresh","title":"Refresh","category":"Docker Images","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"vscode-docker.images.remove","title":"Remove...","category":"Docker Images"},{"command":"vscode-docker.images.run","title":"Run","category":"Docker Images"},{"command":"vscode-docker.images.runAzureCli","title":"Run Azure CLI","category":"Docker Images"},{"command":"vscode-docker.images.runInteractive","title":"Run Interactive","category":"Docker Images"},{"command":"vscode-docker.images.tag","title":"Tag...","category":"Docker Images"},{"command":"vscode-docker.networks.configureExplorer","title":"Configure Explorer...","category":"Docker Networks","icon":{"light":"resources/light/settings.svg","dark":"resources/dark/settings.svg"}},{"command":"vscode-docker.networks.inspect","title":"Inspect","category":"Docker Networks"},{"command":"vscode-docker.networks.prune","title":"Prune...","category":"Docker Networks","icon":{"light":"resources/light/prune.svg","dark":"resources/dark/prune.svg"}},{"command":"vscode-docker.networks.refresh","title":"Refresh","category":"Docker Networks","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"vscode-docker.networks.remove","title":"Remove...","category":"Docker Networks"},{"command":"vscode-docker.pruneSystem","title":"Prune System...","category":"Docker"},{"command":"vscode-docker.registries.azure.buildImage","title":"Build Image in Azure...","category":"Azure Container Registry"},{"command":"vscode-docker.registries.azure.createRegistry","title":"Create Registry...","category":"Azure Container Registry"},{"command":"vscode-docker.registries.azure.deleteRegistry","title":"Delete Registry...","category":"Azure Container Registry"},{"command":"vscode-docker.registries.azure.deleteRepository","title":"Delete Repository...","category":"Azure Container Registry"},{"command":"vscode-docker.registries.azure.openInPortal","title":"Open in Portal","category":"Azure Container Registry"},{"command":"vscode-docker.registries.azure.runFileAsTask","title":"Run as Task in Azure...","category":"Azure Container Registry"},{"command":"vscode-docker.registries.azure.runTask","title":"Run Task","category":"Azure Container Registry"},{"command":"vscode-docker.registries.azure.selectSubscriptions","title":"Select Subscriptions...","icon":{"light":"resources/light/filter.svg","dark":"resources/dark/filter.svg"}},{"command":"vscode-docker.registries.azure.untagImage","title":"Untag Image...","category":"Azure Container Registry"},{"command":"vscode-docker.registries.azure.viewProperties","title":"View Properties","category":"Azure Container Registry"},{"command":"vscode-docker.registries.azure.viewTaskLogs","title":"View Logs","category":"Azure Container Registry","icon":{"light":"resources/light/viewLogs.svg","dark":"resources/dark/viewLogs.svg"}},{"command":"vscode-docker.registries.connectRegistry","title":"Connect Registry...","category":"Docker Registries","icon":{"light":"resources/light/connect.svg","dark":"resources/dark/connect.svg"}},{"command":"vscode-docker.registries.copyImageDigest","title":"Copy Image Digest","category":"Docker Registries"},{"command":"vscode-docker.registries.deleteImage","title":"Delete Image...","category":"Docker Registries"},{"command":"vscode-docker.registries.deployImageToAzure","title":"Deploy Image to Azure App Service...","category":"Docker Registries"},{"command":"vscode-docker.registries.disconnectRegistry","title":"Disconnect","category":"Docker Registries"},{"command":"vscode-docker.registries.dockerHub.openInBrowser","title":"Open in Browser","category":"Docker Hub"},{"command":"vscode-docker.registries.logInToDockerCli","title":"Log In to Docker CLI","category":"Docker Registries"},{"command":"vscode-docker.registries.logOutOfDockerCli","title":"Log Out of Docker CLI","category":"Docker Registries"},{"command":"vscode-docker.registries.pullImage","title":"Pull Image","category":"Docker Registries"},{"command":"vscode-docker.registries.pullRepository","title":"Pull Repository","category":"Docker Registries"},{"command":"vscode-docker.registries.refresh","title":"Refresh","category":"Docker Registries","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"vscode-docker.registries.setAsDefault","title":"Set as Default","category":"Docker Registries"},{"command":"vscode-docker.volumes.configureExplorer","title":"Configure Explorer...","category":"Docker Volumes","icon":{"light":"resources/light/settings.svg","dark":"resources/dark/settings.svg"}},{"command":"vscode-docker.volumes.inspect","title":"Inspect","category":"Docker Volumes"},{"command":"vscode-docker.volumes.prune","title":"Prune...","category":"Docker Volumes","icon":{"light":"resources/light/prune.svg","dark":"resources/dark/prune.svg"}},{"command":"vscode-docker.volumes.refresh","title":"Refresh","category":"Docker Volumes","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"vscode-docker.volumes.remove","title":"Remove...","category":"Docker Volumes"}],"views":{"dockerView":[{"id":"dockerContainers","name":"Containers"},{"id":"dockerImages","name":"Images"},{"id":"dockerRegistries","name":"Registries"},{"id":"dockerNetworks","name":"Networks"},{"id":"dockerVolumes","name":"Volumes"}]},"viewsContainers":{"activitybar":[{"icon":"resources/docker.svg","id":"dockerView","title":"Docker"}]}},"engines":{"vscode":"^1.31.0"},"scripts":{"vscode:prepublish":"npm run webpack-prod","build":"tsc -p ./","compile":"tsc -watch -p ./","package":"vsce package","lint":"tslint --project tsconfig.json -t verbose","lint-fix":"tslint --project tsconfig.json -t verbose --fix","postinstall":"node ./node_modules/vscode/bin/install","pretest":"npm run build && npm run webpack","test":"gulp test","all":"npm i && npm run lint && npm test","webpack":"gulp webpack-dev","webpack-prod":"gulp webpack-prod","webpack-profile":"webpack --profile --json --mode production > webpack-stats.json && echo Use http://webpack.github.io/analyse to analyze the stats"},"extensionDependencies":["vscode.docker","vscode.yaml"],"devDependencies":{"@types/adm-zip":"^0.4.32","@types/deep-equal":"^1.0.1","@types/dockerode":"^2.5.19","@types/fs-extra":"^5.0.5","@types/glob":"5.0.35","@types/keytar":"^4.4.0","@types/mocha":"^5.2.6","@types/node":"^11.12.0","@types/request-promise-native":"^1.0.15","@types/semver":"^5.5.0","@types/string-replace-webpack-plugin":"^0.1.0","@types/xml2js":"^0.4.3","adm-zip":"^0.4.11","copy-webpack-plugin":"^4.5.4","gulp":"^4.0.0","mocha":"^5.2.0","mocha-junit-reporter":"^1.18.0","mocha-multi-reporters":"^1.1.7","string-replace-webpack-plugin":"^0.1.3","ts-node":"^7.0.1","tslint":"^5.14.0","tslint-microsoft-contrib":"^6.1.0","typescript":"^3.3.4000","umd-compat-loader":"^2.1.1","vsce":"^1.59.0","vscode":"^1.1.34","vscode-azureextensiondev":"^0.1.8","webpack":"^4.29.6","webpack-cli":"^3.3.0"},"dependencies":{"adal-node":"^0.1.28","azure-arm-containerregistry":"^3.0.0","azure-arm-resource":"^2.0.0-preview","azure-arm-website":"^5.3.0","azure-storage":"^2.8.1","deep-equal":"^1.0.1","dockerfile-language-server-nodejs":"^0.0.21","dockerode":"^2.5.8","fs-extra":"^6.0.1","glob":"7.1.2","gradle-to-js":"^1.2.1","mac-ca":"^1.0.4","moment":"^2.24.0","ms-rest":"^2.5.0","ms-rest-azure":"^2.6.0","opn":"^6.0.0","request":"^2.88.0","request-promise-native":"^1.0.5","semver":"^6.0.0","tar":"^4.4.6","vscode-azureextensionui":"^0.25.3","vscode-azureappservice":"^0.42.0","vscode-languageclient":"^5.1.1","win-ca":"^2.4.1","xml2js":"^0.4.19"},"uuid":"0479fc1c-3d67-49f9-b087-fb9069afe48f","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-azuretools.vscode-docker","identifier":{"value":"ms-azuretools.vscode-docker","_lower":"ms-azuretools.vscode-docker"},"extensionLocation":{"$mid":1,"fsPath":"/home/isaquepf/.vscode-insiders/extensions/ms-azuretools.vscode-docker-0.7.0","path":"/home/isaquepf/.vscode-insiders/extensions/ms-azuretools.vscode-docker-0.7.0","scheme":"file"}},{"name":"csharp","publisher":"ms-vscode","version":"1.20.0","description":"C# for Visual Studio Code (powered by OmniSharp).","displayName":"C#","author":"Microsoft Corporation","license":"SEE LICENSE IN RuntimeLicenses/license.txt","icon":"images/csharpIcon.png","preview":false,"bugs":{"url":"https://github.com/OmniSharp/omnisharp-vscode/issues"},"repository":{"type":"git","url":"https://github.com/OmniSharp/omnisharp-vscode.git"},"categories":["Debuggers","Programming Languages","Linters","Snippets"],"keywords":["multi-root ready",".NET","ASP.NET",".NET Core","dotnet"],"defaults":{"omniSharp":"1.32.20","razor":"1.0.0-alpha3-20190606.2"},"main":"/home/isaquepf/.vscode-insiders/extensions/ms-vscode.csharp-1.20.0/dist/extension","scripts":{"vscode:prepublish":"tsc -p ./ && webpack --mode production","compile":"tsc -p ./ && gulp tslint","compileDev":"tsc -p ./ && gulp tslint && webpack --mode development","watch":"tsc -watch -p ./","tdd":"mocha --opts ./mocha.opts --watch --watch-extensions ts test/unitTests/**/*.test.ts*","test":"gulp test","test:unit":"gulp test:unit","test:feature":"gulp test:feature","test:integration":"gulp test:integration","test:integration:singleCsproj":"gulp test:integration:singleCsproj","test:integration:slnWithCsproj":"gulp test:integration:slnWithCsproj","test:release":"mocha --opts ./mocha.opts test/releaseTests/**/*.test.ts","test:artifacts":"mocha --opts ./mocha.opts test/artifactTests/**/*.test.ts","postinstall":"node ./node_modules/vscode/bin/install","cov:instrument":"gulp cov:instrument","cov:merge":"gulp cov:merge","cov:merge-html":"gulp cov:merge-html","cov:report":"npm-run-all cov:report:integration cov:report:unit","cov:report:unit":"gulp cov:report:unit","cov:report:integration":"gulp cov:report:integration","unpackage:vsix":"gulp vsix:release:unpackage","gulp":"gulp"},"nyc":{"include":["src/**/*.ts","src/**/*.tsx"],"extension":[".ts",".tsx"],"require":["ts-node/register","source-map-support/register"],"sourceMap":true,"instrument":true},"dependencies":{"async-file":"2.0.2","fs-extra":"7.0.1","http-proxy-agent":"2.1.0","https-proxy-agent":"2.2.1","jsonc-parser":"2.0.3","microsoft.aspnetcore.razor.vscode":"https://download.visualstudio.microsoft.com/download/pr/60003d5d-c896-4db6-a0af-069e1181d0d2/468f2aef7d13d112b5de2cc0fc5eda86/microsoft.aspnetcore.razor.vscode-1.0.0-alpha3-20190606.2.tgz","mkdirp":"0.5.1","node-filter-async":"1.1.1","remove-bom-buffer":"3.0.0","request-light":"0.2.4","rxjs":"6.4.0","semver":"5.6.0","stream":"0.0.2","strip-bom":"3.0.0","tmp":"0.0.33","vscode-debugprotocol":"1.33.0","vscode-extension-telemetry":"0.1.1","yauzl":"2.10.0"},"devDependencies":{"@types/archiver":"2.1.2","@types/chai":"4.1.7","@types/chai-arrays":"1.0.2","@types/chai-as-promised":"7.1.0","@types/chai-string":"1.4.1","@types/del":"3.0.1","@types/fs-extra":"5.0.4","@types/gulp":"4.0.5","@types/gulp-mocha":"0.0.32","@types/istanbul":"0.4.30","@types/minimist":"1.2.0","@types/mkdirp":"0.5.2","@types/mocha":"5.2.5","@types/node":"10.12.24","@types/semver":"5.5.0","@types/tmp":"0.0.33","@types/unzipper":"^0.9.1","@types/yauzl":"2.9.1","archiver":"3.0.0","async-child-process":"1.1.1","async-shelljs":"0.1.2","chai":"4.2.0","chai-arrays":"2.0.0","chai-as-promised":"7.1.1","chai-fs":"2.0.0","chai-string":"1.5.0","codecov":"3.1.0","copyfiles":"2.1.0","cross-env":"5.2.0","del":"3.0.0","find-versions":"3.0.0","get-port":"4.1.0","glob-promise":"3.4.0","gulp":"4.0.0","gulp-mocha":"6.0.0","gulp-tslint":"8.1.3","istanbul":"0.4.5","ltcdr":"2.2.1","minimist":"1.2.0","mocha":"5.2.0","mocha-typescript":"1.1.17","mock-fs":"4.8.0","mock-http-server":"0.2.0","natives":"1.1.6","npm-run-all":"4.1.5","nyc":"13.3.0","plist":"3.0.1","remap-istanbul":"0.13.0","source-map-support":"0.5.10","ts-loader":"5.3.3","ts-node":"8.0.2","tslint":"5.12.1","tslint-microsoft-contrib":"6.0.0","tslint-no-unused-expression-chai":"0.1.4","typescript":"3.3.3","unzipper":"0.9.10","vsce":"1.57.0","vscode":"1.1.33","webpack":"4.29.3","webpack-cli":"3.2.3"},"runtimeDependencies":[{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 4.6 / x86)","url":"https://download.visualstudio.microsoft.com/download/pr/755e362e-039d-4a06-ac3e-5101d4fd3c1c/20324ada05916ab0dcac3e607615ee10/omnisharp-win-x86-1.32.20.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-win-x86-1.32.20.zip","installPath":".omnisharp/1.32.20","platforms":["win32"],"architectures":["x86"],"installTestPath":"./.omnisharp/1.32.20/OmniSharp.exe","platformId":"win-x86","integrity":"B55240FD10222A3368A1C913DC73A8AB6C9406B986B69E8E575668F575229F4D"},{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 4.6 / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/755e362e-039d-4a06-ac3e-5101d4fd3c1c/5e689ab2a27cee718713f8ca429cad69/omnisharp-win-x64-1.32.20.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-win-x64-1.32.20.zip","installPath":".omnisharp/1.32.20","platforms":["win32"],"architectures":["x86_64"],"installTestPath":"./.omnisharp/1.32.20/OmniSharp.exe","platformId":"win-x64","integrity":"376ECB1BCF4774CF23E2F429FD4FC9A2307EBD36023DD5B1CBCA92974A335CB6"},{"id":"OmniSharp","description":"OmniSharp for OSX","url":"https://download.visualstudio.microsoft.com/download/pr/755e362e-039d-4a06-ac3e-5101d4fd3c1c/873407a221e5fc5058917d31c3dea613/omnisharp-osx-1.32.20.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-osx-1.32.20.zip","installPath":".omnisharp/1.32.20","platforms":["darwin"],"binaries":["./mono.osx","./run"],"installTestPath":"./.omnisharp/1.32.20/run","platformId":"osx","integrity":"BF15E3C4E65EA1C377D6FA7F20755A467E6EE1E065AE635D49F8F354182C47E8"},{"id":"OmniSharp","description":"OmniSharp for Linux (x86)","url":"https://download.visualstudio.microsoft.com/download/pr/755e362e-039d-4a06-ac3e-5101d4fd3c1c/c7efc097817dc36464498a43b5ffc98b/omnisharp-linux-x86-1.32.20.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-linux-x86-1.32.20.zip","installPath":".omnisharp/1.32.20","platforms":["linux"],"architectures":["x86","i686"],"binaries":["./mono.linux-x86","./run"],"installTestPath":"./.omnisharp/1.32.20/run","platformId":"linux-x86","integrity":"997D9FAF5ECCF7C6637A71AA74EAB88F83EEF28FAB0852289CD84195B4F6481B"},{"id":"OmniSharp","description":"OmniSharp for Linux (x64)","url":"https://download.visualstudio.microsoft.com/download/pr/755e362e-039d-4a06-ac3e-5101d4fd3c1c/3b836599efee25a95eaa1329f2a46b7a/omnisharp-linux-x64-1.32.20.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-linux-x64-1.32.20.zip","installPath":".omnisharp/1.32.20","platforms":["linux"],"architectures":["x86_64"],"binaries":["./mono.linux-x86_64","./run"],"installTestPath":"./.omnisharp/1.32.20/run","platformId":"linux-x64","integrity":"96635DF7B240BCAD8CE76F9A73D414171186C6006B3EF9F6E73D694798D463CB"},{"id":"Debugger","description":".NET Core Debugger (Windows / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/1a81b7f6-0ec7-4daa-a5bd-7a4eea0d618a/aaa3d977f41f306f7be4029de44b1123/coreclr-debug-win7-x64.zip","fallbackUrl":"https://vsdebugger.blob.core.windows.net/coreclr-debug-1-18-4/coreclr-debug-win7-x64.zip","installPath":".debugger","platforms":["win32"],"architectures":["x86_64"],"installTestPath":"./.debugger/vsdbg-ui.exe","integrity":"761518B411FBB98F728789983B58872603BC3DF97CE040E9496AAF5DC90495E1"},{"id":"Debugger","description":".NET Core Debugger (macOS / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/1a81b7f6-0ec7-4daa-a5bd-7a4eea0d618a/ed0ba9ea97f0e9c41d1d605db8d55772/coreclr-debug-osx-x64.zip","fallbackUrl":"https://vsdebugger.blob.core.windows.net/coreclr-debug-1-18-4/coreclr-debug-osx-x64.zip","installPath":".debugger","platforms":["darwin"],"architectures":["x86_64"],"binaries":["./vsdbg-ui","./vsdbg"],"installTestPath":"./.debugger/vsdbg-ui","integrity":"AC598AA47570D3101E1F174BD695A678AFAAE3F671A4BDD51C639CA23095F14E"},{"id":"Debugger","description":".NET Core Debugger (linux / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/1a81b7f6-0ec7-4daa-a5bd-7a4eea0d618a/422bd87c500a7247419315ada701f677/coreclr-debug-linux-x64.zip","fallbackUrl":"https://vsdebugger.blob.core.windows.net/coreclr-debug-1-18-4/coreclr-debug-linux-x64.zip","installPath":".debugger","platforms":["linux"],"architectures":["x86_64"],"binaries":["./vsdbg-ui","./vsdbg"],"installTestPath":"./.debugger/vsdbg-ui","integrity":"28969664A869DA2E4AE345A6DB131D172338B362AF10F01BAD55F8631895E4E0"},{"id":"Razor","description":"Razor Language Server (Windows / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/60003d5d-c896-4db6-a0af-069e1181d0d2/22c5f59fe3ff59afac4f332bbdfe85d2/razorlanguageserver-win-x64-1.0.0-alpha3-20190606.2.zip","fallbackUrl":"https://razorvscodetest.blob.core.windows.net/languageserver/RazorLanguageServer-win-x64-1.0.0-alpha3-20190606.2.zip","installPath":".razor","platforms":["win32"],"architectures":["x86_64"]},{"id":"Razor","description":"Razor Language Server (Windows / x86)","url":"https://download.visualstudio.microsoft.com/download/pr/60003d5d-c896-4db6-a0af-069e1181d0d2/b3cc70d8a96526b9499cf44b9595fcd3/razorlanguageserver-win-x86-1.0.0-alpha3-20190606.2.zip","fallbackUrl":"https://razorvscodetest.blob.core.windows.net/languageserver/RazorLanguageServer-win-x86-1.0.0-alpha3-20190606.2.zip","installPath":".razor","platforms":["win32"],"architectures":["x86"]},{"id":"Razor","description":"Razor Language Server (Linux / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/60003d5d-c896-4db6-a0af-069e1181d0d2/d231bfff6313e0820c63fdb6ded17d67/razorlanguageserver-linux-x64-1.0.0-alpha3-20190606.2.zip","fallbackUrl":"https://razorvscodetest.blob.core.windows.net/languageserver/RazorLanguageServer-linux-x64-1.0.0-alpha3-20190606.2.zip","installPath":".razor","platforms":["linux"],"architectures":["x86_64"],"binaries":["./rzls"]},{"id":"Razor","description":"Razor Language Server (macOS / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/60003d5d-c896-4db6-a0af-069e1181d0d2/723b5edee657a47e047e16a3c88a370a/razorlanguageserver-osx-x64-1.0.0-alpha3-20190606.2.zip","fallbackUrl":"https://razorvscodetest.blob.core.windows.net/languageserver/RazorLanguageServer-osx-x64-1.0.0-alpha3-20190606.2.zip","installPath":".razor","platforms":["darwin"],"architectures":["x86_64"],"binaries":["./rzls"]}],"engines":{"vscode":"^1.31.0"},"activationEvents":["onDebugInitialConfigurations","onDebugResolve:coreclr","onDebugResolve:clr","onLanguage:csharp","onLanguage:aspnetcorerazor","onCommand:o.restart","onCommand:o.pickProjectAndStart","onCommand:o.showOutput","onCommand:dotnet.restore.project","onCommand:dotnet.restore.all","onCommand:dotnet.generateAssets","onCommand:csharp.downloadDebugger","onCommand:csharp.listProcess","onCommand:csharp.listRemoteProcess","workspaceContains:project.json","workspaceContains:*.csproj","workspaceContains:*.sln","workspaceContains:*.csx","workspaceContains:*.cake","workspaceContains:**/*.csproj","workspaceContains:**/*.sln","workspaceContains:**/*.csx","workspaceContains:**/*.cake"],"contributes":{"configuration":{"title":"C# configuration","properties":{"csharp.format.enable":{"type":"boolean","default":true,"description":"Enable/disable default C# formatter (requires restart)."},"csharp.suppressDotnetInstallWarning":{"type":"boolean","default":false,"description":"Suppress the warning that the .NET CLI is not on the path."},"csharp.unitTestDebuggingOptions":{"type":"object","description":"Options to use with the debugger when launching for unit test debugging. Any launch.json option is valid here.","default":{},"properties":{"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}},"type":{"type":"string","enum":["coreclr","clr"],"description":"Type type of code to debug. Can be either 'coreclr' for .NET Core debugging, or 'clr' for Desktop .NET Framework. 'clr' only works on Windows as the Desktop framework is Windows-only.","default":"coreclr"},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711}}},"csharp.suppressDotnetRestoreNotification":{"type":"boolean","default":false,"description":"Suppress the notification window to perform a 'dotnet restore' when dependencies can't be resolved."},"csharp.suppressProjectJsonWarning":{"type":"boolean","default":false,"description":"Suppress the warning that project.json is no longer a supported project format for .NET Core applications"},"csharp.suppressHiddenDiagnostics":{"type":"boolean","default":true,"description":"Suppress 'hidden' diagnostics (such as 'unnecessary using directives') from appearing in the editor or the Problems pane."},"csharp.referencesCodeLens.enabled":{"type":"boolean","default":true,"description":"Specifies whether the references CodeLens should be shown."},"csharp.testsCodeLens.enabled":{"type":"boolean","default":true,"description":"Specifies whether the run and debug test CodeLens should be show be shown."},"csharp.maxProjectFileCountForDiagnosticAnalysis":{"type":"number","default":1000,"description":"Specifies the maximum number of files for which diagnostics are reported for the whole workspace. If this limit is exceeded, diagnostics will be shown for currently opened files only. Specify 0 or less to disable the limit completely."},"omnisharp.path":{"type":["string","null"],"default":null,"description":"Specifies the path to OmniSharp. This can be the absolute path to an OmniSharp executable, a specific version number, or \"latest\". If a version number or \"latest\" is specified, the appropriate version of OmniSharp will be downloaded on your behalf."},"omnisharp.useGlobalMono":{"type":"string","default":"auto","enum":["auto","always","never"],"enumDescriptions":["Automatically launch OmniSharp with \"mono\" if version 5.8.1 or greater is available on the PATH.","Always launch OmniSharp with \"mono\". If version 5.8.1 or greater is not available on the PATH, an error will be printed.","Never launch OmniSharp on a globally-installed Mono."],"description":"Launch OmniSharp with the globally-installed Mono. If set to \"always\", \"mono\" version 5.8.1 or greater must be available on the PATH. If set to \"auto\", OmniSharp will be launched with \"mono\" if version 5.8.1 or greater is available on the PATH."},"omnisharp.monoPath":{"type":["string","null"],"default":null,"description":"Specifies the path to a mono installation to use when \"useGlobalMono\" is set to \"always\" or \"auto\", instead of the default system one."},"omnisharp.waitForDebugger":{"type":"boolean","default":false,"description":"Pass the --debug flag when launching the OmniSharp server to allow a debugger to be attached."},"omnisharp.loggingLevel":{"type":"string","default":"information","enum":["trace","debug","information","warning","error","critical"],"description":"Specifies the level of logging output from the OmniSharp server."},"omnisharp.autoStart":{"type":"boolean","default":true,"description":"Specifies whether the OmniSharp server will be automatically started or not. If false, OmniSharp can be started with the 'Restart OmniSharp' command"},"omnisharp.projectLoadTimeout":{"type":"number","default":60,"description":"The time Visual Studio Code will wait for the OmniSharp server to start. Time is expressed in seconds."},"omnisharp.maxProjectResults":{"type":"number","default":250,"description":"The maximum number of projects to be shown in the 'Select Project' dropdown (maximum 250)."},"omnisharp.defaultLaunchSolution":{"type":"string","default":null,"description":"The name of the default solution used at start up if the repo has multiple solutions. e.g.'MyAwesomeSolution.sln'. Default value is `null` which will cause the first in alphabetical order to be chosen."},"omnisharp.useEditorFormattingSettings":{"type":"boolean","default":true,"description":"Specifes whether OmniSharp should use VS Code editor settings for C# code formatting (use of tabs, indentation size)."},"omnisharp.minFindSymbolsFilterLength":{"type":"number","default":0,"description":"The minimum number of characters to enter before 'Go to Symbol in Workspace' operation shows any results."},"omnisharp.maxFindSymbolsItems":{"type":"number","default":1000,"description":"The maximum number of items that 'Go to Symbol in Workspace' operation can show. The limit is applied only when a positive number is specified here."},"omnisharp.disableMSBuildDiagnosticWarning":{"type":"boolean","default":false,"description":"Specifies whether notifications should be shown if OmniSharp encounters warnings or errors loading a project. Note that these warnings/errors are always emitted to the OmniSharp log"},"omnisharp.enableMsBuildLoadProjectsOnDemand":{"type":"boolean","default":false,"description":"If true, MSBuild project system will only load projects for files that were opened in the editor. This setting is useful for big C# codebases and allows for faster initialization of code navigation features only for projects that are relevant to code that is being edited. With this setting enabled OmniSharp may load fewer projects and may thus display incomplete reference lists for symbols."},"omnisharp.enableRoslynAnalyzers":{"type":"boolean","default":false,"description":"Enables support for roslyn analyzers, code fixes and rulesets."},"razor.plugin.path":{"type":["string","null"],"default":null,"description":"Overrides the path to the Razor plugin dll."},"razor.devmode":{"type":"boolean","default":false,"description":"Forces the omnisharp-vscode extension to run in a mode that enables local Razor.VSCode deving."},"razor.disabled":{"type":"boolean","default":false,"description":"Specifies whether to disable Razor language features."},"razor.languageServer.directory":{"type":["string","null"],"default":null,"description":"Overrides the path to the Razor Language Server directory."},"razor.languageServer.debug":{"type":"boolean","default":false,"description":"Specifies whether to wait for debug attach when launching the language server."},"razor.trace":{"type":"string","default":"Off","enum":["Off","Messages","Verbose"],"enumDescriptions":["Does not log messages from the Razor extension","Logs only some messages from the Razor extension","Logs all messages from the Razor extension"],"description":"Specifies whether to output all messages [Verbose], some messages [Messages] or not at all [Off]."}}},"jsonValidation":[{"fileMatch":"project.json","url":"http://json.schemastore.org/project"},{"fileMatch":"omnisharp.json","url":"http://json.schemastore.org/omnisharp"}],"commands":[{"command":"o.restart","title":"Restart OmniSharp","category":"OmniSharp"},{"command":"o.pickProjectAndStart","title":"Select Project","category":"OmniSharp"},{"command":"dotnet.generateAssets","title":"Generate Assets for Build and Debug","category":".NET"},{"command":"dotnet.restore.project","title":"Restore Project","category":".NET"},{"command":"dotnet.restore.all","title":"Restore All Projects","category":".NET"},{"command":"csharp.downloadDebugger","title":"Download .NET Core Debugger","category":"Debug"},{"command":"csharp.listProcess","title":"List process for attach","category":"CSharp"},{"command":"csharp.listRemoteProcess","title":"List processes on remote connection for attach","category":"CSharp"},{"command":"csharp.setNextStatement","title":"Set Next Statement (.NET)","category":"Debug"},{"command":"csharp.reportIssue","title":"Report an issue","category":"CSharp"},{"command":"extension.showRazorCSharpWindow","title":"Show Razor CSharp","category":"Razor"},{"command":"extension.showRazorHtmlWindow","title":"Show Razor Html","category":"Razor"},{"command":"razor.reportIssue","title":"Report a Razor issue","category":"Razor"}],"keybindings":[{"command":"o.showOutput","key":"Ctrl+Shift+F9","mac":"Cmd+Shift+F9"},{"command":"csharp.setNextStatement","key":"Ctrl+Shift+F10","when":"inDebugMode && debugType == 'coreclr'"},{"command":"csharp.setNextStatement","key":"Ctrl+Shift+F10","when":"inDebugMode && debugType == 'clr'"}],"snippets":[{"language":"csharp","path":"./snippets/csharp.json"}],"debuggers":[{"type":"coreclr","label":".NET Core","enableBreakpointsFor":{"languageIds":["csharp","razor","aspnetcorerazor"]},"variables":{"pickProcess":"csharp.listProcess","pickRemoteProcess":"csharp.listRemoteProcess"},"adapterExecutableCommand":"csharp.coreclrAdapterExecutableCommand","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","description":"Path to the application dll or .NET Core host executable to launch.\nThis property normally takes the form: '${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)'\nExample: '${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll'\n\nWhere:\n(target-framework) is the framework that the debugged project is being built for. This is normally found in the project file as the 'TargetFramework' property.\n(project-name.dll) is the name of debugged project's build output dll. This is normally the same as the project file name but with a '.dll' extension.","default":"${workspaceFolder}/bin/Debug/<insert-target-framework-here>/<insert-project-name-here>.dll"},"cwd":{"type":"string","description":"Path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceFolder}"},"args":{"anyOf":[{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the program.","default":""}]},"stopAtEntry":{"type":"boolean","description":"If true, the debugger should stop at the entry point of the target.","default":false},"launchBrowser":{"description":"Legacy option used to enable launching a web browser. For more information: https://aka.ms/VSCode-CS-LaunchJson-WebBrowser","default":{"enabled":true},"type":"object","required":["enabled"],"properties":{"enabled":{"type":"boolean","description":"Whether web browser launch is enabled","default":true},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. This is used only if the platform-specific element (`osx`, `linux` or `windows`) doesn't specify a value for `args`. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"},"osx":{"description":"OSX-specific web launch configuration options. By default, this will start the browser using `open`.","default":{"command":"open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"linux":{"description":"Linux-specific web launch configuration options. By default, this will start the browser using `xdg-open`.","default":{"command":"xdg-open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"xdg-open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"windows":{"description":"Windows-specific web launch configuration options. By default, this will start the browser using `cmd /c start`.","default":{"command":"cmd.exe","args":"/C start ${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"cmd.exe"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"/C start ${auto-detect-url}"}}}}},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"envFile":{"type":"string","description":"Environment variables passed to the program by a file.","default":"${workspaceFolder}/.env"},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:Console.ReadLine)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"description":"Where to launch the debug target.","default":"internalConsole"},"externalConsole":{"type":"boolean","description":"Attribute 'externalConsole' is deprecated, use 'console' instead.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}}}},"attach":{"type":"object","required":[],"properties":{"processName":{"type":"string","description":"","default":"The process name to attach to. If this is used, 'processId' should not be used."},"processId":{"anyOf":[{"type":"string","description":"The process id to attach to. Use \"${command:pickProcesss}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":"${command:pickProcess}"},{"type":"integer","description":"The process id to attach to. Use \"${command:pickProcesss}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":0}]},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}}}}},"configurationSnippets":[{"label":".NET: Launch .NET Core Console App","description":"Launch a .NET Core Console App with a debugger.","body":{"name":".NET Core Launch (console)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"console":"internalConsole"}},{"label":".NET: Attach to local .NET Core Console App","description":"Attach a debugger to a .NET Core Console App.","body":{"name":".NET Core Attach","type":"coreclr","request":"attach","processId":"^\"\\${command:pickProcess}\""}},{"label":".NET: Launch a local .NET Core Web App","description":"Launch a .NET Core Web App with both a browser and a debugger.","body":{"name":".NET Core Launch (web)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"serverReadyAction":{"action":"openExternally","pattern":"^\"^\\\\\\\\s*Now listening on:\\\\\\\\s+(https?://\\\\\\\\S+)\""},"env":{"ASPNETCORE_ENVIRONMENT":"Development"},"sourceFileMap":{"/Views":"^\"\\${workspaceFolder}/Views\""}}},{"label":".NET: Launch a remote .NET Core Console App","description":"Launch a .NET Core Console App on a remote machine.","body":{"name":".NET Core Launch (console)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"console":"internalConsole","pipeTransport":{"pipeCwd":"^\"\\${workspaceFolder}\"","pipeProgram":"^\"${3:enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'}\"","pipeArgs":[],"debuggerPath":"^\"${4:enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg}\""}}},{"label":".NET: Attach to remote .NET Core Console App","description":"Attach a debugger to a .NET Core Console App on a remote machine.","body":{"name":".NET Core Attach","type":"coreclr","request":"attach","processId":"^\"\\${command:pickRemoteProcess}\"","pipeTransport":{"pipeCwd":"^\"\\${workspaceFolder}\"","pipeProgram":"^\"${1:enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'}\"","pipeArgs":[],"debuggerPath":"^\"${2:enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg}\""}}}]},{"type":"clr","label":".NET","enableBreakpointsFor":{"languageIds":["csharp","razor","aspnetcorerazor"]},"variables":{"pickProcess":"csharp.listProcess","pickRemoteProcess":"csharp.listRemoteProcess"},"adapterExecutableCommand":"csharp.clrAdapterExecutableCommand","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","description":"Path to the application dll or .NET Core host executable to launch.\nThis property normally takes the form: '${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)'\nExample: '${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll'\n\nWhere:\n(target-framework) is the framework that the debugged project is being built for. This is normally found in the project file as the 'TargetFramework' property.\n(project-name.dll) is the name of debugged project's build output dll. This is normally the same as the project file name but with a '.dll' extension.","default":"${workspaceFolder}/bin/Debug/<insert-target-framework-here>/<insert-project-name-here>.dll"},"cwd":{"type":"string","description":"Path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceFolder}"},"args":{"anyOf":[{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the program.","default":""}]},"stopAtEntry":{"type":"boolean","description":"If true, the debugger should stop at the entry point of the target.","default":false},"launchBrowser":{"description":"Legacy option used to enable launching a web browser. For more information: https://aka.ms/VSCode-CS-LaunchJson-WebBrowser","default":{"enabled":true},"type":"object","required":["enabled"],"properties":{"enabled":{"type":"boolean","description":"Whether web browser launch is enabled","default":true},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. This is used only if the platform-specific element (`osx`, `linux` or `windows`) doesn't specify a value for `args`. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"},"osx":{"description":"OSX-specific web launch configuration options. By default, this will start the browser using `open`.","default":{"command":"open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"linux":{"description":"Linux-specific web launch configuration options. By default, this will start the browser using `xdg-open`.","default":{"command":"xdg-open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"xdg-open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"windows":{"description":"Windows-specific web launch configuration options. By default, this will start the browser using `cmd /c start`.","default":{"command":"cmd.exe","args":"/C start ${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"cmd.exe"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"/C start ${auto-detect-url}"}}}}},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"envFile":{"type":"string","description":"Environment variables passed to the program by a file.","default":"${workspaceFolder}/.env"},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:Console.ReadLine)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"description":"Where to launch the debug target.","default":"internalConsole"},"externalConsole":{"type":"boolean","description":"Attribute 'externalConsole' is deprecated, use 'console' instead.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}}}},"attach":{"type":"object","required":[],"properties":{"processName":{"type":"string","description":"","default":"The process name to attach to. If this is used, 'processId' should not be used."},"processId":{"anyOf":[{"type":"string","description":"The process id to attach to. Use \"${command:pickProcesss}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":"${command:pickProcess}"},{"type":"integer","description":"The process id to attach to. Use \"${command:pickProcesss}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":0}]},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}}}}}}],"languages":[{"id":"aspnetcorerazor","extensions":[".cshtml",".razor"],"mimetypes":["text/x-cshtml"],"configuration":"./src/razor/language-configuration.json"}],"grammars":[{"language":"aspnetcorerazor","scopeName":"text.aspnetcorerazor","path":"./src/razor/syntaxes/aspnetcorerazor.tmLanguage.json"}],"menus":{"editor/title":[{"command":"extension.showRazorCSharpWindow","when":"resourceLangId == aspnetcorerazor"},{"command":"extension.showRazorHtmlWindow","when":"resourceLangId == aspnetcorerazor"},{"command":"razor.reportIssue","when":"resourceLangId == aspnetcorerazor"}],"editor/context":[{"command":"csharp.setNextStatement","when":"inDebugMode && debugType == 'coreclr'"},{"command":"csharp.setNextStatement","when":"inDebugMode && debugType == 'clr'"}]}},"uuid":"d0bfc4ab-1d3a-4487-8782-7cf6027b4fff","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.csharp","identifier":{"value":"ms-vscode.csharp","_lower":"ms-vscode.csharp"},"extensionLocation":{"$mid":1,"fsPath":"/home/isaquepf/.vscode-insiders/extensions/ms-vscode.csharp-1.20.0","path":"/home/isaquepf/.vscode-insiders/extensions/ms-vscode.csharp-1.20.0","scheme":"file"}},{"name":"vsliveshare","displayName":"Live Share","description":"Real-time collaborative development from the comfort of your favorite tools.","version":"1.0.509","publisher":"ms-vsliveshare","license":"SEE LICENSE IN LICENSE.txt","homepage":"https://aka.ms/vsls","bugs":{"url":"https://aka.ms/vsls-issues","email":"vsls-feedback@microsoft.com"},"author":{"name":"Microsoft"},"engines":{"vscode":"^1.19.1"},"keywords":["Collaboration","Co-Edit","Co-Debug","Sharing","Remote"],"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","categories":["Other"],"repository":{"url":"https://github.com/MicrosoftDocs/live-share"},"icon":"images/icon.png","activationEvents":["onFileSystemAccess:vsls","onFileSystem:vsls","*"],"main":"/home/isaquepf/.vscode-insiders/extensions/ms-vsliveshare.vsliveshare-1.0.509/out/prod/extension-prod","contributes":{"viewsContainers":{"activitybar":[{"id":"liveshare","title":"Live Share","icon":"images/dark/liveshare.svg"}]},"views":{"liveshare":[{"id":"liveshare.session","name":"Session Details","when":"liveshare:showExplorer"},{"id":"liveshare.contacts","name":"Contacts","when":"liveshare:showExplorer"},{"id":"liveshare.help","name":"Help","when":"liveshare:showExplorer && liveshare:showHelpViewlet"}],"explorer":[{"id":"liveshare.session.explorer","name":"Live Share","when":"liveshare:showExplorer && liveshare:isCollaborating"}]},"commands":[{"command":"liveshare.signin.browser","title":"Sign In With Browser","category":"Live Share"},{"command":"liveshare.signin.token","title":"Sign In With User Code","category":"Live Share"},{"command":"liveshare.signout","title":"Sign Out","category":"Live Share"},{"command":"liveshare.start","title":"Start Collaboration Session (Share)","category":"Live Share"},{"command":"liveshare.startFromFileTreeExplorer","title":"Start Collaboration Session (Share)","category":"Live Share","icon":{"dark":"images/dark/share.svg","light":"images/light/share.svg"}},{"command":"liveshare.joinFromActivityBar","title":"Join Collaboration Session","category":"Live Share","icon":{"dark":"images/dark/join.svg","light":"images/light/join.svg"}},{"command":"liveshare.startFromActivityBar","title":"Start Collaboration Session (Share)","category":"Live Share","icon":{"dark":"images/dark/share.svg","light":"images/light/share.svg"}},{"command":"liveshare.end","title":"Stop Collaboration Session","category":"Live Share"},{"command":"liveshare.endFromFileTreeExplorer","title":"Stop Collaboration Session","category":"Live Share","icon":{"dark":"images/stop.svg","light":"images/stop.svg"}},{"command":"liveshare.endFromActivityBar","title":"Stop Collaboration Session","category":"Live Share","icon":{"dark":"images/stop.svg","light":"images/stop.svg"}},{"command":"liveshare.join","title":"Join Collaboration Session","category":"Live Share"},{"command":"liveshare.leave","title":"Leave Collaboration Session","category":"Live Share"},{"command":"liveshare.leaveFromFileTreeExplorer","title":"Leave Collaboration Session","category":"Live Share","icon":{"dark":"images/stop.svg","light":"images/stop.svg"}},{"command":"liveshare.leaveFromActivityBar","title":"Leave Collaboration Session","category":"Live Share","icon":{"dark":"images/stop.svg","light":"images/stop.svg"}},{"command":"liveshare.collaboration.link.copy","title":"Copy Collaboration Link","category":"Live Share","icon":{"dark":"images/dark/copy.svg","light":"images/light/copy.svg"}},{"command":"liveshare.collaboration.link.copyFromFileTreeExplorer","title":"Copy Collaboration Link","category":"Live Share","icon":{"dark":"images/dark/copy.svg","light":"images/light/copy.svg"}},{"command":"liveshare.collaboration.link.copyFromActivityBar","title":"Copy Collaboration Link","category":"Live Share","icon":{"dark":"images/dark/copy.svg","light":"images/light/copy.svg"}},{"command":"liveshare.debug","title":"Join Debug Session","category":"Live Share"},{"command":"liveshare.listServers","title":"Show Shared Servers","category":"Live Share"},{"command":"liveshare.shareServer","title":"Share Server","category":"Live Share"},{"command":"liveshare.fileTreeExplorer.shareServer","title":"Share Server","category":"Live Share","icon":{"dark":"images/dark/addServer.svg","light":"images/light/addServer.svg"}},{"command":"liveshare.activityBar.shareServer","title":"Share Server","category":"Live Share","icon":{"dark":"images/dark/addServer.svg","light":"images/light/addServer.svg"}},{"command":"liveshare.fileTreeExplorer.openServerInBrowser","title":"Open Server in Browser","category":"Live Share","icon":{"dark":"images/dark/globe.svg","light":"images/light/globe.svg"}},{"command":"liveshare.activityBar.openServerInBrowser","title":"Open Server in Browser","category":"Live Share","icon":{"dark":"images/dark/globe.svg","light":"images/light/globe.svg"}},{"command":"liveshare.unshareServer","title":"Unshare Server","category":"Live Share"},{"command":"liveshare.fileTreeExplorer.unshareServer","title":"Unshare Server","category":"Live Share","icon":{"dark":"images/stop.svg","light":"images/stop.svg"}},{"command":"liveshare.activityBar.unshareServer","title":"Unshare Server","category":"Live Share","icon":{"dark":"images/stop.svg","light":"images/stop.svg"}},{"command":"liveshare.fileTreeExplorer.copyServerURL","title":"Copy Server URL","category":"Live Share","icon":{"dark":"images/dark/copy.svg","light":"images/light/copy.svg"}},{"command":"liveshare.activityBar.copyServerURL","title":"Copy Server URL","category":"Live Share","icon":{"dark":"images/dark/copy.svg","light":"images/light/copy.svg"}},{"command":"liveshare.launcherSetup","title":"Launcher Setup","category":"Live Share"},{"command":"liveshare.focusParticipants","title":"Focus Participants","category":"Live Share"},{"command":"liveshare.focusParticipantsFromFileTreeExplorer","title":"Focus Participants","category":"Live Share","icon":{"dark":"images/dark/focus.svg","light":"images/light/focus.svg"}},{"command":"liveshare.focusParticipantsFromActivityBar","title":"Focus Participants","category":"Live Share","icon":{"dark":"images/dark/focus.svg","light":"images/light/focus.svg"}},{"command":"liveshare.listParticipants","title":"List Participants","category":"Live Share"},{"command":"liveshare.follow","title":"Follow Participant","category":"Live Share","icon":{"dark":"images/dark/pin.svg","light":"images/light/pin.svg"}},{"command":"liveshare.followToTheSide","title":"Follow Participant to the Side","category":"Live Share","icon":{"dark":"images/dark/pin.svg","light":"images/light/pin.svg"}},{"command":"liveshare.followToTheSideFromActivityBar","title":"Follow to the Side","category":"Live Share","icon":{"dark":"images/dark/pin.svg","light":"images/light/pin.svg"}},{"command":"liveshare.followToTheSideFromTreeExplorer","title":"Follow to the Side","category":"Live Share","icon":{"dark":"images/dark/pin.svg","light":"images/light/pin.svg"}},{"command":"liveshare.followFromFileTreeExplorer","title":"Follow Participant","category":"Live Share","icon":{"dark":"images/dark/pin-small.svg","light":"images/light/pin-small.svg"}},{"command":"liveshare.followFromActivityBar","title":"Follow Participant","category":"Live Share","icon":{"dark":"images/dark/pin-small.svg","light":"images/light/pin-small.svg"}},{"command":"liveshare.unfollow","title":"Unfollow Participant","category":"Live Share","icon":{"dark":"images/pin-green.svg","light":"images/pin-green.svg"}},{"command":"liveshare.unfollowFromFileTreeExplorer","title":"Unfollow Participant","category":"Live Share","icon":{"dark":"images/pin-green-small.svg","light":"images/pin-green-small.svg"}},{"command":"liveshare.unfollowFromActivityBar","title":"Unfollow Participant","category":"Live Share","icon":{"dark":"images/pin-green-small.svg","light":"images/pin-green-small.svg"}},{"command":"liveshare.removeParticipant","title":"Remove Participant","category":"Live Share"},{"command":"liveshare.removeParticipantFromFileTreeExplorer","title":"Remove Participant","category":"Live Share","icon":{"dark":"images/cross.svg","light":"images/cross.svg"}},{"command":"liveshare.removeParticipantFromActivityBar","title":"Remove Participant","category":"Live Share","icon":{"dark":"images/cross.svg","light":"images/cross.svg"}},{"command":"liveshare.fileTreeExplorer.removeTerminal","title":"Remove Terminal","category":"Live Share","icon":{"dark":"images/cross.svg","light":"images/cross.svg"}},{"command":"liveshare.activityBar.removeTerminal","title":"Remove Terminal","category":"Live Share","icon":{"dark":"images/cross.svg","light":"images/cross.svg"}},{"command":"liveshare.exportLogs","title":"Export Logs","category":"Live Share"},{"command":"liveshare.shareTerminal","title":"Share Terminal","category":"Live Share"},{"command":"liveshare.fileTreeExplorer.shareTerminal","title":"Share Terminal","category":"Live Share","icon":{"dark":"images/dark/addTerminal.svg","light":"images/light/addTerminal.svg"}},{"command":"liveshare.activityBar.shareTerminal","title":"Share Terminal","category":"Live Share","icon":{"dark":"images/dark/addTerminal.svg","light":"images/light/addTerminal.svg"}},{"command":"liveshare.listTerminals","title":"Show Shared Terminals","category":"Live Share"},{"command":"liveshare.help","title":"Help","category":"Live Share"},{"command":"liveshare.fileTreeExplorer.openTerminal","title":"Focus Terminal","category":"Live Share","icon":{"dark":"images/dark/focusTerminal.svg","light":"images/light/focusTerminal.svg"}},{"command":"liveshare.activityBar.openTerminal","title":"Focus Terminal","category":"Live Share","icon":{"dark":"images/dark/focusTerminal.svg","light":"images/light/focusTerminal.svg"}},{"command":"liveshare.fileTreeExplorer.makeTerminalReadWrite","title":"Make Read/Write","category":"Live Share"},{"command":"liveshare.activityBar.makeTerminalReadWrite","title":"Make Read/Write","category":"Live Share"},{"command":"liveshare.fileTreeExplorer.makeTerminalReadOnly","title":"Make Read-Only","category":"Live Share"},{"command":"liveshare.activityBar.makeTerminalReadOnly","title":"Make Read-Only","category":"Live Share"},{"command":"liveshare.startReadOnly","title":"Start Read-Only Collaboration Session","category":"Live Share","icon":{"dark":"images/dark/share.svg","light":"images/light/share.svg"}},{"command":"liveshare.startReadOnlyFromFileTreeExplorer","title":"Start Read-Only Collaboration Session","category":"Live Share","icon":{"dark":"images/dark/share.svg","light":"images/light/share.svg"}},{"command":"liveshare.startReadOnlyFromActivityBar","title":"Start Read-Only Collaboration Session","category":"Live Share","icon":{"dark":"images/dark/share.svg","light":"images/light/share.svg"}},{"command":"liveshare.signInAndReload","title":"Sign in","category":"Live Share"},{"command":"liveshare.changePresenceAvailable","title":"Status: Available","category":"Live Share"},{"command":"liveshare.changePresenceAway","title":"Status: Away","category":"Live Share"},{"command":"liveshare.changePresenceBusy","title":"Status: Busy","category":"Live Share"},{"command":"liveshare.changePresenceDoNotDisturb","title":"Status: Do not disturb","category":"Live Share"},{"command":"liveshare.changePresenceInvisible","title":"Status: Invisible","category":"Live Share"},{"command":"liveshare.inviteUserJoin","title":"Invite Contact","category":"Live Share","icon":{"light":"images/light/share.svg","dark":"images/dark/share.svg"}},{"command":"liveshare.inviteUserJoinByEmail","title":"Invite by Email","category":"Live Share","icon":{"light":"images/light/email.svg","dark":"images/dark/email.svg"}},{"command":"liveshare.inviteNoUserJoinByEmail","title":"Invite by Email","category":"Live Share","icon":{"light":"images/light/email.svg","dark":"images/dark/email.svg"}},{"command":"liveshare.removeRecentContact","title":"Remove","category":"Live Share","icon":{"light":"images/light/status-deleted.svg","dark":"images/dark/status-deleted.svg"}},{"command":"liveshare.inviteAvailableContacts","title":"Invite Contact","category":"Live Share","icon":{"light":"images/light/share.svg","dark":"images/dark/share.svg"}},{"command":"liveshare.inviteSearchContacts","title":"Search Contacts","category":"Live Share"},{"command":"liveshare.changeSelfPresenceFromAvailable","title":"Change Status","category":"Live Share","icon":"images/presence/available.svg"},{"command":"liveshare.changeSelfPresenceFromAway","title":"Change Status","category":"Live Share","icon":"images/presence/away.svg"},{"command":"liveshare.changeSelfPresenceFromBusy","title":"Change Status","category":"Live Share","icon":"images/presence/busy.svg"},{"command":"liveshare.changeSelfPresenceFromDoNotDisturb","title":"Change Status","category":"Live Share","icon":"images/presence/dnd.svg"},{"command":"liveshare.selectPresenceProvider","title":"Configure Presence","category":"Live Share"},{"command":"liveshare.scc.openChange","title":"Open Changes","category":"Live Share Source Control","icon":{"light":"images/light/open-change.svg","dark":"images/dark/open-change.svg"}},{"command":"liveshare.scc.openFile","title":"Open File","category":"Live Share Source Control","icon":{"light":"images/light/open-file.svg","dark":"images/dark/open-file.svg"}},{"command":"liveshare.scc.openFile2","title":"Open File","category":"Live Share Source Control","icon":{"light":"images/light/open-file-mono.svg","dark":"images/dark/open-file-mono.svg"}},{"command":"liveshare.scc.clean","title":"Discard Changes","category":"Live Share Source Control","icon":{"light":"images/light/clean.svg","dark":"images/dark/clean.svg"}},{"command":"liveshare.scc.cleanAll","title":"Discard All Changes","category":"Live Share Source Control","icon":{"light":"images/light/clean.svg","dark":"images/dark/clean.svg"}},{"command":"liveshare.scc.revertChange","title":"Revert Change","category":"Live Share Source Control","icon":{"light":"images/light/clean.svg","dark":"images/dark/clean.svg"}},{"command":"liveshare.activityBar.user.elevate","title":"Make Read/Write","category":"Live Share"},{"command":"liveshare.activityBar.user.decrease","title":"Make Read-Only","category":"Live Share"},{"command":"liveshare.fileTreeExplorer.user.elevate","title":"Make Read/Write","category":"Live Share"},{"command":"liveshare.fileTreeExplorer.user.decrease","title":"Make Read-Only","category":"Live Share"},{"command":"liveshare.removeInvitedContactFromFileTreeExplorer","title":"Remove Invited Contact","category":"Live Share","icon":{"dark":"images/cross.svg","light":"images/cross.svg"}},{"command":"liveshare.removeInvitedContactFromActivityBar","title":"Remove Invited Contact","category":"Live Share","icon":{"dark":"images/cross.svg","light":"images/cross.svg"}},{"command":"liveshare.comments.createThread","title":"Create a comment thread","category":"Live Share"},{"command":"liveshare.comments.reply","title":"Reply","category":"Live Share"},{"command":"liveshare.comments.editComment","title":"Edit","category":"Live Share","icon":{"dark":"images/edit_inverse.svg","light":"images/edit.svg"}},{"command":"liveshare.comments.deleteComment","title":"Delete comment","category":"Live Share","icon":{"dark":"images/close_inverse.svg","light":"images/close.svg"}},{"command":"liveshare.comments.deleteThread","title":"Delete comment thread","category":"Live Share","icon":{"dark":"images/close_inverse.svg","light":"images/close.svg"}},{"command":"liveshare.comments.saveComment","title":"Save","category":"Live Share"},{"command":"liveshare.comments.cancelEditComment","title":"Cancel","category":"Live Share"}],"menus":{"view/title":[{"command":"liveshare.startFromFileTreeExplorer","when":"view == liveshare.session.explorer && liveshare:state != Shared && liveshare:state != SharingInProgress && liveshare:state != JoiningInProgress && liveshare:state != Joined","group":"navigation"},{"command":"liveshare.endFromFileTreeExplorer","when":"view == liveshare.session.explorer && liveshare:state == Shared","group":"navigation"},{"command":"liveshare.leaveFromFileTreeExplorer","when":"view == liveshare.session.explorer && liveshare:state == Joined","group":"navigation"},{"command":"liveshare.focusParticipantsFromFileTreeExplorer","when":"view == liveshare.session.explorer && liveshare:hasCollaborators","group":"navigation"},{"command":"liveshare.collaboration.link.copyFromFileTreeExplorer","when":"view == liveshare.session.explorer && liveshare:state == Shared","group":"navigation"},{"command":"liveshare.startFromActivityBar","when":"view == liveshare.session && liveshare:state != Shared && liveshare:state != SharingInProgress && liveshare:state != JoiningInProgress && liveshare:state != Joined","group":"navigation"},{"command":"liveshare.joinFromActivityBar","when":"view == liveshare.session && liveshare:state != Shared && liveshare:state != SharingInProgress && liveshare:state != JoiningInProgress && liveshare:state != Joined","group":"navigation"},{"command":"liveshare.endFromActivityBar","when":"view == liveshare.session && liveshare:state == Shared","group":"navigation"},{"command":"liveshare.leaveFromActivityBar","when":"view == liveshare.session && liveshare:state == Joined","group":"navigation"},{"command":"liveshare.focusParticipantsFromActivityBar","when":"view == liveshare.session && liveshare:hasCollaborators","group":"navigation"},{"command":"liveshare.collaboration.link.copyFromActivityBar","when":"view == liveshare.session && liveshare:state == Shared","group":"navigation"},{"command":"liveshare.inviteAvailableContacts","when":"view == liveshare.contacts && liveshare:hasAvailableContacts","group":"navigation"},{"command":"liveshare.changeSelfPresenceFromAvailable","when":"view == liveshare.contacts && liveshare:hasPublishPresenceProviders && liveshare:status == available","group":"navigation"},{"command":"liveshare.changeSelfPresenceFromAway","when":"view == liveshare.contacts && liveshare:hasPublishPresenceProviders && liveshare:status == away","group":"navigation"},{"command":"liveshare.changeSelfPresenceFromBusy","when":"view == liveshare.contacts && liveshare:hasPublishPresenceProviders && liveshare:status == busy","group":"navigation"},{"command":"liveshare.changeSelfPresenceFromDoNotDisturb","when":"view == liveshare.contacts && liveshare:hasPublishPresenceProviders && liveshare:status == doNotDisturb","group":"navigation"}],"view/item/context":[{"command":"liveshare.followFromFileTreeExplorer","when":"view == liveshare.session.explorer && viewItem =~ /(participants.participant|participants.guest)(?!.followed)/"},{"command":"liveshare.followToTheSideFromTreeExplorer","when":"view == liveshare.session.explorer && viewItem =~ /participants.participant|participants.guest/"},{"command":"liveshare.unfollowFromFileTreeExplorer","when":"view == liveshare.session.explorer && viewItem =~ /participants.participant.followed|participants.guest.followed/"},{"command":"liveshare.removeParticipantFromFileTreeExplorer","when":"view == liveshare.session.explorer && viewItem =~ /participants.guest/","group":"inline"},{"command":"liveshare.removeParticipantFromFileTreeExplorer","when":"view == liveshare.session.explorer && viewItem =~ /participants.guest/"},{"command":"liveshare.fileTreeExplorer.shareServer","when":"view == liveshare.session.explorer && liveshare:state == Shared && viewItem == servers","group":"inline"},{"command":"liveshare.fileTreeExplorer.shareServer","when":"view == liveshare.session.explorer && liveshare:state == Shared && viewItem == servers"},{"command":"liveshare.fileTreeExplorer.shareTerminal","when":"view == liveshare.session.explorer && liveshare:state == Shared && viewItem == terminals","group":"inline"},{"command":"liveshare.fileTreeExplorer.shareTerminal","when":"view == liveshare.session.explorer && liveshare:state == Shared && viewItem == terminals"},{"command":"liveshare.fileTreeExplorer.unshareServer","when":"view == liveshare.session.explorer && viewItem == servers.local","group":"inline"},{"command":"liveshare.fileTreeExplorer.unshareServer","when":"view == liveshare.session.explorer && viewItem == servers.local"},{"command":"liveshare.fileTreeExplorer.openServerInBrowser","when":"view == liveshare.session.explorer && viewItem == servers.local"},{"command":"liveshare.fileTreeExplorer.openServerInBrowser","when":"view == liveshare.session.explorer && viewItem == servers.remote"},{"command":"liveshare.fileTreeExplorer.copyServerURL","when":"view == liveshare.session.explorer && viewItem == servers.local","group":"inline"},{"command":"liveshare.fileTreeExplorer.copyServerURL","when":"view == liveshare.session.explorer && viewItem == servers.local"},{"command":"liveshare.fileTreeExplorer.copyServerURL","when":"view == liveshare.session.explorer && viewItem == servers.remote","group":"inline"},{"command":"liveshare.fileTreeExplorer.copyServerURL","when":"view == liveshare.session.explorer && viewItem == servers.remote"},{"command":"liveshare.fileTreeExplorer.openTerminal","when":"view == liveshare.session.explorer && viewItem == terminals.local.readonly"},{"command":"liveshare.fileTreeExplorer.openTerminal","when":"view == liveshare.session.explorer && viewItem == terminals.local.readwrite"},{"command":"liveshare.fileTreeExplorer.openTerminal","when":"view == liveshare.session.explorer && viewItem == terminals.remote"},{"command":"liveshare.fileTreeExplorer.removeTerminal","when":"view == liveshare.session.explorer && viewItem == terminals.local.readonly","group":"inline"},{"command":"liveshare.fileTreeExplorer.removeTerminal","when":"view == liveshare.session.explorer && viewItem == terminals.local.readwrite","group":"inline"},{"command":"liveshare.activityBar.removeTerminal","when":"view == liveshare.session && viewItem == terminals.local.readonly","group":"inline"},{"command":"liveshare.activityBar.removeTerminal","when":"view == liveshare.session && viewItem == terminals.local.readwrite","group":"inline"},{"command":"liveshare.fileTreeExplorer.removeTerminal","when":"view == liveshare.session.explorer && viewItem == terminals.local.readonly"},{"command":"liveshare.fileTreeExplorer.removeTerminal","when":"view == liveshare.session.explorer && viewItem == terminals.local.readwrite"},{"command":"liveshare.activityBar.removeTerminal","when":"view == liveshare.session && viewItem == terminals.local.readonly"},{"command":"liveshare.activityBar.removeTerminal","when":"view == liveshare.session && viewItem == terminals.local.readwrite"},{"command":"liveshare.fileTreeExplorer.makeTerminalReadWrite","when":"view == liveshare.session.explorer && viewItem == terminals.local.readonly && !liveshare:isReadOnlySession"},{"command":"liveshare.activityBar.makeTerminalReadWrite","when":"view == liveshare.session && viewItem == terminals.local.readonly && !liveshare:isReadOnlySession"},{"command":"liveshare.fileTreeExplorer.makeTerminalReadOnly","when":"view == liveshare.session.explorer && viewItem == terminals.local.readwrite && !liveshare:isReadOnlySession"},{"command":"liveshare.activityBar.makeTerminalReadOnly","when":"view == liveshare.session && viewItem == terminals.local.readwrite && !liveshare:isReadOnlySession"},{"command":"liveshare.followFromActivityBar","when":"view == liveshare.session && viewItem =~ /(participants.participant|participants.guest)(?!.followed)/"},{"command":"liveshare.followToTheSideFromActivityBar","when":"view == liveshare.session && viewItem =~ /participants.participant|participants.guest/"},{"command":"liveshare.unfollowFromActivityBar","when":"view == liveshare.session && viewItem =~ /participants.participant.followed|participants.guest.followed/"},{"command":"liveshare.removeParticipantFromActivityBar","when":"view == liveshare.session && viewItem =~ /participants.guest/","group":"inline"},{"command":"liveshare.activityBar.user.elevate","when":"view == liveshare.session && liveshare:isReadOnlySession && viewItem =~ /^participants.guest$|^participants.guest.followed$/"},{"command":"liveshare.activityBar.user.decrease","when":"view == liveshare.session && liveshare:isReadOnlySession && viewItem =~ /^participants.guest.elevated$|^participants.guest.followed.elevated$/"},{"command":"liveshare.fileTreeExplorer.user.elevate","when":"view == liveshare.session.explorer && liveshare:isReadOnlySession && viewItem =~ /^participants.guest$|^participants.guest.followed$/"},{"command":"liveshare.fileTreeExplorer.user.decrease","when":"view == liveshare.session.explorer && liveshare:isReadOnlySession && viewItem =~ /^participants.guest.elevated$|^participants.guest.followed.elevated$/"},{"command":"liveshare.activityBar.shareServer","when":"view == liveshare.session && liveshare:state == Shared && viewItem == servers","group":"inline"},{"command":"liveshare.activityBar.shareServer","when":"view == liveshare.session && liveshare:state == Shared && viewItem == servers"},{"command":"liveshare.activityBar.shareTerminal","when":"view == liveshare.session && liveshare:state == Shared && viewItem == terminals","group":"inline"},{"command":"liveshare.activityBar.shareTerminal","when":"view == liveshare.session && liveshare:state == Shared && viewItem == terminals"},{"command":"liveshare.activityBar.unshareServer","when":"view == liveshare.session && viewItem == servers.local","group":"inline"},{"command":"liveshare.activityBar.unshareServer","when":"view == liveshare.session && viewItem == servers.local"},{"command":"liveshare.activityBar.openServerInBrowser","when":"view == liveshare.session && viewItem == servers.local"},{"command":"liveshare.activityBar.openServerInBrowser","when":"view == liveshare.session && viewItem == servers.remote"},{"command":"liveshare.activityBar.copyServerURL","when":"view == liveshare.session && viewItem == servers.local","group":"inline"},{"command":"liveshare.activityBar.copyServerURL","when":"view == liveshare.session && viewItem == servers.local"},{"command":"liveshare.activityBar.copyServerURL","when":"view == liveshare.session && viewItem == servers.remote","group":"inline"},{"command":"liveshare.activityBar.copyServerURL","when":"view == liveshare.session && viewItem == servers.remote"},{"command":"liveshare.activityBar.openTerminal","when":"view == liveshare.session && viewItem == terminals.local.readonly"},{"command":"liveshare.activityBar.openTerminal","when":"view == liveshare.session && viewItem == terminals.local.readwrite"},{"command":"liveshare.activityBar.openTerminal","when":"view == liveshare.session && viewItem == terminals.remote"},{"command":"liveshare.changePresenceAvailable","when":"viewItem == contacts.selfContact"},{"command":"liveshare.changePresenceBusy","when":"viewItem == contacts.selfContact"},{"command":"liveshare.changePresenceDoNotDisturb","when":"viewItem == contacts.selfContact"},{"command":"liveshare.changePresenceAway","when":"viewItem == contacts.selfContact"},{"command":"liveshare.changePresenceInvisible","when":"viewItem == contacts.selfContact"},{"command":"liveshare.inviteUserJoin","when":"liveshare:showExplorer && view == liveshare.contacts && viewItem == contacts.contact"},{"command":"liveshare.inviteUserJoin","when":"liveshare:showExplorer && view == liveshare.contacts && viewItem == contacts.contact","group":"inline@2"},{"command":"liveshare.inviteUserJoin","when":"liveshare:showExplorer && view == liveshare.contacts && viewItem == contacts.recentContact"},{"command":"liveshare.inviteUserJoin","when":"liveshare:showExplorer && view == liveshare.contacts && viewItem == contacts.recentContact","group":"inline@2"},{"command":"liveshare.inviteUserJoinByEmail","when":"liveshare:showExplorer && view == liveshare.contacts && viewItem == contacts.contact"},{"command":"liveshare.inviteUserJoinByEmail","when":"liveshare:showExplorer && view == liveshare.contacts && viewItem == contacts.contact.offline"},{"command":"liveshare.inviteUserJoinByEmail","when":"liveshare:showExplorer && view == liveshare.contacts && viewItem == contacts.recentContact"},{"command":"liveshare.inviteUserJoinByEmail","when":"liveshare:showExplorer && view == liveshare.contacts && viewItem == contacts.recentContact.offline"},{"command":"liveshare.inviteUserJoinByEmail","when":"liveshare:showExplorer && view == liveshare.contacts && viewItem =~ /^contacts.(recent)?contact/i","group":"inline@1"},{"command":"liveshare.removeRecentContact","when":"liveshare:showExplorer && view == liveshare.contacts && viewItem == contacts.recentContact"},{"command":"liveshare.removeRecentContact","when":"liveshare:showExplorer && view == liveshare.contacts && viewItem == contacts.recentContact.offline"},{"command":"liveshare.removeInvitedContactFromActivityBar","when":"view == liveshare.session && viewItem == contacts.invited","group":"inline"},{"command":"liveshare.removeInvitedContactFromFileTreeExplorer","when":"view == liveshare.session.explorer && viewItem == contacts.invited","group":"inline"}],"editor/title":[{"command":"liveshare.follow","when":"liveshare:isFollowable && liveshare:hasCollaborators && !liveshare:isFollowing","group":"navigation@-1000"},{"command":"liveshare.unfollow","when":"liveshare:isFollowable && liveshare:hasCollaborators && liveshare:isFollowing","group":"navigation@-1000"},{"command":"liveshare.scc.openFile","group":"navigation","when":"vslsSccOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^vsls$|^vsls-scc$|^vslsexternal$/"},{"command":"liveshare.scc.openChange","group":"navigation","when":"vslsSccOpenRepositoryCount != 0 && !isInDiffEditor && resourceScheme == vsls"}],"scm/resourceGroup/context":[{"command":"liveshare.scc.cleanAll","when":"scmProvider == vsls-scc && scmResourceGroup =~ /clean_/ && !liveshare:isReadOnlySession","group":"inline"},{"command":"liveshare.scc.cleanAll","when":"scmProvider == vsls-scc && scmResourceGroup =~ /clean_/ && !liveshare:isReadOnlySession","group":"1_modification"}],"scm/resourceState/context":[{"command":"liveshare.scc.openFile","when":"scmProvider == vsls-scc && scmResourceGroup =~ /openFile_/","group":"navigation"},{"command":"liveshare.scc.openFile2","when":"scmProvider == vsls-scc && scmResourceGroup =~ /openFile_/ && config.git.showInlineOpenFileAction","group":"inline0"},{"command":"liveshare.scc.openChange","when":"scmProvider == vsls-scc && scmResourceGroup =~ /openChanges_/","group":"navigation"},{"command":"liveshare.scc.clean","when":"scmProvider == vsls-scc && scmResourceGroup =~ /clean_/ && !liveshare:isReadOnlySession","group":"1_modification"},{"command":"liveshare.scc.clean","when":"scmProvider == vsls-scc && scmResourceGroup =~ /clean_/ && !liveshare:isReadOnlySession","group":"inline"}],"scm/change/title":[{"command":"liveshare.scc.revertChange","when":"originalResourceScheme == vsls-scc && !liveshare:isReadOnlySession"}],"comments/commentThread/title":[{"command":"liveshare.comments.deleteThread","group":"navigation","when":"commentThread =~ /deletable/ && !commentThreadIsEmpty && commentController == vsls-comments"}],"comments/commentThread/context":[{"command":"liveshare.comments.createThread","group":"inline","precondition":"!commentIsEmpty && commentController == vsls-comments","when":"commentThreadIsEmpty && commentController == vsls-comments"},{"command":"liveshare.comments.reply","group":"inline","precondition":"!commentIsEmpty && commentController == vsls-comments","when":"!commentThreadIsEmpty && commentController == vsls-comments"}],"comments/comment/title":[{"command":"liveshare.comments.editComment","group":"group@1","when":"comment =~ /editable/ && commentController == vsls-comments "},{"command":"liveshare.comments.deleteComment","group":"group@2","when":"comment =~ /deletable/ && commentController == vsls-comments"}],"comments/comment/context":[{"command":"liveshare.comments.cancelEditComment","group":"inline@1","when":"commentController == vsls-comments"},{"command":"liveshare.comments.saveComment","group":"inline@2","when":"commentController == vsls-comments"}],"commandPalette":[{"command":"liveshare.signin.browser","when":"liveshare:state == SignedOut"},{"command":"liveshare.signin.browser","when":"liveshare:state == SigningIn"},{"command":"liveshare.signin.browser","when":"liveshare:state == ExternallySigningIn"},{"command":"liveshare.signin.token","when":"liveshare:state == SignedOut"},{"command":"liveshare.signin.token","when":"liveshare:state == SigningIn"},{"command":"liveshare.signin.token","when":"liveshare:state == ExternallySigningIn"},{"command":"liveshare.signin.token","when":"liveshare:isAnonymousUser"},{"command":"liveshare.signout","when":"liveshare:state != SignedOut && !liveshare:isAnonymousUser && !liveshare:isCollaborating"},{"command":"liveshare.start","when":"liveshare:state != Shared && liveshare:state != Joined"},{"command":"liveshare.start","when":"liveshare:state == SignedOut"},{"command":"liveshare.startReadOnly","when":"liveshare:state != Shared && liveshare:state != Joined"},{"command":"liveshare.startReadOnlyFromFileTreeExplorer","when":"view == liveshare.session.explorer && liveshare:state != Shared && liveshare:state != SharingInProgress && liveshare:state != JoiningInProgress && liveshare:state != Joined","group":"navigation"},{"command":"liveshare.startReadOnlyFromActivityBar","when":"view == liveshare.session && liveshare:state != Shared && liveshare:state != SharingInProgress && liveshare:state != JoiningInProgress && liveshare:state != Joined","group":"navigation"},{"command":"liveshare.end","when":"liveshare:state == Shared"},{"command":"liveshare.join","when":"liveshare:state != Shared && liveshare:state != Joined"},{"command":"liveshare.leave","when":"liveshare:state == Joined"},{"command":"liveshare.debug","when":"liveshare:state == Joined"},{"command":"liveshare.listServers","when":"liveshare:isCollaborating"},{"command":"liveshare.signInAndReload","when":"liveshare:isAnonymousUser"},{"command":"liveshare.focusParticipants","when":"liveshare:hasCollaborators"},{"command":"liveshare.shareServer","when":"liveshare:state == Shared"},{"command":"liveshare.unshareServer","when":"liveshare:isServerShared && liveshare:state == Shared"},{"command":"liveshare.follow","when":"liveshare:isFollowable && liveshare:hasCollaborators && !liveshare:isFollowing"},{"command":"liveshare.unfollow","when":"liveshare:isFollowable && liveshare:hasCollaborators && liveshare:isFollowing"},{"command":"liveshare.listParticipants","when":"liveshare:hasCollaborators"},{"command":"liveshare.shareTerminal","when":"liveshare:state == Shared"},{"command":"liveshare.listTerminals","when":"liveshare:hasSharedTerminals && liveshare:state == Joined"},{"command":"liveshare.help"},{"command":"liveshare.collaboration.link.copy","when":"liveshare:isCollaborating"},{"command":"liveshare.followFromFileTreeExplorer","when":"false"},{"command":"liveshare.followToTheSide","when":"liveshare:hasCollaborators"},{"command":"liveshare.inviteSearchContacts","when":"liveshare:hasSearchContactsProviders"},{"command":"liveshare.followToTheSideFromTreeExplorer","when":"false"},{"command":"liveshare.unfollowFromFileTreeExplorer","when":"false"},{"command":"liveshare.followFromActivityBar","when":"false"},{"command":"liveshare.followToTheSideFromActivityBar","when":"false"},{"command":"liveshare.unfollowFromActivityBar","when":"false"},{"command":"liveshare.removeParticipant","when":"false"},{"command":"liveshare.removeParticipantFromFileTreeExplorer","when":"false"},{"command":"liveshare.removeParticipantFromActivityBar","when":"false"},{"command":"liveshare.fileTreeExplorer.unshareServer","when":"false"},{"command":"liveshare.activityBar.unshareServer","when":"false"},{"command":"liveshare.collaboration.link.copyFromFileTreeExplorer","when":"false"},{"command":"liveshare.collaboration.link.copyFromActivityBar","when":"false"},{"command":"liveshare.startFromFileTreeExplorer","when":"false"},{"command":"liveshare.startFromActivityBar","when":"false"},{"command":"liveshare.joinFromActivityBar","when":"false"},{"command":"liveshare.endFromFileTreeExplorer","when":"false"},{"command":"liveshare.endFromActivityBar","when":"false"},{"command":"liveshare.focusParticipantsFromFileTreeExplorer","when":"false"},{"command":"liveshare.focusParticipantsFromActivityBar","when":"false"},{"command":"liveshare.leaveFromFileTreeExplorer","when":"false"},{"command":"liveshare.leaveFromActivityBar","when":"false"},{"command":"liveshare.fileTreeExplorer.shareServer","when":"false"},{"command":"liveshare.activityBar.shareServer","when":"false"},{"command":"liveshare.fileTreeExplorer.unshareServer","when":"false"},{"command":"liveshare.activityBar.unshareServer","when":"false"},{"command":"liveshare.fileTreeExplorer.openServerInBrowser","when":"false"},{"command":"liveshare.activityBar.openServerInBrowser","when":"false"},{"command":"liveshare.fileTreeExplorer.copyServerURL","when":"false"},{"command":"liveshare.activityBar.copyServerURL","when":"false"},{"command":"liveshare.fileTreeExplorer.shareTerminal","when":"false"},{"command":"liveshare.activityBar.shareTerminal","when":"false"},{"command":"liveshare.fileTreeExplorer.openTerminal","when":"false"},{"command":"liveshare.activityBar.openTerminal","when":"false"},{"command":"liveshare.fileTreeExplorer.makeTerminalReadWrite","when":"false"},{"command":"liveshare.activityBar.makeTerminalReadWrite","when":"false"},{"command":"liveshare.fileTreeExplorer.makeTerminalReadOnly","when":"false"},{"command":"liveshare.activityBar.makeTerminalReadOnly","when":"false"},{"command":"liveshare.fileTreeExplorer.removeTerminal","when":"false"},{"command":"liveshare.activityBar.removeTerminal","when":"false"},{"command":"liveshare.changePresenceAvailable","when":"false"},{"command":"liveshare.changePresenceBusy","when":"false"},{"command":"liveshare.changePresenceDoNotDisturb","when":"false"},{"command":"liveshare.changePresenceAway","when":"false"},{"command":"liveshare.changePresenceInvisible","when":"false"},{"command":"liveshare.selectPresenceProvider","when":"liveshare:hasPresenceProviders"},{"command":"liveshare.inviteUserJoin","when":"false"},{"command":"liveshare.inviteUserJoinByEmail","when":"false"},{"command":"liveshare.inviteNoUserJoinByEmail","when":"false"},{"command":"liveshare.removeRecentContact","when":"false"},{"command":"liveshare.scc.openFile","when":"false"},{"command":"liveshare.scc.openFile2","when":"false"},{"command":"liveshare.scc.openChange","when":"false"},{"command":"liveshare.scc.clean","when":"false"},{"command":"liveshare.scc.cleanAll","when":"false"},{"command":"liveshare.scc.revertChange","when":"false"},{"command":"liveshare.activityBar.user.elevate","when":"false"},{"command":"liveshare.activityBar.user.decrease","when":"false"},{"command":"liveshare.fileTreeExplorer.user.elevate","when":"false"},{"command":"liveshare.fileTreeExplorer.user.decrease","when":"false"},{"command":"liveshare.removeInvitedContactFromFileTreeExplorer","when":"false"},{"command":"liveshare.removeInvitedContactFromActivityBar","when":"false"},{"command":"liveshare.changeSelfPresenceFromAvailable","when":"false"},{"command":"liveshare.changeSelfPresenceFromAway","when":"false"},{"command":"liveshare.changeSelfPresenceFromBusy","when":"false"},{"command":"liveshare.comments.createThread","when":"false"},{"command":"liveshare.comments.reply","when":"false"},{"command":"liveshare.comments.editComment","when":"false"},{"command":"liveshare.comments.deleteComment","when":"false"},{"command":"liveshare.comments.deleteThread","when":"false"},{"command":"liveshare.comments.saveComment","when":"false"},{"command":"liveshare.comments.cancelEditComment","when":"false"}]},"keybindings":[{"command":"liveshare.follow","key":"ctrl+alt+f","mac":"cmd+alt+f","when":"liveshare:hasCollaborators && !liveshare:isFollowing"},{"command":"liveshare.followToTheSide","key":"ctrl+alt+/","mac":"cmd+alt+/","when":"liveshare:hasCollaborators"},{"command":"liveshare.unfollow","key":"ctrl+alt+f","mac":"cmd+alt+f","when":"liveshare:hasCollaborators && liveshare:isFollowing"},{"command":"liveshare.join","key":"ctrl+alt+j","mac":"cmd+alt+j","when":"liveshare:state != Shared && liveshare:state != Joined"}],"configuration":{"type":"object","title":"Visual Studio Live Share configuration","properties":{"liveshare.anonymousGuestApproval":{"default":"prompt","enum":["prompt","accept","reject"],"description":"Controls how to handle join requests from anonymous (read-only) guests."},"liveshare.diagnosticLogging":{"type":"boolean","default":false},"liveshare.accountProvider":{"type":"string","default":null,"description":"Preferred account provider registered with keychain to use for Visual Studio Live Share sign-in."},"liveshare.account":{"type":"string","default":null,"description":"Preferred account registered with keychain to use for Visual Studio Live Share sign-in."},"liveshare.connectionMode":{"type":"string","default":"auto","enum":["auto","direct","relay"],"description":"Type of connection used for collaboration; the default (auto) mode prefers a direct connection, but may fallback to a cloud relay if the direct connection failed."},"liveshare.nameTagVisibility":{"type":"string","default":"Activity","enum":["Always","Activity","Never"],"description":"Controls when to display a participant's name tag instead of just their cursor."},"liveshare.guestApprovalRequired":{"type":"boolean","default":false,"description":"Controls whether the host needs to explicitly approve guest requests to join collaboration sessions."},"liveshare.shareExternalFiles":{"type":"boolean","default":true,"description":"Automatically share external files opened by the host during a collaboration session."},"liveshare.joinDebugSessionOption":{"type":"string","default":"Automatic","enum":["Automatic","Manual","Prompt"],"description":"Controls how the participant will join incoming shared debug sessions."},"liveshare.showInStatusBar":{"type":"string","default":"always","enum":["always","whileCollaborating","never"],"description":"Show or hide the Live Share status bar items."},"liveshare.excludedDebugTypes":{"type":"array","items":{"type":"string"},"default":[],"description":"List of debug adapter types to exclude when Live Share attempts to host a debug session."},"liveshare.sharedTerminalWidth":{"type":"number","default":120,"description":"Width of shared terminal window, characters."},"liveshare.sharedTerminalHeight":{"type":"number","default":50,"description":"Height of shared terminal window, characters."},"liveshare.featureSet":{"type":"string","default":"stable","enum":["stable","insiders"],"markdownDescription":"Controls set of active features. By selecting `insiders`, you agree to the [Pre-Release Software License Terms](https://aka.ms/vsls-license-preview) and [Privacy Statement](https://aka.ms/vsls-privacy)."},"liveshare.keepAliveInterval":{"type":"number","default":20,"description":"Sets the number of seconds to wait before sending keep-alive messages in an idle session, used to detect abnormal network disconnection. Set to -1 to disable sending keep-alive messages."},"liveshare.allowGuestTaskControl":{"type":"boolean","default":false,"description":"Allow guests to run and terminate workspace tasks."},"liveshare.allowGuestDebugControl":{"type":"boolean","default":false,"description":"Allow guests to start and stop debugging sessions."},"liveshare.languages.allowGuestCommandControl":{"type":"boolean","default":false,"description":"Allow guests to run arbitrary commands via Code Actions (“Quick Fixes”) and CodeLens"},"liveshare.focusBehavior":{"type":"string","default":"accept","description":"Specifies how to respond to focus requests from other participants.","enum":["accept","prompt"]},"liveshare.showReadOnlyUsersInEditor":{"type":"string","default":"whileFollowing","description":"Controls visibility of the cursor and highlights for read-only users.","enum":["whileFollowing","always"]},"liveshare.increasedGuestLimit":{"type":"boolean","default":true,"description":"Increases the guest limit from 5 to 30."},"liveshare.autoShareTerminals":{"type":"boolean","default":true,"description":"Controls whether terminals are automatically shared with guests (read-only)."},"liveshare.codeLens":{"type":"boolean","default":true,"description":"Controls whether to show the CodeLens for starting a collaboration session."},"liveshare.showVerboseNotifications":{"type":"boolean","default":true,"description":"Controls whether to show verbose notifications, such as when a guest joins and leaves a session."},"liveshare.populateGitCoAuthors":{"type":"string","default":"always","description":"Specifies when to automatically populate your Git commit message with guest attribution (using the Git-co-author trailer).","enum":["always","never"]},"liveshare.autoShareServers":{"type":"boolean","default":true,"description":"Controls whether web servers are automatically shared, when started from the integrated terminal or well-known extensions."},"liveshare.openSharedServers":{"type":"boolean","default":true,"description":"Controls whether to automatically open shared servers in your default browser."},"liveshare.presence":{"type":"boolean","default":true,"description":"Controls whether to publish your presence to other users, and allow in-tool invites for collaboration sessions"}}},"debuggers":[{"type":"vslsJoin","label":"Visual Studio Live Share Participant Debugging","windows":{"program":"./dotnet_modules/Microsoft.VisualStudio.LiveShare.Debugger.VSCodeAdapter.exe"},"osx":{"program":"./dotnet_modules/Microsoft.VisualStudio.LiveShare.Debugger.VSCodeAdapter"},"args":[],"configurationAttributes":{"launch":{"required":["agentUri","joinedInfo","localPath","pipeName"],"properties":{"agentUri":{"type":"string","description":"Agent Uri to connect to Live Share services"},"joinedInfo":{"type":"object","description":"Join Info"},"localPath":{"type":"string","description":"Local path of workspace"},"pipeName":{"type":"string","description":"Pipe name to request host services"}}}}},{"type":"vslsShare","label":"Visual Studio Live Share Debugging","windows":{"program":"./dotnet_modules/Microsoft.VisualStudio.LiveShare.Debugger.VSCodeHostAdapter.exe"},"osx":{"program":"./dotnet_modules/Microsoft.VisualStudio.LiveShare.Debugger.VSCodeHostAdapter"},"args":[],"configurationAttributes":{"launch":{"required":["agentUri","joinedInfo","pipeName","adapterProxy"],"properties":{"agentUri":{"type":"string","description":"Agent Uri to connect to Live Share services"},"joinedInfo":{"type":"object","description":"Join Info"},"pipeName":{"type":"string","description":"Pipe name to request host services"},"adapterProxy":{"type":"object","description":"The adapter proxy"}}}}}],"taskDefinitions":[{"type":"vsls","required":["taskUid"],"properties":{"taskUid":{"type":"string","description":"The unique ID of the remote task."},"executionId":{"type":"string","description":"The execution ID indicates the task is associated with a monitor process. If no execution ID specified, this is a user triggered task."}}}],"problemMatchers":[{"name":"vsls","owner":"vsls","fileLocation":["relative","${workspaceFolder}"],"pattern":[{"regexp":"^([^\\s].*)$","file":1},{"regexp":"^\\s+(\\d+):(\\d+)\\s+(error|warning|info)\\s+(.*)\\s\\s+(.*)$","line":1,"column":2,"severity":3,"message":4,"code":5}]}]},"scripts":{"compile":"gulp compile","build":"gulp build","postinstall":"node ./node_modules/vscode/bin/install && npm run build-vscode-vsls-commands-module && cd ../test && npm install","build-vscode-vsls-commands-module":"gulp vscode-vsls-commands-build && npm link vscode-vsls-commands","test":"gulp compile-test && node ./node_modules/vscode/bin/test","compile-test":"gulp compile-test && cd ../test && npm run compile","uitest":"gulp compile-test && cd ../test && npm run uitest","release":"npm install && gulp release","launcher-bin":"gulp launcher-binplace","vscode:uninstall":"node ./out/prod/uninstall.js"},"dependencies":{"@vsliveshare/vscode-launcher-linux":"2.0.25","@vsliveshare/vscode-launcher-osx":"1.2.3","@vsliveshare/vscode-launcher-win":"1.2.2","better-unzip":"^0.1.11","circular-json":"^0.5.5","clipboardy":"^1.2.2","color-string":"^1.5.2","dateformat":"^3.0.2","download":"^6.2.5","fs-extra":"^5.0.0","get-installed-path":"^4.0.8","getos":"^3.1.0","glob":"^7.1.2","jsonc-parser":"^0.3.0","lockfile":"^1.0.3","lodash.debounce":"^4.0.8","minimatch":"^3.0.4","mkdirp":"^0.5.1","open":"^0.0.5","path-browserify":"^1.0.0","ps-tree":"^1.1.0","read-last-lines":"^1.4.0","remote-file":"^0.1.8","request-light":"^0.2.4","semaphore-async-await":"^1.5.1","semver":"^5.4.1","source-map-support":"^0.5.10","strip-json-comments":"^2.0.1","tar":"^4.3.0","tmp":"^0.0.33","uuid":"^3.2.1","vscode-cached-file-search-provider":"0.0.4","vscode-debugadapter":"^1.27.0","vscode-debugprotocol":"^1.27.0","vscode-extension-telemetry":"^0.1.0","vscode-jsonrpc":"^3.3.1","vscode-languageclient":"^4.3.0","vscode-nls":"^4.0.0","which":"^1.3.1","ws":"^3.1.0","yauzl":"^2.9.1","yazl":"^2.4.3"},"devDependencies":{"@types/circular-json":"^0.4.0","@types/clipboardy":"^1.1.0","@types/color-string":"^1.5.0","@types/dateformat":"^1.0.1","@types/download":"^6.2.1","@types/fs-extra":"^5.0.0","@types/getos":"^3.0.0","@types/glob":"^5.0.35","@types/guid":"^1.0.0","@types/lockfile":"^1.0.0","@types/minimatch":"^3.0.3","@types/minimist":"^1.2.0","@types/mkdirp":"^0.5.2","@types/mocha":"^5.2.6","@types/ncp":"^2.0.1","@types/node":"^8.10.29","@types/rewire":"^2.5.28","@types/rimraf":"^2.0.2","@types/semver":"^5.4.0","@types/source-map-support":"^0.5.0","@types/strip-json-comments":"0.0.30","@types/tar":"^4.0.0","@types/tmp":"^0.0.33","@types/uuid":"^3.4.2","@types/webpack":"^4.4.22","@types/which":"^1.3.1","@types/ws":"^3.0.2","colors":"^1.3.2","event-stream":"^3.3.4","file-loader":"^3.0.1","gulp":"^4.0.0","gulp-clean":"^0.4.0","gulp-git":"^2.4.2","gulp-install":"^1.1.0","gulp-json-editor":"^2.2.1","gulp-run":"^1.7.1","gulp-sequence":"^0.4.6","gulp-sourcemaps":"^2.6.5","gulp-tslint":"^8.1.2","gulp-typescript":"^5.0.0","json-stable-stringify":"^1.0.1","madge":"^3.2.0","minimist":"^1.2.0","mocha":"^6.0.2","mocha-trx-reporter":"^3.2.0","ncp":"^2.0.0","rewire":"^3.0.2","rimraf":"^2.6.3","terser-webpack-plugin":"^1.2.1","ts-loader":"^5.3.2","tscpaths":"0.0.6","tslint":"^5.13.1","tslint-microsoft-contrib":"^6.0.0","typescript":"^3.2.2","umd-compat-loader":"^2.1.1","vinyl":"^2.1.0","vsce":"^1.54.0","vscode":"^1.1.30","vscode-nls-dev":"^3.2.3","webpack":"^4.29.6","webpack-cli":"^3.1.2","webpack-merge":"^4.1.5","webpack-stream":"^5.2.1","xml2js":"^0.4.19","yargs":"^10.0.3"},"executables":{"osx":["./dotnet_modules/Microsoft.VisualStudio.LiveShare.Debugger.VSCodeHostAdapter","./dotnet_modules/Microsoft.VisualStudio.LiveShare.Debugger.VSCodeAdapter","./node_modules/@vsliveshare/vscode-launcher-osx/Live Share for VS Code.app","./node_modules/@vsliveshare/vscode-launcher-osx/Live Share for VS Code.app/Contents/MacOS/Live Share for VS Code","./dotnet_modules/vsls-agent"],"linux":["./dotnet_modules/Microsoft.VisualStudio.LiveShare.Debugger.VSCodeHostAdapter","./dotnet_modules/Microsoft.VisualStudio.LiveShare.Debugger.VSCodeAdapter","./dotnet_modules/vsls-agent","./node_modules/clipboardy/fallbacks/linux/xsel","./node_modules/@vsliveshare/vscode-launcher-linux/check-reqs.sh","./node_modules/@vsliveshare/vscode-launcher-linux/install.sh","./node_modules/@vsliveshare/vscode-launcher-linux/uninstall.sh","./node_modules/@vsliveshare/vscode-launcher-linux/vsls-launcher","./out/deps/linux-prereqs.sh"]},"runtimeDependencies":[{"code":"NetCoreWin","description":".NET Core Runtime 2.1.505 for win7-x86","url":"https://download.visualstudio.microsoft.com/download/pr/55046aa9-d551-4053-944c-df8d69bf87e5/cc2f270aec7f0b8ecfe55a42c2878983/dotnet-runtime-2.1.9-win-x86.zip","platforms":["win32"],"installPath":"./dotnet_modules","unpackPath":"./temp","packageRootPath":"./shared/Microsoft.NETCore.App/2.1.9/","installTestPath":"./dotnet_modules/mscorlib.dll","checksum":"e726740767d8590e83388aac0ad11ed8ef357dbfcc0482b534572336ff7b461d","fileTotal":214},{"code":"NetCoreOsx","description":".NET Core Runtime 2.1.505 for osx-x64","url":"https://download.visualstudio.microsoft.com/download/pr/bf82df84-2804-4167-bf56-2e6df384d9eb/6524415a78e97105fb08a2ec8c48ac23/dotnet-runtime-2.1.9-osx-x64.tar.gz","platforms":["darwin"],"installPath":"./dotnet_modules","unpackPath":"./temp","packageRootPath":"./shared/Microsoft.NETCore.App/2.1.9/","installTestPath":"./dotnet_modules/mscorlib.dll","checksum":"63dd12343893886276bc75c05925fda20bc611cd6efddcd9e47e92595bcd6169","fileTotal":179},{"code":"NetCoreLinux","description":".NET Core Runtime 2.1.505 for linux","url":"https://download.visualstudio.microsoft.com/download/pr/c97de534-1959-4eba-a7fe-bb86b3bb5bf0/fb39bc9e2ac40cb2268e6fe509cbcecd/dotnet-runtime-2.1.9-linux-x64.tar.gz","platforms":["linux"],"installPath":"./dotnet_modules","unpackPath":"./temp","packageRootPath":"./shared/Microsoft.NETCore.App/2.1.9/","installTestPath":"./dotnet_modules/mscorlib.dll","checksum":"22938c1d3827d25afa16c280a2457e356e21f43ecd5a4f538825298dd9a3dec7","fileTotal":180}],"uuid":"5a6dc0d5-dc02-4121-8e24-cad33a2ff0af","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vsliveshare.vsliveshare","identifier":{"value":"ms-vsliveshare.vsliveshare","_lower":"ms-vsliveshare.vsliveshare"},"extensionLocation":{"$mid":1,"fsPath":"/home/isaquepf/.vscode-insiders/extensions/ms-vsliveshare.vsliveshare-1.0.509","path":"/home/isaquepf/.vscode-insiders/extensions/ms-vsliveshare.vsliveshare-1.0.509","scheme":"file"}},{"name":"synthwave-vscode","displayName":"SynthWave '84","description":"A Synthwave-inspired colour theme to satisfy your neon dreams","version":"0.0.7","author":"Robb Owen","publisher":"RobbOwen","icon":"icon.png","repository":{"type":"git","url":"https://github.com/robb0wen/synthwave-vscode"},"engines":{"vscode":"^1.33.0"},"keywords":["retro","80s"],"categories":["Themes"],"contributes":{"themes":[{"label":"SynthWave '84","uiTheme":"vs-dark","path":"./themes/synthwave-color-theme.json"}]},"uuid":"e5fd2b56-1637-4d4f-8252-6c9d416f9a28","isBuiltin":false,"isUnderDevelopment":false,"id":"RobbOwen.synthwave-vscode","identifier":{"value":"RobbOwen.synthwave-vscode","_lower":"robbowen.synthwave-vscode"},"extensionLocation":{"$mid":1,"fsPath":"/home/isaquepf/.vscode-insiders/extensions/robbowen.synthwave-vscode-0.0.7","path":"/home/isaquepf/.vscode-insiders/extensions/robbowen.synthwave-vscode-0.0.7","scheme":"file"}},{"name":"RocketseatReactJS","description":"ReactJS snippets created by Rocketseat.","version":"2.2.0","displayName":"Rocketseat ReactJS","publisher":"rocketseat","icon":"images/rocketseat.png","galleryBanner":{"color":"#7159c1","theme":"dark"},"license":"MIT","repository":{"type":"git","url":"https://github.com/Rocketseat/rocketseat-vscode-reactjs-snippets"},"engines":{"vscode":"0.10.x"},"categories":["Snippets"],"contributes":{"snippets":[{"language":"javascriptreact","path":"./snippets/snippets.json"},{"language":"javascript","path":"./snippets/snippets.json"},{"language":"typescript","path":"./snippets/snippets.json"},{"language":"typescriptreact","path":"./snippets/snippets.json"}]},"uuid":"e8e6c9a6-cbd0-4812-b617-50ab45b749e4","isBuiltin":false,"isUnderDevelopment":false,"id":"rocketseat.RocketseatReactJS","identifier":{"value":"rocketseat.RocketseatReactJS","_lower":"rocketseat.rocketseatreactjs"},"extensionLocation":{"$mid":1,"fsPath":"/home/isaquepf/.vscode-insiders/extensions/rocketseat.rocketseatreactjs-2.2.0","path":"/home/isaquepf/.vscode-insiders/extensions/rocketseat.rocketseatreactjs-2.2.0","scheme":"file"}},{"name":"RocketseatReactNative","description":"React Native snippets created by Rocketseat.","version":"2.2.0","displayName":"Rocketseat React Native","publisher":"rocketseat","icon":"images/rocketseat.png","galleryBanner":{"color":"#7159c1","theme":"dark"},"license":"MIT","repository":{"type":"git","url":"https://github.com/Rocketseat/rocketseat-vscode-react-native-snippets"},"engines":{"vscode":"0.10.x"},"categories":["Snippets"],"contributes":{"snippets":[{"language":"javascriptreact","path":"./snippets/snippets.json"},{"language":"javascript","path":"./snippets/snippets.json"},{"language":"typescript","path":"./snippets/snippets.json"},{"language":"typescriptreact","path":"./snippets/snippets.json"}]},"uuid":"00b0e9ab-d798-487b-a542-8304240d0da4","isBuiltin":false,"isUnderDevelopment":false,"id":"rocketseat.RocketseatReactNative","identifier":{"value":"rocketseat.RocketseatReactNative","_lower":"rocketseat.rocketseatreactnative"},"extensionLocation":{"$mid":1,"fsPath":"/home/isaquepf/.vscode-insiders/extensions/rocketseat.rocketseatreactnative-2.2.0","path":"/home/isaquepf/.vscode-insiders/extensions/rocketseat.rocketseatreactnative-2.2.0","scheme":"file"}},{"name":"ayu","displayName":"Ayu","description":"A simple theme with bright colors and comes in three versions — dark, light and mirage for all day long comfortable work.","version":"0.18.0","publisher":"teabyii","license":"MIT","repository":{"type":"git","url":"https://github.com/jsenjoy/vscode-ayu"},"bugs":{"url":"https://github.com/jsenjoy/vscode-ayu/issues","email":"teabyii@gmail.com"},"engines":{"vscode":"^1.13.0"},"categories":["Themes"],"keywords":["icon-theme","theme","ayu"],"homepage":"https://github.com/jsenjoy/vscode-ayu","icon":"assets/logo.png","contributes":{"themes":[{"label":"Ayu Dark","uiTheme":"vs-dark","path":"./ayu-dark.json"},{"label":"Ayu Dark Bordered","uiTheme":"vs-dark","path":"./ayu-dark-bordered.json"},{"label":"Ayu Light","uiTheme":"vs","path":"./ayu-light.json"},{"label":"Ayu Light Bordered","uiTheme":"vs","path":"./ayu-light-bordered.json"},{"label":"Ayu Mirage","uiTheme":"vs-dark","path":"./ayu-mirage.json"},{"label":"Ayu Mirage Bordered","uiTheme":"vs-dark","path":"./ayu-mirage-bordered.json"}],"iconThemes":[{"id":"ayu","label":"Ayu","path":"./ayu-icons.json"}]},"scripts":{"build":"ts-node ./src/build.ts","package":"vsce package","start":"npm run build; npm run package","publish":"vsce publish"},"devDependencies":{"ayu":"^7.0.2","ts-node":"^7.0.0","typescript":"^3.0.1","vsce":"^1.51.0"},"uuid":"5178733e-4b02-4829-95c5-1ce970847c23","isBuiltin":false,"isUnderDevelopment":false,"id":"teabyii.ayu","identifier":{"value":"teabyii.ayu","_lower":"teabyii.ayu"},"extensionLocation":{"$mid":1,"fsPath":"/home/isaquepf/.vscode-insiders/extensions/teabyii.ayu-0.18.0","path":"/home/isaquepf/.vscode-insiders/extensions/teabyii.ayu-0.18.0","scheme":"file"}},{"name":"vscode-icons","displayName":"vscode-icons","description":"Icons for Visual Studio Code","version":"8.8.0","publisher":"vscode-icons-team","license":"MIT","author":{"email":"roberto.huertas@outlook.com","name":"Roberto Huertas","url":"https://robertohuertas.com"},"maintainers":[{"email":"jimikar@gmail.com","name":"Jimi (Dimitris) Charalampidis"},{"email":"jenshausdorf@gmail.com","name":"Jens Hausdorf","url":"https://jens-hausdorf.de"},{"email":"stevenbojato04@gmail.com","name":"Manuel Bojato","url":"https://kingdarboja.github.io/"}],"repository":{"type":"git","url":"https://github.com/vscode-icons/vscode-icons"},"bugs":{"url":"https://github.com/vscode-icons/vscode-icons/issues","email":"roberto.huertas@outlook.com"},"engines":{"vscode":"^1.18.1","node":">=7.9.0"},"categories":["Themes"],"keywords":["icons","theme","icon-theme","multi-root ready","portable mode ready"],"preview":false,"homepage":"https://github.com/vscode-icons/vscode-icons","icon":"images/logo.png","galleryBanner":{"color":"#ffdd00"},"extensionKind":"ui","activationEvents":["*"],"main":"/home/isaquepf/.vscode-insiders/extensions/vscode-icons-team.vscode-icons-8.8.0/out/src/","contributes":{"iconThemes":[{"id":"vscode-icons","label":"VSCode Icons","path":"out/src/icons.json"}],"commands":[{"command":"vscode-icons.activateIcons","title":"Activate VSCode Icons","category":"Icons","callbackName":"activationCommand"},{"command":"vscode-icons.regenerateIcons","title":"Apply Icons Customization","category":"Icons","callbackName":"applyCustomizationCommand"},{"command":"vscode-icons.ngPreset","title":"Toggle Angular Preset (Workspace Level)","category":"Icons","callbackName":"toggleAngularPresetCommand"},{"command":"vscode-icons.nestPreset","title":"Toggle NestJS Preset (Workspace Level)","category":"Icons","callbackName":"toggleNestPresetCommand"},{"command":"vscode-icons.jsPreset","title":"Toggle Official JS Preset (User Level)","category":"Icons","callbackName":"toggleJsPresetCommand"},{"command":"vscode-icons.tsPreset","title":"Toggle Official TS Preset (User Level)","category":"Icons","callbackName":"toggleTsPresetCommand"},{"command":"vscode-icons.jsonPreset","title":"Toggle Official JSON Preset (User Level)","category":"Icons","callbackName":"toggleJsonPresetCommand"},{"command":"vscode-icons.hideFoldersPreset","title":"Toggle Folder Icons Visibility (User Level)","category":"Icons","callbackName":"toggleHideFoldersPresetCommand"},{"command":"vscode-icons.foldersAllDefaultIconPreset","title":"Toggle Specific Folder Icons (User Level)","category":"Icons","callbackName":"toggleFoldersAllDefaultIconPresetCommand"},{"command":"vscode-icons.hideExplorerArrowsPreset","title":"Toggle Explorer Folder Arrows Visibility (User Level)","category":"Icons","callbackName":"toggleHideExplorerArrowsPresetCommand"},{"command":"vscode-icons.restoreIcons","title":"Restore Default Icon Manifest","category":"Icons","callbackName":"restoreDefaultManifestCommand"},{"command":"vscode-icons.resetProjectDetectionDefaults","title":"Reset Project Detection Defaults","category":"Icons","callbackName":"resetProjectDetectionDefaultsCommand"}],"configuration":{"title":"vscode-icons configuration","properties":{"vsicons.dontShowNewVersionMessage":{"type":"boolean","default":false,"description":"If set to 'true', the new version message won't be shown anymore."},"vsicons.dontShowConfigManuallyChangedMessage":{"type":"boolean","default":false,"description":"If set to 'true', when manually changing the configurations, the 'restart' message won't be shown."},"vsicons.projectDetection.autoReload":{"type":"boolean","default":false,"description":"If set to 'true', the extension will restart automatically on project detection."},"vsicons.projectDetection.disableDetect":{"type":"boolean","default":false,"description":"If set to 'true', the extension will disable the project detection."},"vsicons.presets.angular":{"type":"boolean","default":false,"description":"If set to 'true', the extension will match some of the common Angular patterns."},"vsicons.presets.nestjs":{"type":"boolean","default":false,"description":"If set to 'true', the extension will match some of the common NestJS patterns."},"vsicons.presets.jsOfficial":{"type":"boolean","default":false,"description":"If set to 'true', the extension will use the official JS icon."},"vsicons.presets.tsOfficial":{"type":"boolean","default":false,"description":"If set to 'true', the extension will use the official TS icon."},"vsicons.presets.jsonOfficial":{"type":"boolean","default":false,"description":"If set to 'true', the extension will use the official JSON icon."},"vsicons.presets.hideFolders":{"type":"boolean","default":false,"description":"If set to 'true', all folders will be hidden."},"vsicons.presets.foldersAllDefaultIcon":{"type":"boolean","default":false,"description":"If set to 'true', all folders will have the default folder icon."},"vsicons.presets.hideExplorerArrows":{"type":"boolean","default":false,"description":"If set to 'true', the extension will hide the folder arrows in the 'Explorer'."},"vsicons.customIconFolderPath":{"type":"string","default":"","description":"The physical path to the parent folder where the custom icons folder resides on your local machine."},"vsicons.associations.files":{"type":"array","default":[],"description":"These custom associations will override the file icon associations defined by default."},"vsicons.associations.folders":{"type":"array","default":[],"description":"These custom associations will override the folder icon associations defined by default."},"vsicons.associations.fileDefault.file":{"type":"object","default":null,"description":"This setting will let you change the default file icon for dark themes."},"vsicons.associations.fileDefault.file_light":{"type":"object","default":null,"description":"This setting will let you change the default file icon for light themes."},"vsicons.associations.folderDefault.folder":{"type":"object","default":null,"description":"This setting will let you change the default folder icon for dark themes."},"vsicons.associations.folderDefault.root_folder":{"type":"object","default":null,"description":"This setting will let you change the default root folder icon for dark themes."},"vsicons.associations.folderDefault.folder_light":{"type":"object","default":null,"description":"This setting will let you change the default folder icon for light themes."},"vsicons.associations.folderDefault.root_folder_light":{"type":"object","default":null,"description":"This setting will let you change the default root folder icon for light themes."}}}},"scripts":{"format":"prettier --loglevel error --write \"{src,test}/**/*.ts\"","postformat":"npm run lint -- --fix","preinstall":"git submodule update --init --recursive","postinstall":"vscode-install","prebuild":"npm run compile","build":"node ./out/src/build.js","prebuild:dev":"npm run lint && npm run compile:dev","build:dev":"node ./out/src/build.js","pretest":"rimraf ./.nyc_output ./coverage && npm run lint && npm run compile:dev","test":"nyc -x '' mocha","posttest":"nyc report -r lcov","test:vs":"node ./node_modules/vscode/bin/test","vscode:prepublish":"npm run build","vscode:uninstall":"node ./out/src/uninstall.js","precompile":"rimraf ./out","compile":"tsc -p tsconfig.prod.json","compile:w":"npm run compile:dev -- -w","precompile:dev":"npm run precompile","compile:dev":"tsc","lint":"tslint -p .","example":"example"},"devDependencies":{"@types/chai":"^4.1.7","@types/lodash":"^4.14.123","@types/mocha":"^5.2.6","@types/node":"7","@types/opn":"^5.1.0","@types/proxyquire":"^1.3.28","@types/semver":"^5.5.0","@types/sinon":"^7.0.10","chai":"^4.2.0","examples-generator":"file:submodules/examples-generator","husky":"^1.3.1","lint-staged":"^8.1.5","mocha":"^6.0.2","nyc":"^13.3.0","prettier":"^1.16.4","proxyquire":"^2.1.0","rimraf":"^2.6.3","sinon":"^7.3.0","tslint":"^5.14.0","tslint-config-prettier":"^1.18.0","typescript":"^3.3.4000","vscode":"1.1.18"},"dependencies":{"lodash":"^4.17.11","opn":"^5.5.0","semver":"^5.6.0"},"lint-staged":{"src/**/*.ts":["prettier --parser typescript --write","git add","tslint"]},"husky":{"hooks":{"pre-commit":"lint-staged"}},"greenkeeper":{"ignore":["@types/node","vscode"]},"uuid":"9ccc1dd7-7ec4-4a46-bd4f-7d7b8b9d322a","isBuiltin":false,"isUnderDevelopment":false,"id":"vscode-icons-team.vscode-icons","identifier":{"value":"vscode-icons-team.vscode-icons","_lower":"vscode-icons-team.vscode-icons"},"extensionLocation":{"$mid":1,"fsPath":"/home/isaquepf/.vscode-insiders/extensions/vscode-icons-team.vscode-icons-8.8.0","path":"/home/isaquepf/.vscode-insiders/extensions/vscode-icons-team.vscode-icons-8.8.0","scheme":"file"}}]}